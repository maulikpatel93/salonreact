"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EntryBrowser = EntryBrowser;
exports.EntryServer = EntryServer;
exports.Meta = Meta;
exports.Links = Links;
exports.Scripts = Scripts;

var _react = require("react");

var _reactRouterDom = require("react-router-dom");

var _server = require("react-router-dom/server");

var _jsxRuntime = require("react/jsx-runtime");

const Context = /*#__PURE__*/(0, _react.createContext)(null);

function useEntryContext() {
  const context = (0, _react.useContext)(Context);

  if (!context) {
    throw new Error('`useEntryContext` must be rendered in `EntryContext`');
  }

  return context;
}

function Entry({
  context,
  children
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Context.Provider, {
    value: context,
    children: children
  });
}

function EntryBrowser({
  children
}) {
  const context = (0, _react.useMemo)(() => {
    var _document$getElementB;

    const serverHandoffString = (_document$getElementB = document.getElementById('__context__')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent;

    if (!serverHandoffString) {
      throw new Error('Sever handoff script element was not found');
    }

    const entryContext = JSON.parse(serverHandoffString);
    entryContext.serverHandoffString = serverHandoffString;
    return entryContext;
  }, []);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactRouterDom.BrowserRouter, {
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Entry, {
      context: context,
      children: children
    })
  });
}

function EntryServer({
  url,
  context,
  children
}) {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_server.StaticRouter, {
    location: url,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Entry, {
      context: context,
      children: children
    })
  });
}

function Meta() {
  return null;
}

function Links() {
  const context = useEntryContext();
  return Object.entries(context.buildManifest).filter(([, src]) => src.endsWith('.css')).map(([key, src]) => /*#__PURE__*/(0, _jsxRuntime.jsx)("link", {
    href: encodeURI(src),
    rel: "stylesheet"
  }, key));
}

function Scripts() {
  const {
    serverHandoffString,
    buildManifest
  } = useEntryContext();
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("script", {
      id: "__context__",
      type: "application/json" // eslint-disable-next-line react/no-danger
      ,
      dangerouslySetInnerHTML: {
        __html: serverHandoffString
      }
    }), Object.entries(buildManifest).filter(([, src]) => src.endsWith('.js')).map(([key, src]) => /*#__PURE__*/(0, _jsxRuntime.jsx)("script", {
      src: encodeURI(src),
      async: true
    }, key))]
  });
}