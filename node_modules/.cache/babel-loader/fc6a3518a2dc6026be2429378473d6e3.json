{"ast":null,"code":"import axios from \"axios\";\nimport { store } from \"../store\";\nimport config from \"../config\";\nimport authHeader from \"./auth-header\";\nconst API_URL = config.API_URL;\n\nconst create = values => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const formData = new FormData();\n\n  for (let value in values) {\n    if ([\"gender\"].includes(value) && values[value] && typeof values[value] === \"object\") {\n      formData.append(value, values[value].value);\n    } else {\n      formData.append(value, values[value]);\n    }\n  }\n\n  const action = \"afterlogin/categories/store\";\n  formData.append(\"auth_key\", auth_key);\n  formData.append(\"action\", action);\n  formData.append(\"salon_id\", auth.user.salon_id);\n  return axios.post(API_URL + action, formData, {\n    headers: authHeader({\n      contentType: \"multipart/form-data\"\n    })\n  });\n};\n\nconst update = values => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const formData = new FormData();\n\n  for (let value in values) {\n    if ([\"gender\"].includes(value) && values[value] && typeof values[value] === \"object\") {\n      formData.append(value, values[value].value);\n    } else {\n      formData.append(value, values[value]);\n    }\n  }\n\n  const action = \"afterlogin/categories/update/\" + values.id;\n  formData.append(\"auth_key\", auth_key);\n  formData.append(\"action\", action);\n  formData.append(\"role_id\", 6);\n  formData.append(\"salon_id\", auth.user.salon_id);\n  return axios.post(API_URL + action, formData, {\n    headers: authHeader({\n      contentType: \"multipart/form-data\"\n    })\n  });\n};\n\nconst view = values => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const sort = values && values.sort;\n  const page = values && values.page;\n  const next_page_url = values && values.next_page_url;\n  const result = values && values.result ? values.result : '';\n  let sortstring = \"\";\n\n  if (sort) {\n    let sortArray = [];\n    Object.keys(sort).map(function (key, index) {\n      sortArray[index] = `sort[${key}]=${sort[key]}`;\n    });\n\n    if (sortArray.length > 0) {\n      let jsort = sortArray.join(\"&\");\n      sortstring = jsort;\n    }\n  }\n\n  const pagination = values && values.option ? false : true;\n  const action = page ? `afterlogin/categories/view?page=${page}&${sortstring}` : `afterlogin/categories/view?${sortstring}`;\n  const data = {\n    auth_key: auth_key,\n    action: action,\n    salon_id: auth.user.salon_id,\n    pagination: values && values.id ? false : pagination,\n    //true or false\n    id: values && values.id ? values.id : \"\",\n    field: values && values.id ? \"\" : \"name\",\n    // first_name,last_name,email\n    salon_field: false,\n    //business_name,owner_name\n    result: result,\n    //business_name,owner_name\n    option: values && values.option ? values.option : ''\n  };\n  return axios.post(next_page_url ? `${next_page_url}&${sortstring}` : API_URL + action, data, {\n    headers: authHeader()\n  });\n};\n\nconst deleted = values => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const action = `afterlogin/categories/delete/${values.id}`;\n  const data = {\n    auth_key: auth_key,\n    action: action\n  };\n  return axios.post(API_URL + action, data, {\n    headers: authHeader()\n  });\n};\n\nconst suggetionlist = values => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const page = values && values.page;\n  const next_page_url = values && values.next_page_url;\n  let q = values && values.q ? values.q : \"\";\n  const action = page ? `afterlogin/categories/view?page=${page}&q=${q}` : `afterlogin/categories/view?q=${q}`;\n  const data = {\n    auth_key: auth_key,\n    action: action,\n    salon_id: auth.user.salon_id,\n    pagination: true,\n    //true or false\n    id: values && values.id ? values.id : \"\",\n    field: values && values.id ? \"\" : \"name\",\n    // first_name,last_name,email\n    salon_field: false //business_name,owner_name\n\n  };\n  return axios.post(next_page_url ? `${next_page_url}&q=${q}` : API_URL + action, data, {\n    headers: authHeader()\n  });\n};\n\nconst supplierApiController = {\n  create,\n  update,\n  view,\n  deleted,\n  suggetionlist\n};\nexport default supplierApiController;","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/services/category.service.js"],"names":["axios","store","config","authHeader","API_URL","create","values","auth","getState","auth_key","user","formData","FormData","value","includes","append","action","salon_id","post","headers","contentType","update","id","view","sort","page","next_page_url","result","sortstring","sortArray","Object","keys","map","key","index","length","jsort","join","pagination","option","data","field","salon_field","deleted","suggetionlist","q","supplierApiController"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { store } from \"../store\";\nimport config from \"../config\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = config.API_URL;\n\nconst create = (values) => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const formData = new FormData();\n  for (let value in values) {\n    if ([\"gender\"].includes(value) && values[value] && typeof values[value] === \"object\") {\n      formData.append(value, values[value].value);\n    } else {\n      formData.append(value, values[value]);\n    }\n  }\n  const action = \"afterlogin/categories/store\";\n  formData.append(\"auth_key\", auth_key);\n  formData.append(\"action\", action);\n  formData.append(\"salon_id\", auth.user.salon_id);\n  return axios.post(API_URL + action, formData, { headers: authHeader({ contentType: \"multipart/form-data\" }) });\n};\n\nconst update = (values) => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const formData = new FormData();\n  for (let value in values) {\n    if ([\"gender\"].includes(value) && values[value] && typeof values[value] === \"object\") {\n      formData.append(value, values[value].value);\n    } else {\n      formData.append(value, values[value]);\n    }\n  }\n  const action = \"afterlogin/categories/update/\" + values.id;\n  formData.append(\"auth_key\", auth_key);\n  formData.append(\"action\", action);\n  formData.append(\"role_id\", 6);\n  formData.append(\"salon_id\", auth.user.salon_id);\n  return axios.post(API_URL + action, formData, { headers: authHeader({ contentType: \"multipart/form-data\" }) });\n};\n\nconst view = (values) => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const sort = values && values.sort;\n  const page = values && values.page;\n  const next_page_url = values && values.next_page_url;\n  const result = values && values.result ? values.result : '';\n  let sortstring = \"\";\n  if (sort) {\n    let sortArray = [];\n    Object.keys(sort).map(function (key, index) {\n      sortArray[index] = `sort[${key}]=${sort[key]}`;\n    });\n    if (sortArray.length > 0) {\n      let jsort = sortArray.join(\"&\");\n      sortstring = jsort;\n    }\n  }\n  const pagination = values && values.option ? false : true;\n  const action = page ? `afterlogin/categories/view?page=${page}&${sortstring}` : `afterlogin/categories/view?${sortstring}`;\n  const data = {\n    auth_key: auth_key,\n    action: action,\n    salon_id: auth.user.salon_id,\n    pagination: values && values.id ? false : pagination, //true or false\n    id: values && values.id ? values.id : \"\",\n    field: values && values.id ? \"\" : \"name\", // first_name,last_name,email\n    salon_field: false, //business_name,owner_name\n    result: result, //business_name,owner_name\n    option: values && values.option ? values.option : ''\n  };\n  return axios.post(next_page_url ? `${next_page_url}&${sortstring}` : API_URL + action, data, { headers: authHeader() });\n};\n\nconst deleted = (values) => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const action = `afterlogin/categories/delete/${values.id}`;\n  const data = {\n    auth_key: auth_key,\n    action: action,\n  };\n  return axios.post(API_URL + action, data, { headers: authHeader() });\n};\n\nconst suggetionlist = (values) => {\n  const auth = store.getState().auth;\n  const auth_key = auth.user.auth_key;\n  const page = values && values.page;\n  const next_page_url = values && values.next_page_url;\n  let q = values && values.q ? values.q : \"\";\n  const action = page ? `afterlogin/categories/view?page=${page}&q=${q}` : `afterlogin/categories/view?q=${q}`;\n  const data = {\n    auth_key: auth_key,\n    action: action,\n    salon_id: auth.user.salon_id,\n    pagination: true, //true or false\n    id: values && values.id ? values.id : \"\",\n    field: values && values.id ? \"\" : \"name\", // first_name,last_name,email\n    salon_field: false, //business_name,owner_name\n  };\n  return axios.post(next_page_url ? `${next_page_url}&q=${q}` : API_URL + action, data, { headers: authHeader() });\n};\n\nconst supplierApiController = {\n  create,\n  update,\n  view,\n  deleted,\n  suggetionlist,\n};\nexport default supplierApiController;\n"]},"metadata":{},"sourceType":"module"}