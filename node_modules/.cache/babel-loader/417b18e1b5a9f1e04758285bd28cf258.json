{"ast":null,"code":"import Swal from \"sweetalert2\";\n\nconst sweatalert = props => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: props.icon\n  });\n};\n\nconst swalSuccess = props => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: \"success\"\n  });\n};\n\nconst swalError = props => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: \"error\"\n  });\n};\n\nconst swalConfirm = (btn, props) => {\n  if (btn.getAttribute('confirmOK') == \"1\") {\n    return true;\n  }\n\n  Swal.fire({\n    title: `<h5 class=\"mb-0\">${props.title}</h5>`,\n    text: props.message,\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: props.confirmButtonText\n  }).then(result => {\n    if (result.value) {\n      btn.setAttribute('confirmOK', '1');\n      btn.click();\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\n      btn.setAttribute('confirmOK', '0');\n    }\n  });\n  return false;\n};\n\nexport { sweatalert, swalSuccess, swalError, swalConfirm };","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/component/Sweatalert2/index.js"],"names":["Swal","sweatalert","props","fire","title","text","messsage","type","icon","swalSuccess","swalError","swalConfirm","btn","getAttribute","message","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","setAttribute","click","dismiss","DismissReason","cancel"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BF,EAAAA,IAAI,CAACG,IAAL,CAAU;AACRC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KADL;AAERC,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAFJ;AAGRC,IAAAA,IAAI,EAAEL,KAAK,CAACM;AAHJ,GAAV;AAKD,CAND;;AAQA,MAAMC,WAAW,GAAIP,KAAD,IAAW;AAC7BF,EAAAA,IAAI,CAACG,IAAL,CAAU;AACRC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KADL;AAERC,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAFJ;AAGRC,IAAAA,IAAI,EAAE;AAHE,GAAV;AAKD,CAND;;AAQA,MAAMG,SAAS,GAAIR,KAAD,IAAW;AAC3BF,EAAAA,IAAI,CAACG,IAAL,CAAU;AACRC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KADL;AAERC,IAAAA,IAAI,EAAEH,KAAK,CAACI,QAFJ;AAGRC,IAAAA,IAAI,EAAE;AAHE,GAAV;AAKD,CAND;;AAQA,MAAMI,WAAW,GAAG,CAACC,GAAD,EAAMV,KAAN,KAAgB;AAClC,MAAIU,GAAG,CAACC,YAAJ,CAAiB,WAAjB,KAAiC,GAArC,EAA0C;AACxC,WAAO,IAAP;AACD;;AACDb,EAAAA,IAAI,CAACG,IAAL,CAAU;AACRC,IAAAA,KAAK,EAAG,oBAAmBF,KAAK,CAACE,KAAM,OAD/B;AAERC,IAAAA,IAAI,EAAEH,KAAK,CAACY,OAFJ;AAGRP,IAAAA,IAAI,EAAE,SAHE;AAIRQ,IAAAA,gBAAgB,EAAE,IAJV;AAKRC,IAAAA,kBAAkB,EAAE,SALZ;AAMRC,IAAAA,iBAAiB,EAAE,MANX;AAORC,IAAAA,iBAAiB,EAAEhB,KAAK,CAACgB;AAPjB,GAAV,EAQGC,IARH,CAQSC,MAAD,IAAY;AAClB,QAAIA,MAAM,CAACC,KAAX,EAAkB;AAChBT,MAAAA,GAAG,CAACU,YAAJ,CAAiB,WAAjB,EAA8B,GAA9B;AACAV,MAAAA,GAAG,CAACW,KAAJ;AACD,KAHD,MAGO,IAAIH,MAAM,CAACI,OAAP,KAAmBxB,IAAI,CAACyB,aAAL,CAAmBC,MAA1C,EAAkD;AACvDd,MAAAA,GAAG,CAACU,YAAJ,CAAiB,WAAjB,EAA8B,GAA9B;AACD;AACF,GAfD;AAgBA,SAAO,KAAP;AACD,CArBD;;AAuBA,SAASrB,UAAT,EAAqBQ,WAArB,EAAkCC,SAAlC,EAA6CC,WAA7C","sourcesContent":["import Swal from \"sweetalert2\";\n\nconst sweatalert = (props) => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: props.icon,\n  });\n};\n\nconst swalSuccess = (props) => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: \"success\",\n  });\n};\n\nconst swalError = (props) => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: \"error\",\n  });\n};\n\nconst swalConfirm = (btn, props) => {\n  if (btn.getAttribute('confirmOK') == \"1\") {\n    return true;\n  }\n  Swal.fire({\n    title: `<h5 class=\"mb-0\">${props.title}</h5>`,\n    text: props.message,\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: props.confirmButtonText,\n  }).then((result) => {\n    if (result.value) {\n      btn.setAttribute('confirmOK', '1');\n      btn.click();\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\n      btn.setAttribute('confirmOK', '0');\n    }\n  });\n  return false;\n};\n\nexport { sweatalert, swalSuccess, swalError, swalConfirm };\n"]},"metadata":{},"sourceType":"module"}