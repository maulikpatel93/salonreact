{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./slices/auth\";\nimport messageReducer from \"./slices/message\";\nimport imageReducer from \"../store/slices/imageSlice\";\nimport clientReducer from \"../store/slices/clientSlice\";\nimport supplierReducer from \"../store/slices/supplierSlice\";\nimport productReducer from \"../store/slices/productSlice\";\nimport categoryReducer from \"../store/slices/categorySlice\";\nimport serviceReducer from \"../store/slices/serviceSlice\";\nimport taxReducer from \"../store/slices/taxSlice\"; //-----------------------|| COMBINE REDUCER ||-----------------------//\n\nconst rootPersistConfig = {\n  key: \"root\",\n  timeout: 500,\n  storage // blacklist: [\"message\", \"image\", 'isView']\n\n};\nconst reducer = combineReducers({\n  auth: persistReducer({\n    key: \"auth\",\n    storage,\n    keyPrefix: \"salon-\",\n    debug: false,\n    timeout: 20000\n  }, authReducer),\n  message: messageReducer,\n  client: persistReducer({\n    key: \"client\",\n    storage,\n    keyPrefix: \"salon-\",\n    debug: false,\n    timeout: 20000,\n    whitelist: ['isTabView']\n  }, clientReducer),\n  product: persistReducer({\n    key: \"product\",\n    storage,\n    keyPrefix: \"salon-\",\n    debug: false,\n    timeout: 20000,\n    whitelist: ['isTabView']\n  }, productReducer),\n  supplier: persistReducer({\n    key: \"supplier\",\n    storage,\n    keyPrefix: \"salon-\",\n    debug: false,\n    timeout: 20000,\n    whitelist: ['isTabView']\n  }, supplierReducer),\n  service: persistReducer({\n    key: \"service\",\n    storage,\n    keyPrefix: \"salon-\",\n    debug: false,\n    timeout: 20000,\n    whitelist: ['isTabView']\n  }, serviceReducer),\n  category: persistReducer({\n    key: \"category\",\n    storage,\n    keyPrefix: \"salon-\",\n    debug: false,\n    timeout: 20000,\n    whitelist: ['isTabView']\n  }, categoryReducer),\n  tax: taxReducer,\n  image: imageReducer\n});\nexport default reducer;","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/store/reducer.js"],"names":["combineReducers","persistReducer","storage","authReducer","messageReducer","imageReducer","clientReducer","supplierReducer","productReducer","categoryReducer","serviceReducer","taxReducer","rootPersistConfig","key","timeout","reducer","auth","keyPrefix","debug","message","client","whitelist","product","supplier","service","category","tax","image"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,MADmB;AAExBC,EAAAA,OAAO,EAAE,GAFe;AAGxBZ,EAAAA,OAHwB,CAIxB;;AAJwB,CAA1B;AAOA,MAAMa,OAAO,GAAGf,eAAe,CAAC;AAC9BgB,EAAAA,IAAI,EAAEf,cAAc,CAClB;AACEY,IAAAA,GAAG,EAAE,MADP;AAEEX,IAAAA,OAFF;AAGEe,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEJ,IAAAA,OAAO,EAAE;AALX,GADkB,EAQlBX,WARkB,CADU;AAW9BgB,EAAAA,OAAO,EAAEf,cAXqB;AAY9BgB,EAAAA,MAAM,EAAEnB,cAAc,CACpB;AACEY,IAAAA,GAAG,EAAE,QADP;AAEEX,IAAAA,OAFF;AAGEe,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEJ,IAAAA,OAAO,EAAE,KALX;AAMEO,IAAAA,SAAS,EAAC,CAAC,WAAD;AANZ,GADoB,EASpBf,aAToB,CAZQ;AAuB9BgB,EAAAA,OAAO,EAAErB,cAAc,CACrB;AACEY,IAAAA,GAAG,EAAE,SADP;AAEEX,IAAAA,OAFF;AAGEe,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEJ,IAAAA,OAAO,EAAE,KALX;AAMEO,IAAAA,SAAS,EAAC,CAAC,WAAD;AANZ,GADqB,EASrBb,cATqB,CAvBO;AAkC9Be,EAAAA,QAAQ,EAAEtB,cAAc,CACtB;AACEY,IAAAA,GAAG,EAAE,UADP;AAEEX,IAAAA,OAFF;AAGEe,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEJ,IAAAA,OAAO,EAAE,KALX;AAMEO,IAAAA,SAAS,EAAC,CAAC,WAAD;AANZ,GADsB,EAStBd,eATsB,CAlCM;AA6C9BiB,EAAAA,OAAO,EAAEvB,cAAc,CACrB;AACEY,IAAAA,GAAG,EAAE,SADP;AAEEX,IAAAA,OAFF;AAGEe,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEJ,IAAAA,OAAO,EAAE,KALX;AAMEO,IAAAA,SAAS,EAAC,CAAC,WAAD;AANZ,GADqB,EASrBX,cATqB,CA7CO;AAwD9Be,EAAAA,QAAQ,EAAExB,cAAc,CACtB;AACEY,IAAAA,GAAG,EAAE,UADP;AAEEX,IAAAA,OAFF;AAGEe,IAAAA,SAAS,EAAE,QAHb;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEJ,IAAAA,OAAO,EAAE,KALX;AAMEO,IAAAA,SAAS,EAAC,CAAC,WAAD;AANZ,GADsB,EAStBZ,eATsB,CAxDM;AAmE9BiB,EAAAA,GAAG,EAAEf,UAnEyB;AAoE9BgB,EAAAA,KAAK,EAAEtB;AApEuB,CAAD,CAA/B;AAuEA,eAAeU,OAAf","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport authReducer from \"./slices/auth\";\nimport messageReducer from \"./slices/message\";\nimport imageReducer from \"../store/slices/imageSlice\";\nimport clientReducer from \"../store/slices/clientSlice\";\nimport supplierReducer from \"../store/slices/supplierSlice\";\nimport productReducer from \"../store/slices/productSlice\";\nimport categoryReducer from \"../store/slices/categorySlice\";\nimport serviceReducer from \"../store/slices/serviceSlice\";\nimport taxReducer from \"../store/slices/taxSlice\";\n//-----------------------|| COMBINE REDUCER ||-----------------------//\nconst rootPersistConfig = {\n  key: \"root\",\n  timeout: 500,\n  storage,\n  // blacklist: [\"message\", \"image\", 'isView']\n};\n\nconst reducer = combineReducers({\n  auth: persistReducer(\n    {\n      key: \"auth\",\n      storage,\n      keyPrefix: \"salon-\",\n      debug: false,\n      timeout: 20000,\n    },\n    authReducer,\n  ),\n  message: messageReducer,\n  client: persistReducer(\n    {\n      key: \"client\",\n      storage,\n      keyPrefix: \"salon-\",\n      debug: false,\n      timeout: 20000,\n      whitelist:['isTabView']\n    },\n    clientReducer,\n  ),\n  product: persistReducer(\n    {\n      key: \"product\",\n      storage,\n      keyPrefix: \"salon-\",\n      debug: false,\n      timeout: 20000,\n      whitelist:['isTabView']\n    },\n    productReducer,\n  ),\n  supplier: persistReducer(\n    {\n      key: \"supplier\",\n      storage,\n      keyPrefix: \"salon-\",\n      debug: false,\n      timeout: 20000,\n      whitelist:['isTabView']\n    },\n    supplierReducer,\n  ),\n  service: persistReducer(\n    {\n      key: \"service\",\n      storage,\n      keyPrefix: \"salon-\",\n      debug: false,\n      timeout: 20000,\n      whitelist:['isTabView']\n    },\n    serviceReducer,\n  ),\n  category: persistReducer(\n    {\n      key: \"category\",\n      storage,\n      keyPrefix: \"salon-\",\n      debug: false,\n      timeout: 20000,\n      whitelist:['isTabView']\n    },\n    categoryReducer,\n  ),\n  tax: taxReducer,\n  image: imageReducer,\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}