{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/git/salonreact/src/component/form/CustomSelect.js\";\nimport { FieldProps } from \"formik\";\nimport React from \"react\";\nimport Select from \"react-select\"; // interface Option {\n//   label: string;\n//   value: string;\n// }\n// interface CustomSelectProps extends FieldProps {\n//   options: OptionsType;\n//   isMulti?: boolean;\n//   className?: string;\n//   placeholder?: string;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomSelect = _ref => {\n  let {\n    className,\n    placeholder,\n    field,\n    form,\n    options,\n    isMulti = false,\n    label,\n    controlId\n  } = _ref;\n\n  const onChange = option => {\n    if (option) {\n      form.setFieldValue(field.name, isMulti ? option.map(item => item.value) : option.value);\n    } else {\n      form.setFieldValue(field.name, isMulti ? \"\" : \"\");\n    }\n  };\n\n  const getValue = () => {\n    if (options) {\n      return isMulti ? options.filter(option => field.value.indexOf(option.value) >= 0) : options.find(option => option.value === field.value);\n    } else {\n      return isMulti ? [] : \"\";\n    }\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      color: state.isSelected ? \"#fff\" : \"\",\n      borderWidth: state.isFocused ? \"0\" : \"0\"\n    }),\n    control: (provided, state) => ({ ...provided,\n      borderWidth: state.isFocused ? \"0px\" : \"1px\"\n    }),\n    menuPortal: provided => ({ ...provided,\n      zIndex: 3\n    }),\n    menu: provided => ({ ...provided,\n      zIndex: 3\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      className: className,\n      id: controlId,\n      name: field.name,\n      value: getValue(),\n      onChange: onChange,\n      placeholder: placeholder,\n      options: options,\n      isMulti: isMulti,\n      isClearable: true,\n      styles: customStyles,\n      theme: theme => ({ ...theme,\n        colors: { ...theme.colors,\n          border: \"1px\",\n          primary25: \"#F4EEEB\",\n          primary: \"#8C1C4D\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CustomSelect;\nexport default CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/component/form/CustomSelect.js"],"names":["FieldProps","React","Select","CustomSelect","className","placeholder","field","form","options","isMulti","label","controlId","onChange","option","setFieldValue","name","map","item","value","getValue","filter","indexOf","find","customStyles","provided","state","color","isSelected","borderWidth","isFocused","control","menuPortal","zIndex","menu","theme","colors","border","primary25","primary"],"mappings":"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","sourcesContent":["import { FieldProps } from \"formik\";\nimport React from \"react\";\nimport Select from \"react-select\";\n\n// interface Option {\n//   label: string;\n//   value: string;\n// }\n\n// interface CustomSelectProps extends FieldProps {\n//   options: OptionsType;\n//   isMulti?: boolean;\n//   className?: string;\n//   placeholder?: string;\n// }\n\nexport const CustomSelect = ({ className, placeholder, field, form, options, isMulti = false, label, controlId }) => {\n  const onChange = (option) => {\n    if (option) {\n      form.setFieldValue(field.name, isMulti ? option.map((item) => item.value) : option.value);\n    } else {\n      form.setFieldValue(field.name, isMulti ? \"\" : \"\");\n    }\n  };\n\n  const getValue = () => {\n    if (options) {\n      return isMulti ? options.filter((option) => field.value.indexOf(option.value) >= 0) : options.find((option) => option.value === field.value);\n    } else {\n      return isMulti ? [] : \"\";\n    }\n  };\n\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      color: state.isSelected ? \"#fff\" : \"\",\n      borderWidth: state.isFocused ? \"0\" : \"0\",\n    }),\n    control: (provided, state) => ({\n      ...provided,\n      borderWidth: state.isFocused ? \"0px\" : \"1px\",\n    }),\n    menuPortal: (provided) => ({ ...provided, zIndex: 3 }),\n    menu: (provided) => ({ ...provided, zIndex: 3 }),\n  };\n  return (\n    <>\n      <Select\n        className={className}\n        id={controlId}\n        name={field.name}\n        value={getValue()}\n        onChange={onChange}\n        placeholder={placeholder}\n        options={options}\n        isMulti={isMulti}\n        isClearable\n        styles={customStyles}\n        theme={(theme) => ({\n          ...theme,\n          colors: {\n            ...theme.colors,\n            border: \"1px\",\n            primary25: \"#F4EEEB\",\n            primary: \"#8C1C4D\",\n          },\n        })}\n      />\n    </>\n  );\n};\n\nexport default CustomSelect;\n"]},"metadata":{},"sourceType":"module"}