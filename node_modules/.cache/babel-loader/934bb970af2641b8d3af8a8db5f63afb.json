{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientEditForm.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\"; // validation Formik\n\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, SelectField, TextareaField, SwitchField, InputFieldImage, DatePickerField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\nimport { closeClientDetailModal, clientUpdateApi, clientDetailApi, clientGridViewApi, clientListViewApi } from \"../../../store/slices/clientSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport useErrorsRef from \"../../../hooks/useErrorsRef\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientEditForm = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [loading, setLoading] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const currentUser = auth.user;\n  const detail = useSelector(state => state.client.isDetailData);\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation();\n  const scriptedRef = useScriptRef();\n  const serverErrors = useErrorsRef();\n\n  const handleCloseClientDetailModal = () => {\n    dispatch(closeClientDetailModal());\n  };\n\n  const initialValues = {\n    id: detail && detail.id,\n    first_name: detail && detail.first_name,\n    last_name: detail && detail.last_name,\n    email: detail && detail.email,\n    phone_number: detail && detail.phone_number,\n    date_of_birth: detail && detail.date_of_birth,\n    gender: detail && detail.gender,\n    address: detail && detail.address,\n    street: detail && detail.street,\n    suburb: detail && detail.suburb,\n    state: detail && detail.state,\n    postcode: detail && detail.postcode,\n    description: detail && detail.description,\n    send_sms_notification: detail && detail.send_sms_notification,\n    send_email_notification: detail && detail.send_email_notification,\n    recieve_marketing_email: detail && detail.recieve_marketing_email\n  };\n  const validationSchema = Yup.object().shape({\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    date_of_birth: Yup.string().trim().label(t(\"date_of_birth\")).required(),\n    gender: Yup.string().trim().label(t(\"gender\")).required().nullable(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required()\n  });\n  yupconfig();\n\n  const handleClientSubmit = (values, _ref) => {\n    let {\n      setErrors,\n      setStatus,\n      setSubmitting,\n      resetForm\n    } = _ref;\n    setLoading(true);\n\n    try {\n      dispatch(clientUpdateApi(values)).then(action => {\n        console.log(action);\n\n        if (action.meta.requestStatus == 'fulfilled') {\n          setStatus({\n            success: true\n          });\n          dispatch(clientDetailApi({\n            id: action.payload.id\n          }));\n          sweatalert({\n            title: t('updated'),\n            text: t('updated_successfully'),\n            icon: \"success\"\n          });\n        } else if (action.meta.requestStatus == 'rejected') {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n\n          if (status == 422) {\n            setErrors(errors);\n          }\n\n          setStatus({\n            success: false\n          });\n          setSubmitting(false);\n        }\n      });\n\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n\n      setStatus({\n        success: false\n      });\n      setLoading(false);\n    }\n  };\n\n  const genderOptions = [{\n    value: \"Male\",\n    label: t(\"male\")\n  }, {\n    value: \"Female\",\n    label: t(\"female\")\n  }, {\n    value: \"Other\",\n    label: t(\"other\")\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleClientSubmit,\n      children: _s(_ref2 => {\n        _s();\n\n        let {\n          handleSubmit,\n          setFieldValue,\n          values,\n          status\n        } = _ref2;\n        useEffect(() => {\n          if (detail) {// const checkboxfields = [\"send_sms_notification\", \"send_email_notification\", \"recieve_marketing_email\"];\n            // checkboxfields.forEach((field) => setFieldValue(field, detail[field], false));\n          }\n        }, [detail, status]);\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          className: \"px-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row gx-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"first_name\",\n                value: values.first_name,\n                label: t(\"first_name\"),\n                controlId: \"clientForm-first_name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"last_name\",\n                value: values.last_name,\n                label: t(\"last_name\"),\n                controlId: \"clientForm-last_name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row gx-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"phone_number\",\n                value: values.phone_number,\n                mask: \"999-999-9999\",\n                label: t(\"phone_number\"),\n                controlId: \"clientForm-phone_number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"email\",\n                value: values.email,\n                label: t(\"email\"),\n                controlId: \"clientForm-email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row gx-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"date\",\n                name: \"date_of_birth\",\n                value: values.date_of_birth,\n                label: t(\"date_of_birth\"),\n                controlId: \"clientForm-date_of_birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                name: \"gender\",\n                label: t(\"gender\"),\n                options: genderOptions,\n                placeholder: t(\"--select--\"),\n                controlId: \"clientForm-gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MapAddressField, {\n            name: \"address\",\n            label: t(\"address\"),\n            value: values.address,\n            placeholder: t(\"typing_address\"),\n            controlId: \"clientForm-address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row gx-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"street\",\n                value: values.street,\n                label: t(\"street\"),\n                controlId: \"clientForm-street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row gx-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"suburb\",\n                value: values.suburb,\n                label: t(\"suburb\"),\n                controlId: \"clientForm-suburb\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-3 col-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"state\",\n                value: values.state,\n                label: t(\"state\"),\n                controlId: \"clientForm-state\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-3 col-6 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                type: \"text\",\n                name: \"postcode\",\n                value: values.postcode,\n                label: t(\"postcode\"),\n                controlId: \"clientForm-postcode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(TextareaField, {\n              type: \"text\",\n              name: \"description\",\n              value: values.description,\n              label: t(\"client_notes\"),\n              controlId: \"clientForm-description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: t(\"notification\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SwitchField, {\n              name: \"send_sms_notification\",\n              label: t(\"send_sms_notification\"),\n              controlId: \"clientForm-send_sms_notification\",\n              value: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SwitchField, {\n              name: \"send_email_notification\",\n              label: t(\"send_email_notification\"),\n              controlId: \"clientForm-send_email_notification\",\n              value: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SwitchField, {\n              name: \"recieve_marketing_email\",\n              label: t(\"recieve_marketing_email\"),\n              controlId: \"clientForm-recieve_marketing_email\",\n              value: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 pe-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn w-100 btn-lg\",\n              value: t(\"update_client\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this);\n      }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ClientEditForm, \"Ddj44pVyL/D9BnrqLDyaqinK8vI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useTranslation, useScriptRef, useErrorsRef];\n});\n\n_c = ClientEditForm;\nexport default ClientEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientEditForm\");","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientEditForm.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","useTranslation","Yup","Formik","Form","config","yupconfig","InputField","MapAddressField","SelectField","TextareaField","SwitchField","InputFieldImage","DatePickerField","sweatalert","closeClientDetailModal","clientUpdateApi","clientDetailApi","clientGridViewApi","clientListViewApi","removeImage","useScriptRef","useErrorsRef","ClientEditForm","props","loading","setLoading","auth","state","currentUser","user","detail","client","isDetailData","dispatch","t","scriptedRef","serverErrors","handleCloseClientDetailModal","initialValues","id","first_name","last_name","email","phone_number","date_of_birth","gender","address","street","suburb","postcode","description","send_sms_notification","send_email_notification","recieve_marketing_email","validationSchema","object","shape","string","trim","max","label","required","matches","phone_number_pattern","phone_number_334_error","nullable","handleClientSubmit","values","setErrors","setStatus","setSubmitting","resetForm","then","action","console","log","meta","requestStatus","success","payload","title","text","icon","status","errors","message","current","err","genderOptions","value","handleSubmit","setFieldValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, SelectField, TextareaField, SwitchField, InputFieldImage, DatePickerField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\nimport { closeClientDetailModal, clientUpdateApi, clientDetailApi, clientGridViewApi, clientListViewApi } from \"../../../store/slices/clientSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport useErrorsRef from \"../../../hooks/useErrorsRef\";\n\nconst ClientEditForm = (props) => {\n  const [loading, setLoading] = useState(false);\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n  const detail = useSelector((state) => state.client.isDetailData);\n  \n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const scriptedRef = useScriptRef();\n  const serverErrors = useErrorsRef();\n\n  const handleCloseClientDetailModal = () => {\n    dispatch(closeClientDetailModal());\n  };\n\n  const initialValues = {\n    id: detail && detail.id,\n    first_name: detail && detail.first_name,\n    last_name: detail && detail.last_name,\n    email: detail && detail.email,\n    phone_number: detail && detail.phone_number,\n    date_of_birth: detail && detail.date_of_birth,\n    gender: detail && detail.gender,\n    address: detail && detail.address,\n    street: detail && detail.street,\n    suburb: detail && detail.suburb,\n    state: detail && detail.state,\n    postcode: detail && detail.postcode,\n    description: detail && detail.description,\n    send_sms_notification: detail && detail.send_sms_notification,\n    send_email_notification: detail && detail.send_email_notification,\n    recieve_marketing_email: detail && detail.recieve_marketing_email,\n  };\n\n  const validationSchema = Yup.object().shape({\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    date_of_birth: Yup.string().trim().label(t(\"date_of_birth\")).required(),\n    gender: Yup.string().trim().label(t(\"gender\")).required().nullable(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required()\n  });\n  yupconfig();\n\n  const handleClientSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(clientUpdateApi(values)).then((action) => {\n        console.log(action);\n        if(action.meta.requestStatus == 'fulfilled'){\n          setStatus({ success: true });\n          dispatch(clientDetailApi({ id: action.payload.id }));\n          sweatalert({title:t('updated'), text:t('updated_successfully'), icon:\"success\"});\n        }else if(action.meta.requestStatus == 'rejected'){\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if(status == 422){\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const genderOptions = [\n    { value: \"Male\", label: t(\"male\") },\n    { value: \"Female\", label: t(\"female\") },\n    { value: \"Other\", label: t(\"other\") },\n  ];\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={true} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleClientSubmit}>\n        {({ handleSubmit, setFieldValue, values, status }) => {\n          useEffect(() => {\n            if(detail){\n              // const checkboxfields = [\"send_sms_notification\", \"send_email_notification\", \"recieve_marketing_email\"];\n              // checkboxfields.forEach((field) => setFieldValue(field, detail[field], false));\n            }\n          }, [detail, status]);\n          return (\n            <form noValidate onSubmit={handleSubmit} className=\"px-1\">\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"first_name\" value={values.first_name} label={t(\"first_name\")} controlId=\"clientForm-first_name\" />\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"last_name\" value={values.last_name} label={t(\"last_name\")} controlId=\"clientForm-last_name\" />\n                </div>\n              </div>\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"phone_number\" value={values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"clientForm-phone_number\" />\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"email\" value={values.email} label={t(\"email\")} controlId=\"clientForm-email\" />\n                </div>\n              </div>\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"date\" name=\"date_of_birth\" value={values.date_of_birth} label={t(\"date_of_birth\")} controlId=\"clientForm-date_of_birth\" />\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                  <SelectField name=\"gender\" label={t(\"gender\")} options={genderOptions} placeholder={t(\"--select--\")} controlId=\"clientForm-gender\" />\n                </div>\n              </div>\n              <MapAddressField name=\"address\" label={t(\"address\")} value={values.address} placeholder={t(\"typing_address\")} controlId=\"clientForm-address\" />\n\n              <div className=\"row gx-2\">\n                <div className=\"mb-3\">\n                  <InputField type=\"text\" name=\"street\" value={values.street} label={t(\"street\")} controlId=\"clientForm-street\" />\n                </div>\n              </div>\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"suburb\" value={values.suburb} label={t(\"suburb\")} controlId=\"clientForm-suburb\" />\n                </div>\n                <div className=\"col-sm-3 col-6 mb-3\">\n                  <InputField type=\"text\" name=\"state\" value={values.state} label={t(\"state\")} controlId=\"clientForm-state\" />\n                </div>\n                <div className=\"col-sm-3 col-6 mb-3\">\n                  <InputField type=\"text\" name=\"postcode\" value={values.postcode} label={t(\"postcode\")} controlId=\"clientForm-postcode\" />\n                </div>\n              </div>\n              <div className=\"mb-3\">\n                <TextareaField type=\"text\" name=\"description\" value={values.description} label={t(\"client_notes\")} controlId=\"clientForm-description\" />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">{t(\"notification\")}</label>\n                <SwitchField name=\"send_sms_notification\" label={t(\"send_sms_notification\")} controlId=\"clientForm-send_sms_notification\" value=\"1\" />\n                <SwitchField name=\"send_email_notification\" label={t(\"send_email_notification\")} controlId=\"clientForm-send_email_notification\" value=\"1\" />\n                <SwitchField name=\"recieve_marketing_email\" label={t(\"recieve_marketing_email\")} controlId=\"clientForm-recieve_marketing_email\" value=\"1\" />\n              </div>\n              <div className=\"col-md-12 pe-2\">\n                <input type=\"submit\" className=\"btn w-100 btn-lg\" value={t(\"update_client\")} />\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ClientEditForm;\n"]},"metadata":{},"sourceType":"module"}