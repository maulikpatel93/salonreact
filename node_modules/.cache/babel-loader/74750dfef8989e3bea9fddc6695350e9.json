{"ast":null,"code":"import Unauthorized from \"./Unauthorized\";\n\nconst HandleResponse = (thunkAPI, response, type) => {\n  if (response.status == 200) {\n    return thunkAPI.fulfillWithValue(response.data);\n  } else {\n    return thunkAPI.rejectWithValue();\n  }\n};\n\n_c = HandleResponse;\nexport default HandleResponse;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleResponse\");","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/store/HandleResponse.js"],"names":["Unauthorized","HandleResponse","thunkAPI","response","type","status","fulfillWithValue","data","rejectWithValue"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;AACnD,MAAID,QAAQ,CAACE,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,WAAOH,QAAQ,CAACI,gBAAT,CAA0BH,QAAQ,CAACI,IAAnC,CAAP;AACD,GAFD,MAEO;AACL,WAAOL,QAAQ,CAACM,eAAT,EAAP;AACD;AACF,CAND;;KAAMP,c;AAQN,eAAeA,cAAf","sourcesContent":["import Unauthorized from \"./Unauthorized\";\n\nconst HandleResponse = (thunkAPI, response, type) => {\n  if (response.status == 200) {\n    return thunkAPI.fulfillWithValue(response.data);\n  } else {\n    return thunkAPI.rejectWithValue();\n  }\n};\n\nexport default HandleResponse;\n"]},"metadata":{},"sourceType":"module"}