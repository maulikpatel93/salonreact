{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/git/salonreact/src/component/form/Field.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useField, useFormikContext } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport InputMask from \"react-input-mask\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport config from \"../../config\";\nimport { selectImage, removeImage } from \"../../store/slices/imageSlice\";\nimport CustomSelect from \"../../component/form/CustomSelect\";\nimport { Field } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FloatLabelInputField = _ref => {\n  _s();\n\n  let {\n    label,\n    controlId,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n      controlId: controlId,\n      label: label,\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, { ...field,\n        ...props,\n        isInvalid: !!meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FloatLabelInputField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = FloatLabelInputField;\n\nconst InputField = _ref2 => {\n  _s2();\n\n  let {\n    label,\n    controlId,\n    ...props\n  } = _ref2;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: InputMask,\n        ...field,\n        ...props,\n        isInvalid: !!meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(InputField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = InputField;\n\nconst TextareaField = _ref3 => {\n  _s3();\n\n  let {\n    label,\n    controlId,\n    ...props\n  } = _ref3;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 3,\n        ...field,\n        ...props,\n        isInvalid: !!meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s3(TextareaField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c3 = TextareaField;\n\nconst SelectField = _ref4 => {\n  _s4();\n\n  let {\n    label,\n    controlId,\n    options,\n    ...props\n  } = _ref4;\n  const [field, meta] = useField(props);\n  let List = options.length > 0 && options.map((item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: item.value,\n      children: item.label\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        ...field,\n        ...props,\n        isInvalid: !!meta.error,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: props.placeholder\n        }, \"0\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), List]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s4(SelectField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c4 = SelectField;\n\nconst SwitchField = _ref5 => {\n  _s5();\n\n  let {\n    label,\n    controlId,\n    ...props\n  } = _ref5;\n  const dispatch = useDispatch();\n  const [field, meta] = useField(props);\n  const checked = field.value == 1 ? true : \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: /*#__PURE__*/_jsxDEV(Form.Check, { ...field,\n        ...props,\n        label: label,\n        type: \"switch\",\n        id: controlId,\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s5(SwitchField, \"ymIWiJz6UtNqsSA64Acw9vUuIHA=\", false, function () {\n  return [useDispatch, useField];\n});\n\n_c5 = SwitchField;\n\nconst InputFieldImage = _ref6 => {\n  _s6();\n\n  let {\n    label,\n    controlId,\n    page,\n    ...props\n  } = _ref6;\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const [field, meta] = useField(props);\n  const {\n    setFieldValue,\n    values\n  } = useFormikContext();\n  const image = useSelector(state => state.image); // This function will be triggered when the file field change\n\n  const imageChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      const SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/png\"];\n\n      if (SUPPORTED_FORMATS.includes(e.target.files[0].type)) {\n        dispatch(selectImage({\n          name: e.target.files[0].name,\n          size: e.target.files[0].size,\n          type: e.target.files[0].type,\n          url: URL.createObjectURL(e.target.files[0])\n        }));\n        setFieldValue(props.name, e.target.files[0]);\n      }\n    }\n\n    e.target.value = null;\n  };\n\n  field.onChange = imageChange; // This function will be triggered when the \"Remove This Image\" button is clicked\n\n  const removeSelectedImage = () => {\n    setFieldValue(props.name, \"\");\n    dispatch(removeImage());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [page == \"client-addform\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insert-photo d-flex flex-column justify-content-center align-items-center ms-md-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image && image.selected ? image.url : config.imagepath + \"addphoto-box.png\",\n          alt: \"\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: image && image.selected ? \"d-none\" : \"btn btn-sm position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: field.onChange,\n            ...props,\n            isInvalid: !!meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: image && image.selected ? \"btn btn-sm position-relative\" : \"d-none\",\n          onClick: removeSelectedImage,\n          children: t(\"remove\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          className: image && image.selected ? \"d-none\" : \"d-block\",\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : \"\", page == \"supplier-form\" || page == \"product-form\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-file position-relative d-flex align-content-center flex-wrap justify-content-center ms-lg-5\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: field.onChange,\n            ...props,\n            isInvalid: !!meta.error,\n            className: image && image.selected ? \"input-photo d-none\" : \"input-photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image && image.selected ? image.url : config.imagepath + \"addphoto.png\",\n            alt: \"\",\n            className: \"mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cursor-pointer \" + (image && image.selected ? \"d-block\" : \"d-none\"),\n            onClick: removeSelectedImage,\n            children: t(\"remove\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cursor-pointer \" + (image && image.selected ? \"d-none\" : \"d-block\"),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-content-center flex-wrap justify-content-center ms-lg-5\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            className: image && image.selected ? \"d-none\" : \"d-block\",\n            children: meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : // <div className=\"insert-photo d-flex flex-column justify-content-center align-items-center ms-md-auto\">\n      //   <img src={image && image.selected ? image.url : config.imagepath + \"addphoto-box.png\"} alt=\"\" className=\"mb-3\" />\n      //   <button type=\"button\" className={image && image.selected ? \"d-none\" : \"btn btn-sm position-relative\"}>\n      //     <Form.Control type=\"file\" onChange={field.onChange} {...props} isInvalid={!!meta.error} />\n      //     {label}\n      //   </button>\n      //   <button type=\"button\" className={image && image.selected ? \"btn btn-sm position-relative\" : \"d-none\"} onClick={removeSelectedImage}>\n      //     {t(\"remove\")}\n      //   </button>\n      //   <Form.Control.Feedback type=\"invalid\" className={image && image.selected ? \"d-none\" : \"d-block\"}>\n      //     {meta.error}\n      //   </Form.Control.Feedback>\n      // </div>\n      \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false); //Multiple Formik image\n  // validationSchema={Yup.object({\n  //profile:Yup.array().min(1,\"select at least 1 file\")\n  // })}\n  // let data = new FormData();\n  //       values.profile.forEach((photo, index) => {\n  //         data.append(`photo${index}`, values.profile[index]);\n  //       });\n  // <input\n  //   id=\"file\"\n  //   name=\"profile\"\n  //   type=\"file\"\n  //   onChange={(event) => {\n  //     const files = event.target.files;\n  //     let myFiles = Array.from(files);\n  //     formik.setFieldValue(\"profile\", myFiles);\n  //   }}\n  //   multiple\n  // />;\n};\n\n_s6(InputFieldImage, \"KVCrxPLQf4IEACwNj3RNoRRTD7M=\", false, function () {\n  return [useTranslation, useDispatch, useField, useFormikContext, useSelector];\n});\n\n_c6 = InputFieldImage;\n\nconst ReactSelectField = _ref7 => {\n  _s7();\n\n  let {\n    label,\n    controlId,\n    options,\n    ...props\n  } = _ref7;\n  const [field, meta, helpers] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, { ...field,\n        ...props,\n        options: options,\n        component: CustomSelect,\n        isInvalid: !!meta.error,\n        className: \"custom-select \" + (meta.touched && meta.error ? \"is-invalid\" : \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s7(ReactSelectField, \"YNHzajAxtEaGbRInbMDYR0mR8tA=\", false, function () {\n  return [useField];\n});\n\n_c7 = ReactSelectField;\n\nconst MapAddressField = _ref8 => {\n  _s8();\n\n  let {\n    label,\n    controlId,\n    ...props\n  } = _ref8;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        hasValidation: true,\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          id: \"inputGroupPrepend\",\n          className: \"bg-white text-secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...field,\n          ...props,\n          isInvalid: !!meta.error,\n          \"aria-describedby\": \"inputGroupPrepend\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s8(MapAddressField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c8 = MapAddressField;\n\nconst DatePickerField = _ref9 => {\n  _s9();\n\n  let {\n    label,\n    controlId,\n    ...props\n  } = _ref9;\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: controlId,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...field,\n        ...props,\n        isInvalid: !!meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s9(DatePickerField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c9 = DatePickerField;\nexport { FloatLabelInputField, InputField, SelectField, ReactSelectField, MapAddressField, TextareaField, SwitchField, InputFieldImage, DatePickerField };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"FloatLabelInputField\");\n$RefreshReg$(_c2, \"InputField\");\n$RefreshReg$(_c3, \"TextareaField\");\n$RefreshReg$(_c4, \"SelectField\");\n$RefreshReg$(_c5, \"SwitchField\");\n$RefreshReg$(_c6, \"InputFieldImage\");\n$RefreshReg$(_c7, \"ReactSelectField\");\n$RefreshReg$(_c8, \"MapAddressField\");\n$RefreshReg$(_c9, \"DatePickerField\");","map":{"version":3,"sources":["/opt/lampp/htdocs/git/salonreact/src/component/form/Field.js"],"names":["React","useEffect","useState","useTranslation","useField","useFormikContext","useDispatch","useSelector","Form","FloatingLabel","InputGroup","InputMask","Autocomplete","config","selectImage","removeImage","CustomSelect","Field","FloatLabelInputField","label","controlId","props","field","meta","error","InputField","TextareaField","SelectField","options","List","length","map","item","i","value","placeholder","SwitchField","dispatch","checked","InputFieldImage","page","t","setFieldValue","values","image","state","imageChange","e","target","files","SUPPORTED_FORMATS","includes","type","name","size","url","URL","createObjectURL","onChange","removeSelectedImage","selected","imagepath","ReactSelectField","helpers","touched","MapAddressField","DatePickerField"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useField, useFormikContext } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Form from \"react-bootstrap/Form\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport InputMask from \"react-input-mask\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport config from \"../../config\";\nimport { selectImage, removeImage } from \"../../store/slices/imageSlice\";\nimport CustomSelect from \"../../component/form/CustomSelect\";\nimport { Field } from \"formik\";\n\nconst FloatLabelInputField = ({ label, controlId, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <FloatingLabel controlId={controlId} label={label} className=\"mb-3\">\n        <Form.Control {...field} {...props} isInvalid={!!meta.error} />\n        <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n      </FloatingLabel>\n    </>\n  );\n};\n\nconst InputField = ({ label, controlId, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Label>{label}</Form.Label>\n        <Form.Control as={InputMask} {...field} {...props} isInvalid={!!meta.error} />\n        <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n      </Form.Group>\n    </>\n  );\n};\n\nconst TextareaField = ({ label, controlId, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Label>{label}</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} {...field} {...props} isInvalid={!!meta.error} />\n        <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n      </Form.Group>\n    </>\n  );\n};\n\nconst SelectField = ({ label, controlId, options, ...props }) => {\n  const [field, meta] = useField(props);\n  let List =\n    options.length > 0 &&\n    options.map((item, i) => {\n      return (\n        <option key={i} value={item.value}>\n          {item.label}\n        </option>\n      );\n    });\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Label>{label}</Form.Label>\n        <Form.Control as=\"select\" {...field} {...props} isInvalid={!!meta.error}>\n          <option key=\"0\" value=\"\">\n            {props.placeholder}\n          </option>\n          {List}\n        </Form.Control>\n        <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n      </Form.Group>\n    </>\n  );\n};\n\nconst SwitchField = ({ label, controlId, ...props }) => {\n  const dispatch = useDispatch();\n  const [field, meta ] = useField(props);\n  const checked = field.value == 1 ? true : \"\";\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Check {...field} {...props} label={label} type=\"switch\" id={controlId} checked={checked} />\n      </Form.Group>\n    </>\n  );\n};\nconst InputFieldImage = ({ label, controlId, page, ...props }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [field, meta] = useField(props);\n  const { setFieldValue, values } = useFormikContext();\n  const image = useSelector((state) => state.image);\n  // This function will be triggered when the file field change\n  const imageChange = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/png\"];\n      if (SUPPORTED_FORMATS.includes(e.target.files[0].type)) {\n        dispatch(selectImage({ name: e.target.files[0].name, size: e.target.files[0].size, type: e.target.files[0].type, url: URL.createObjectURL(e.target.files[0]) }));\n        setFieldValue(props.name, e.target.files[0]);\n      }\n    }\n    e.target.value = null;\n  };\n  field.onChange = imageChange;\n  // This function will be triggered when the \"Remove This Image\" button is clicked\n  const removeSelectedImage = () => {\n    setFieldValue(props.name, \"\");\n    dispatch(removeImage());\n  };\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        {page == \"client-addform\" ? (\n          <div className=\"insert-photo d-flex flex-column justify-content-center align-items-center ms-md-auto\">\n            <img src={image && image.selected ? image.url : config.imagepath + \"addphoto-box.png\"} alt=\"\" className=\"mb-3\" />\n            <button type=\"button\" className={image && image.selected ? \"d-none\" : \"btn btn-sm position-relative\"}>\n              <Form.Control type=\"file\" onChange={field.onChange} {...props} isInvalid={!!meta.error} />\n              {label}\n            </button>\n            <button type=\"button\" className={image && image.selected ? \"btn btn-sm position-relative\" : \"d-none\"} onClick={removeSelectedImage}>\n              {t(\"remove\")}\n            </button>\n            <Form.Control.Feedback type=\"invalid\" className={image && image.selected ? \"d-none\" : \"d-block\"}>\n              {meta.error}\n            </Form.Control.Feedback>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        {page == \"supplier-form\" || page == \"product-form\" ? (\n          <>\n            <div className=\"input-file position-relative d-flex align-content-center flex-wrap justify-content-center ms-lg-5\">\n              <Form.Control type=\"file\" onChange={field.onChange} {...props} isInvalid={!!meta.error} className={image && image.selected ? \"input-photo d-none\" : \"input-photo\"} />\n              <img src={image && image.selected ? image.url : config.imagepath + \"addphoto.png\"} alt=\"\" className=\"mb-3\" />\n              <span className={\"cursor-pointer \" + (image && image.selected ? \"d-block\" : \"d-none\")} onClick={removeSelectedImage}>\n                {t(\"remove\")}\n              </span>\n              <span className={\"cursor-pointer \" + (image && image.selected ? \"d-none\" : \"d-block\")}>{label}</span>\n            </div>\n            <div className=\"d-flex align-content-center flex-wrap justify-content-center ms-lg-5\">\n              <Form.Control.Feedback type=\"invalid\" className={image && image.selected ? \"d-none\" : \"d-block\"}>\n                {meta.error}\n              </Form.Control.Feedback>\n            </div>\n          </>\n        ) : (\n          // <div className=\"insert-photo d-flex flex-column justify-content-center align-items-center ms-md-auto\">\n          //   <img src={image && image.selected ? image.url : config.imagepath + \"addphoto-box.png\"} alt=\"\" className=\"mb-3\" />\n          //   <button type=\"button\" className={image && image.selected ? \"d-none\" : \"btn btn-sm position-relative\"}>\n          //     <Form.Control type=\"file\" onChange={field.onChange} {...props} isInvalid={!!meta.error} />\n          //     {label}\n          //   </button>\n          //   <button type=\"button\" className={image && image.selected ? \"btn btn-sm position-relative\" : \"d-none\"} onClick={removeSelectedImage}>\n          //     {t(\"remove\")}\n          //   </button>\n          //   <Form.Control.Feedback type=\"invalid\" className={image && image.selected ? \"d-none\" : \"d-block\"}>\n          //     {meta.error}\n          //   </Form.Control.Feedback>\n          // </div>\n          \"\"\n        )}\n      </Form.Group>\n    </>\n  );\n  //Multiple Formik image\n  // validationSchema={Yup.object({\n  //profile:Yup.array().min(1,\"select at least 1 file\")\n  // })}\n  // let data = new FormData();\n  //       values.profile.forEach((photo, index) => {\n  //         data.append(`photo${index}`, values.profile[index]);\n  //       });\n  // <input\n  //   id=\"file\"\n  //   name=\"profile\"\n  //   type=\"file\"\n  //   onChange={(event) => {\n  //     const files = event.target.files;\n  //     let myFiles = Array.from(files);\n  //     formik.setFieldValue(\"profile\", myFiles);\n  //   }}\n  //   multiple\n  // />;\n};\n\nconst ReactSelectField = ({ label, controlId, options, ...props }) => {\n  const [field, meta, helpers] = useField(props);\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Label>{label}</Form.Label>\n        <Field {...field} {...props} options={options} component={CustomSelect} isInvalid={!!meta.error} className={\"custom-select \" + (meta.touched && meta.error ? \"is-invalid\" : \"\")} />\n        <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n      </Form.Group>\n    </>\n  );\n};\n\nconst MapAddressField = ({ label, controlId, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Label>{label}</Form.Label>\n        <InputGroup hasValidation>\n          <InputGroup.Text id=\"inputGroupPrepend\" className=\"bg-white text-secondary\">\n            <i className=\"far fa-search\"></i>\n          </InputGroup.Text>\n          <Form.Control {...field} {...props} isInvalid={!!meta.error} aria-describedby=\"inputGroupPrepend\" className=\"search-input\" />\n          <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n        </InputGroup>\n      </Form.Group>\n    </>\n  );\n};\n\nconst DatePickerField = ({ label, controlId, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <Form.Group className=\"mb-3\" controlId={controlId}>\n        <Form.Label>{label}</Form.Label>\n        <Form.Control {...field} {...props} isInvalid={!!meta.error} />\n        <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\n      </Form.Group>\n    </>\n  );\n};\n\nexport { FloatLabelInputField, InputField, SelectField, ReactSelectField, MapAddressField, TextareaField, SwitchField, InputFieldImage, DatePickerField };\n"]},"metadata":{},"sourceType":"module"}