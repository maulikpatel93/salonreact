[{"/opt/lampp/htdocs/git/salonreact/src/index.js":"1","/opt/lampp/htdocs/git/salonreact/src/App.js":"2","/opt/lampp/htdocs/git/salonreact/src/reportWebVitals.js":"3","/opt/lampp/htdocs/git/salonreact/src/store/index.js":"4","/opt/lampp/htdocs/git/salonreact/src/store/reducer.js":"5","/opt/lampp/htdocs/git/salonreact/src/store/slices/imageSlice.js":"6","/opt/lampp/htdocs/git/salonreact/src/store/slices/auth.js":"7","/opt/lampp/htdocs/git/salonreact/src/store/slices/message.js":"8","/opt/lampp/htdocs/git/salonreact/src/store/slices/productSlice.js":"9","/opt/lampp/htdocs/git/salonreact/src/store/slices/supplierSlice.js":"10","/opt/lampp/htdocs/git/salonreact/src/store/slices/clientSlice.js":"11","/opt/lampp/htdocs/git/salonreact/src/store/slices/categorySlice.js":"12","/opt/lampp/htdocs/git/salonreact/src/store/slices/taxSlice.js":"13","/opt/lampp/htdocs/git/salonreact/src/store/slices/serviceSlice.js":"14","/opt/lampp/htdocs/git/salonreact/src/store/HandleResponse.js":"15","/opt/lampp/htdocs/git/salonreact/src/store/HandleError.js":"16","/opt/lampp/htdocs/git/salonreact/src/services/product.service.js":"17","/opt/lampp/htdocs/git/salonreact/src/services/auth.service.js":"18","/opt/lampp/htdocs/git/salonreact/src/services/client.service.js":"19","/opt/lampp/htdocs/git/salonreact/src/services/tax.service.js":"20","/opt/lampp/htdocs/git/salonreact/src/services/supplier.service.js":"21","/opt/lampp/htdocs/git/salonreact/src/services/service.service.js":"22","/opt/lampp/htdocs/git/salonreact/src/services/category.service.js":"23","/opt/lampp/htdocs/git/salonreact/src/store/Unauthorized.js":"24","/opt/lampp/htdocs/git/salonreact/src/services/auth-header.js":"25","/opt/lampp/htdocs/git/salonreact/src/i18n.js":"26","/opt/lampp/htdocs/git/salonreact/src/config.js":"27","/opt/lampp/htdocs/git/salonreact/src/routes/index.js":"28","/opt/lampp/htdocs/git/salonreact/src/routes/MainRoutes.js":"29","/opt/lampp/htdocs/git/salonreact/src/routes/LoginRoutes.js":"30","/opt/lampp/htdocs/git/salonreact/src/routes/AuthenticationRoutes.js":"31","/opt/lampp/htdocs/git/salonreact/src/component/Loadable.js":"32","/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/AuthGuard.js":"33","/opt/lampp/htdocs/git/salonreact/src/pages/dashboard/index.js":"34","/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/GuestGuard.js":"35","/opt/lampp/htdocs/git/salonreact/src/pages/auth/Login.js":"36","/opt/lampp/htdocs/git/salonreact/src/pages/account/index.js":"37","/opt/lampp/htdocs/git/salonreact/src/pages/marketing/index.js":"38","/opt/lampp/htdocs/git/salonreact/src/pages/reports/index.js":"39","/opt/lampp/htdocs/git/salonreact/src/pages/products/index.js":"40","/opt/lampp/htdocs/git/salonreact/src/pages/services/index.js":"41","/opt/lampp/htdocs/git/salonreact/src/pages/staff/index.js":"42","/opt/lampp/htdocs/git/salonreact/src/pages/clients/index.js":"43","/opt/lampp/htdocs/git/salonreact/src/pages/subscriptions/index.js":"44","/opt/lampp/htdocs/git/salonreact/src/pages/sales/index.js":"45","/opt/lampp/htdocs/git/salonreact/src/pages/vouchers/index.js":"46","/opt/lampp/htdocs/git/salonreact/src/pages/calender/index.js":"47","/opt/lampp/htdocs/git/salonreact/src/layout/MinimalLayout/index.js":"48","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/index.js":"49","/opt/lampp/htdocs/git/salonreact/src/component/Loader.js":"50","/opt/lampp/htdocs/git/salonreact/src/component/Language.js":"51","/opt/lampp/htdocs/git/salonreact/src/pages/auth/RestLogin.js":"52","/opt/lampp/htdocs/git/salonreact/src/common/EventBus.js":"53","/opt/lampp/htdocs/git/salonreact/src/component/fancybox.js":"54","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductSuggetionListView.js":"55","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductListView.js":"56","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierAddForm.js":"57","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierEditForm.js":"58","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierSuggetionListView.js":"59","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryAddForm.js":"60","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryEditForm.js":"61","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductEditForm.js":"62","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductAddForm.js":"63","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategorySuggetionListView.js":"64","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceEditForm.js":"65","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceAddForm.js":"66","/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceSuggetionListView.js":"67","/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceListView.js":"68","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientAddForm.js":"69","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/gridview.js":"70","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/listview.js":"71","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/SuggetionListView.js":"72","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/index.js":"73","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/index.js":"74","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/index.js":"75","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Sidebar/index.js":"76","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/index.js":"77","/opt/lampp/htdocs/git/salonreact/src/hooks/useScriptRef.js":"78","/opt/lampp/htdocs/git/salonreact/src/component/form/Field.js":"79","/opt/lampp/htdocs/git/salonreact/src/component/form/CustomSelect.js":"80","/opt/lampp/htdocs/git/salonreact/src/helpers/functions.js":"81","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierGridView.js":"82","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryListView.js":"83","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientEditForm.js":"84","/opt/lampp/htdocs/git/salonreact/src/component/Sweatalert2/index.js":"85","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Voucher/index.js":"86","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Appointment/index.js":"87","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Subscription/index.js":"88","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Photos/index.js":"89","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Invoices/index.js":"90","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Membership/index.js":"91","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Documents/index.js":"92","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/ProfileSection/index.js":"93","/opt/lampp/htdocs/git/salonreact/src/hooks/useErrorsRef.js":"94","/opt/lampp/htdocs/git/salonreact/src/yupconfig.js":"95","/opt/lampp/htdocs/git/salonreact/src/component/form/Validation.js":"96"},{"size":1187,"mtime":1641791964470,"results":"97","hashOfConfig":"98"},{"size":124,"mtime":1641792012697,"results":"99","hashOfConfig":"98"},{"size":362,"mtime":1641640475645,"results":"100","hashOfConfig":"101"},{"size":1139,"mtime":1641648117892,"results":"102","hashOfConfig":"98"},{"size":2143,"mtime":1641648129544,"results":"103","hashOfConfig":"98"},{"size":782,"mtime":1641647483406,"results":"104","hashOfConfig":"98"},{"size":2529,"mtime":1641647075160,"results":"105","hashOfConfig":"98"},{"size":437,"mtime":1641647487450,"results":"106","hashOfConfig":"98"},{"size":9547,"mtime":1641647588021,"results":"107","hashOfConfig":"98"},{"size":9571,"mtime":1641648007049,"results":"108","hashOfConfig":"98"},{"size":11272,"mtime":1641647477678,"results":"109","hashOfConfig":"98"},{"size":9581,"mtime":1641647275583,"results":"110","hashOfConfig":"98"},{"size":1389,"mtime":1641648033085,"results":"111","hashOfConfig":"98"},{"size":9415,"mtime":1641647748372,"results":"112","hashOfConfig":"98"},{"size":224,"mtime":1641648093569,"results":"113","hashOfConfig":"98"},{"size":744,"mtime":1641648074673,"results":"114","hashOfConfig":"98"},{"size":4695,"mtime":1641648239711,"results":"115","hashOfConfig":"98"},{"size":1601,"mtime":1641648226399,"results":"116","hashOfConfig":"98"},{"size":4155,"mtime":1641648236791,"results":"117","hashOfConfig":"98"},{"size":1590,"mtime":1641648246779,"results":"118","hashOfConfig":"98"},{"size":4247,"mtime":1641648244463,"results":"119","hashOfConfig":"98"},{"size":4695,"mtime":1641648242327,"results":"120","hashOfConfig":"98"},{"size":4155,"mtime":1641648228007,"results":"121","hashOfConfig":"98"},{"size":149,"mtime":1641648132964,"results":"122","hashOfConfig":"98"},{"size":405,"mtime":1641648223923,"results":"123","hashOfConfig":"98"},{"size":989,"mtime":1641648191880,"results":"124","hashOfConfig":"98"},{"size":592,"mtime":1641792332525,"results":"125","hashOfConfig":"98"},{"size":630,"mtime":1641792109521,"results":"126","hashOfConfig":"98"},{"size":1992,"mtime":1641790737031,"results":"127","hashOfConfig":"98"},{"size":828,"mtime":1641648270875,"results":"128","hashOfConfig":"98"},{"size":628,"mtime":1641790748299,"results":"129","hashOfConfig":"98"},{"size":362,"mtime":1641789799915,"results":"130","hashOfConfig":"98"},{"size":630,"mtime":1641648178012,"results":"131","hashOfConfig":"98"},{"size":236,"mtime":1641791637424,"results":"132","hashOfConfig":"98"},{"size":716,"mtime":1641648180876,"results":"133","hashOfConfig":"98"},{"size":6722,"mtime":1641790628872,"results":"134","hashOfConfig":"98"},{"size":224,"mtime":1639384613389,"results":"135","hashOfConfig":"101"},{"size":230,"mtime":1641791640544,"results":"136","hashOfConfig":"98"},{"size":224,"mtime":1639384613401,"results":"137","hashOfConfig":"101"},{"size":18636,"mtime":1641636831817,"results":"138","hashOfConfig":"101"},{"size":18730,"mtime":1641636831821,"results":"139","hashOfConfig":"101"},{"size":218,"mtime":1639384613401,"results":"140","hashOfConfig":"101"},{"size":12142,"mtime":1641790837650,"results":"141","hashOfConfig":"98"},{"size":241,"mtime":1641648286599,"results":"142","hashOfConfig":"98"},{"size":218,"mtime":1639384613401,"results":"143","hashOfConfig":"101"},{"size":227,"mtime":1641648283375,"results":"144","hashOfConfig":"98"},{"size":227,"mtime":1641790642520,"results":"145","hashOfConfig":"98"},{"size":291,"mtime":1641790588928,"results":"146","hashOfConfig":"98"},{"size":693,"mtime":1641790583472,"results":"147","hashOfConfig":"98"},{"size":288,"mtime":1641789807551,"results":"148","hashOfConfig":"98"},{"size":1079,"mtime":1641789821195,"results":"149","hashOfConfig":"98"},{"size":3446,"mtime":1641790637916,"results":"150","hashOfConfig":"98"},{"size":327,"mtime":1639384613389,"results":"151","hashOfConfig":"101"},{"size":659,"mtime":1641790052001,"results":"152","hashOfConfig":"98"},{"size":2340,"mtime":1641384268953,"results":"153","hashOfConfig":"101"},{"size":5068,"mtime":1641636831817,"results":"154","hashOfConfig":"101"},{"size":9282,"mtime":1641636831821,"results":"155","hashOfConfig":"101"},{"size":9933,"mtime":1641539602626,"results":"156","hashOfConfig":"101"},{"size":2504,"mtime":1641216354152,"results":"157","hashOfConfig":"101"},{"size":4172,"mtime":1641636831821,"results":"158","hashOfConfig":"101"},{"size":4720,"mtime":1641636831821,"results":"159","hashOfConfig":"101"},{"size":12476,"mtime":1641636831817,"results":"160","hashOfConfig":"101"},{"size":11227,"mtime":1641636831817,"results":"161","hashOfConfig":"101"},{"size":1896,"mtime":1641636831821,"results":"162","hashOfConfig":"101"},{"size":12478,"mtime":1641636831821,"results":"163","hashOfConfig":"101"},{"size":11969,"mtime":1641646516040,"results":"164","hashOfConfig":"98"},{"size":2340,"mtime":1641475693225,"results":"165","hashOfConfig":"101"},{"size":5101,"mtime":1641475693225,"results":"166","hashOfConfig":"101"},{"size":9801,"mtime":1641791257467,"results":"167","hashOfConfig":"98"},{"size":4628,"mtime":1641790987217,"results":"168","hashOfConfig":"98"},{"size":4797,"mtime":1641791041940,"results":"169","hashOfConfig":"98"},{"size":2590,"mtime":1641791137275,"results":"170","hashOfConfig":"98"},{"size":2990,"mtime":1641636831821,"results":"171","hashOfConfig":"101"},{"size":3049,"mtime":1641636831821,"results":"172","hashOfConfig":"101"},{"size":11855,"mtime":1641791461049,"results":"173","hashOfConfig":"98"},{"size":4702,"mtime":1641790572576,"results":"174","hashOfConfig":"98"},{"size":3477,"mtime":1641790566252,"results":"175","hashOfConfig":"98"},{"size":350,"mtime":1641790531077,"results":"176","hashOfConfig":"98"},{"size":10792,"mtime":1641790503057,"results":"177","hashOfConfig":"98"},{"size":2144,"mtime":1641790497201,"results":"178","hashOfConfig":"98"},{"size":109,"mtime":1641790525457,"results":"179","hashOfConfig":"98"},{"size":4345,"mtime":1641216354152,"results":"180","hashOfConfig":"101"},{"size":3213,"mtime":1641636831821,"results":"181","hashOfConfig":"101"},{"size":8555,"mtime":1641791447881,"results":"182","hashOfConfig":"98"},{"size":1077,"mtime":1641790509533,"results":"183","hashOfConfig":"98"},{"size":1437,"mtime":1641791491545,"results":"184","hashOfConfig":"98"},{"size":1766,"mtime":1641791629184,"results":"185","hashOfConfig":"98"},{"size":834,"mtime":1641791512333,"results":"186","hashOfConfig":"98"},{"size":2330,"mtime":1641791532873,"results":"187","hashOfConfig":"98"},{"size":2022,"mtime":1641791598272,"results":"188","hashOfConfig":"98"},{"size":828,"mtime":1641791578724,"results":"189","hashOfConfig":"98"},{"size":866,"mtime":1641791617504,"results":"190","hashOfConfig":"98"},{"size":1373,"mtime":1641790557452,"results":"191","hashOfConfig":"98"},{"size":470,"mtime":1641790529265,"results":"192","hashOfConfig":"98"},{"size":1549,"mtime":1641648211951,"results":"193","hashOfConfig":"98"},{"size":286,"mtime":1641644493227,"results":"194","hashOfConfig":"101"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecn54v",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},"1lnbkc",{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":1,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":1,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":1,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"336","messages":"337","errorCount":1,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/lampp/htdocs/git/salonreact/src/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/App.js",[],"/opt/lampp/htdocs/git/salonreact/src/reportWebVitals.js",[],["407","408"],"/opt/lampp/htdocs/git/salonreact/src/store/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/reducer.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/imageSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/auth.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/message.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/productSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/supplierSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/clientSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/categorySlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/taxSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/serviceSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/HandleResponse.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/HandleError.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/product.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/auth.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/client.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/tax.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/supplier.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/service.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/category.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/Unauthorized.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/auth-header.js",[],"/opt/lampp/htdocs/git/salonreact/src/i18n.js",[],"/opt/lampp/htdocs/git/salonreact/src/config.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/MainRoutes.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/LoginRoutes.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/AuthenticationRoutes.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/Loadable.js",[],"/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/AuthGuard.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/dashboard/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/GuestGuard.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/auth/Login.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/account/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/marketing/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/reports/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/products/index.js",["409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../config\";\nimport Suppliers from \"./suppliers\";\n\nimport { openAddProductForm, productTabView, productListViewApi, productSort, productSortRemove, openProductSearchList, closeProductSearchList, productSuggetionListApi, productSearchName } from \"../../store/slices/productSlice\";\nimport { openAddSupplierForm, supplierGridViewApi, openSupplierSearchList, closeSupplierSearchList, supplierSuggetionListApi, supplierSearchName, supplierOptions } from \"../../store/slices/supplierSlice\";\nimport { taxOptions } from \"../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../store/slices/imageSlice\";\nimport SupplierAddForm from \"./suppliers/SupplierAddForm\";\nimport SupplierEditForm from \"./suppliers/SupplierEditForm\";\nimport SupplierSuggetionListView from \"./suppliers/SupplierSuggetionListView\";\nimport ProductSuggetionListView from \"./list/ProductSuggetionListView\";\nimport ProductListView from \"./list/ProductListView\";\nimport ProductAddForm from \"./form/ProductAddForm\";\nimport ProductEditForm from \"./form/ProductEditForm\";\n\nconst Products = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const tabview = useSelector((state) => state.product.isTabView);\n  const ListView = useSelector((state) => state.product.isListView);\n  const sort = useSelector((state) => state.product.isSort);\n  const productIsOpenedAddForm = useSelector((state) => state.product.isOpenedAddForm);\n  const productIsOpenedEditForm = useSelector((state) => state.product.isOpenedEditForm);\n  const supplierIsOpenedAddForm = useSelector((state) => state.supplier.isOpenedAddForm);\n  const supplierIsOpenedEditForm = useSelector((state) => state.supplier.isOpenedEditForm);\n\n  const isSearchListProduct = useSelector((state) => state.product.isSearchList);\n  const isSearchNameProduct = useSelector((state) => state.product.isSearchName);\n  const isSuggetionViewProduct = useSelector((state) => state.product.isSuggetionListView);\n\n  const isSearchListSupplier = useSelector((state) => state.supplier.isSearchList);\n  const isSearchNameSupplier = useSelector((state) => state.supplier.isSearchName);\n  const isSuggetionViewSupplier = useSelector((state) => state.supplier.isSuggetionListView);\n\n  useEffect(() => {\n    dispatch(productSortRemove());\n    dispatch(productListViewApi());\n    dispatch(supplierGridViewApi());\n  }, [dispatch]);\n\n  const handleProductTab = () => {\n    dispatch(productTabView(\"product\"));\n  };\n\n  const handleSupplierTab = () => {\n    dispatch(productTabView(\"supplier\"));\n  };\n\n  const handleopenAddProductForm = () => {\n    dispatch(openAddProductForm());\n    dispatch(supplierOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n    dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n  };\n\n  const handleOpenAddSupplierForm = () => {\n    dispatch(openAddSupplierForm());\n    dispatch(removeImage());\n  };\n\n  const fetchDataList = () => {\n    dispatch(productListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n  //Product search\n  const fetchDataSuggetionListProduct = () => {\n    dispatch(productSuggetionListApi({ next_page_url: isSuggetionViewProduct.next_page_url, q: isSearchNameProduct }));\n  };\n\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(productListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  const handleClickSearchProduct = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openProductSearchList());\n      dispatch(productSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchProduct = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(productSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openProductSearchList());\n      dispatch(productSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closeSupplierSearchList());\n        }\n      });\n    } else {\n      dispatch(productListViewApi());\n    }\n  };\n  const handleCloseSearchProduct = () => {\n    dispatch(productSearchName(\"\"));\n    dispatch(closeProductSearchList());\n    dispatch(productListViewApi());\n  };\n  const handleOnBlurProduct = (e) => {\n    setTimeout(() => {\n      dispatch(closeProductSearchList());\n    }, 100);\n  };\n\n  //Supplier search\n  const fetchDataSuggetionListSupplier = () => {\n    dispatch(supplierSuggetionListApi({ next_page_url: isSuggetionViewSupplier.next_page_url, q: isSearchNameSupplier }));\n  };\n\n  const handleClickSearchSupplier = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openSupplierSearchList());\n      dispatch(supplierSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchSupplier = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(supplierSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openSupplierSearchList());\n      dispatch(supplierSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closeSupplierSearchList());\n        }\n      });\n    } else {\n      dispatch(supplierGridViewApi());\n    }\n  };\n  const handleCloseSearchSupplier = () => {\n    dispatch(supplierSearchName(\"\"));\n    dispatch(closeSupplierSearchList());\n    dispatch(supplierGridViewApi());\n  };\n  const handleOnBlurSupplier = (e) => {\n    setTimeout(() => {\n      dispatch(closeSupplierSearchList());\n    }, 100);\n  };\n\n  const sorting = (props) => {\n    dispatch(productSort(props));\n    dispatch(productListViewApi({ sort: props }));\n  };\n\n  return (\n    <>\n      <div className={\"page-content bg-pink service page-content-\" + tabview}>\n        <div className=\"row bg-white align-items-center sticky-top\">\n          <div className=\"common-tab col-md-4 col-7 order-1\">\n            <ul className=\"nav nav-tabs mb-0 justify-content-start\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"product\" ? \" active\" : \"\")} id=\"product-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#product\" type=\"button\" role=\"tab\" aria-controls=\"product\" aria-selected=\"true\" onClick={handleProductTab}>\n                  {t(\"products\")}\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"supplier\" ? \" active\" : \"\")} id=\"suppliers-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#suppliers\" type=\"button\" role=\"tab\" aria-controls=\"suppliers\" aria-selected=\"true\" onClick={handleSupplierTab}>\n                  {t(\"suppliers\")}\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-4 py-md-0 py-2 px-md-0 px-4 order-md-2 order-3 search-wrp\">\n            <div className=\"search search-radius\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <i className=\"far fa-search\"></i>\n                </span>\n                {tabview && tabview == \"product\" ? (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameProduct} onInput={(e) => dispatch(productSearchName(e.target.value))} onClick={handleClickSearchProduct} onKeyUp={handleKeyUpSearchProduct} onBlur={handleOnBlurProduct} />\n                    <a href=\"#\" className=\"close\" style={{ display: isSearchNameProduct ? \"block\" : \"none\" }} onClick={handleCloseSearchProduct}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                ) : (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameSupplier} onInput={(e) => dispatch(supplierSearchName(e.target.value))} onClick={handleClickSearchSupplier} onKeyUp={handleKeyUpSearchSupplier} onBlur={handleOnBlurSupplier} />\n                    <a href=\"#\" className=\"close\" style={{ display: isSearchNameSupplier ? \"block\" : \"none\" }} onClick={handleCloseSearchSupplier}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                )}\n              </div>\n              {tabview && tabview == \"product\" ? (\n                <div className={\"search-result dropdown-box \" + isSearchListProduct} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewProduct.data && isSuggetionViewProduct.data.length ? isSuggetionViewProduct.data.length : \"0\"} next={fetchDataSuggetionListProduct} scrollableTarget=\"search-content\" hasMore={isSuggetionViewProduct.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <ProductSuggetionListView view={isSuggetionViewProduct} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              ) : (\n                <div className={\"search-result dropdown-box \" + isSearchListSupplier} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewSupplier.data && isSuggetionViewSupplier.data.length ? isSuggetionViewSupplier.data.length : \"0\"} next={fetchDataSuggetionListSupplier} scrollableTarget=\"search-content\" hasMore={isSuggetionViewSupplier.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <SupplierSuggetionListView view={isSuggetionViewSupplier} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-4 text-end col-5 ps-0 order-md-3 order-2\">\n            <div className=\"tab-content p-0 d-inline-block\">\n              <div className={tabview && tabview == \"product\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"product\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleopenAddProductForm}>\n                  {t(\"new_product\")}\n                </a>\n              </div>\n              <div className={tabview && tabview == \"supplier\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"supplier\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleOpenAddSupplierForm}>\n                  {t(\"new_supplier\")}\n                </a>\n              </div>\n            </div>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a href=\"#\" id=\"addproduct-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"import.png\"} className=\"me-3\" alt=\"\" />\n                      Import Services\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"addsale-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"export.png\"} className=\"me-3\" />\n                      Export Services\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className={\"tab-content list-view-content\"}>\n            <div className={\"tab-pane\" + (tabview && tabview == \"product\" ? \" show active\" : \"\")} id=\"product\" role=\"tabpanel\" aria-labelledby=\"product-tab\">\n              {ListView.length > 0 || ListView.data ? (\n                <section>\n                  <div className=\"table-responsive services-table-shadow\" id=\"scrollableListView\">\n                    <InfiniteScroll dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataList} scrollableTarget=\"page-content-product\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                      <table className=\"table bg-white\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ name: sort.name == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"product_name\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ sku: sort.sku == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"sku\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.sku == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.sku == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ supplier: { name: sort && sort.supplier && sort.supplier.name == \"asc\" ? \"desc\" : \"asc\" } })}>\n                                {t(\"supplier\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort && sort.supplier && sort.supplier.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort && sort.supplier && sort.supplier.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ stock_quantity: sort.stock_quantity == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"stock\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.stock_quantity == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.stock_quantity == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ retail_price: sort.retail_price == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"retail_price\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.retail_price == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.retail_price == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <div className=\"d-flex align-items-center justify-content-end\">{t(\"action\")}</div>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"services-table-data\">\n                          <ProductListView view={ListView} />\n                        </tbody>\n                      </table>\n                      {!isFetching && ListView.next_page_url && (\n                        <div className=\"col-2 m-auto p-3\">\n                          <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                            {t(\"more\")}\n                          </button>\n                        </div>\n                      )}\n                    </InfiniteScroll>\n                  </div>\n                </section>\n              ) : (\n                <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n                  <div className=\"complete-box-wrp text-center \">\n                    <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n                    <h4 className=\"mb-2 fw-semibold\">\n                      {t(\"no_products_have_been_created_yet\")}\n                      <a className=\"add-product ms-1 cursor-pointer\" onClick={() => dispatch(openAddProductForm())}>\n                        {t(\"please_create_one\")}\n                      </a>\n                      .\n                    </h4>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className={\"tab-pane\" + (tabview && tabview == \"supplier\" ? \" show active\" : \"\")} id=\"suppliers\" role=\"tabpanel\" aria-labelledby=\"suppliers-tab\">\n              <Suppliers />\n            </div>\n          </div>\n        </div>\n        {supplierIsOpenedAddForm ? <SupplierAddForm /> : \"\"}\n        {supplierIsOpenedEditForm ? <SupplierEditForm /> : \"\"}\n        {productIsOpenedAddForm ? <ProductAddForm /> : \"\"}\n        {productIsOpenedEditForm ? <ProductEditForm /> : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/index.js",["454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../config\";\nimport Categories from \"./categories\";\n\nimport { openAddServiceForm, serviceTabView, serviceListViewApi, serviceSort, serviceSortRemove, openServiceSearchList, closeServiceSearchList, serviceSuggetionListApi, serviceSearchName } from \"../../store/slices/serviceSlice\";\nimport { openAddCategoryForm, categoryListViewApi, openCategorieSearchList, closecategoriesearchList, categoriesuggetionListApi, categoriesearchName, categoryOptions } from \"../../store/slices/categorySlice\";\nimport { taxOptions } from \"../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../store/slices/imageSlice\";\nimport CategoryAddForm from \"./categories/CategoryAddForm\";\nimport CategoryEditForm from \"./categories/CategoryEditForm\";\nimport CategorySuggetionListView from \"./categories/CategorySuggetionListView\";\nimport ServiceSuggetionListView from \"./list/ServiceSuggetionListView\";\nimport ServiceListView from \"./list/ServiceListView\";\nimport ServiceAddForm from \"./form/ServiceAddForm\";\nimport ServiceEditForm from \"./form/ServiceEditForm\";\n\nconst Services = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const tabview = useSelector((state) => state.service.isTabView);\n  const ListView = useSelector((state) => state.service.isListView);\n  const sort = useSelector((state) => state.service.isSort);\n  const serviceIsOpenedAddForm = useSelector((state) => state.service.isOpenedAddForm);\n  const serviceIsOpenedEditForm = useSelector((state) => state.service.isOpenedEditForm);\n  const categoryIsOpenedAddForm = useSelector((state) => state.category.isOpenedAddForm);\n  const categoryIsOpenedEditForm = useSelector((state) => state.category.isOpenedEditForm);\n\n  const isSearchListService = useSelector((state) => state.service.isSearchList);\n  const isSearchNameService = useSelector((state) => state.service.isSearchName);\n  const isSuggetionViewService = useSelector((state) => state.service.isSuggetionListView);\n\n  const isSearchListCategory = useSelector((state) => state.category.isSearchList);\n  const isSearchNameCategory = useSelector((state) => state.category.isSearchName);\n  const isSuggetionViewCategory = useSelector((state) => state.category.isSuggetionListView);\n\n  useEffect(() => {\n    dispatch(serviceSortRemove());\n    dispatch(serviceListViewApi());\n    dispatch(categoryListViewApi());\n  }, [dispatch]);\n\n  const handleServiceTab = () => {\n    dispatch(serviceTabView(\"service\"));\n  };\n\n  const handleCategoryTab = () => {\n    dispatch(serviceTabView(\"category\"));\n  };\n\n  const handleopenAddServiceForm = () => {\n    dispatch(openAddServiceForm());\n    dispatch(categoryOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n    dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n  };\n\n  const handleOpenAddCategoryForm = () => {\n    dispatch(openAddCategoryForm());\n    dispatch(removeImage());\n  };\n\n  const fetchDataList = () => {\n    dispatch(serviceListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n  //Service search\n  const fetchDataSuggetionListService = () => {\n    dispatch(serviceSuggetionListApi({ next_page_url: isSuggetionViewService.next_page_url, q: isSearchNameService }));\n  };\n\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(serviceListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  const handleClickSearchService = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openServiceSearchList());\n      dispatch(serviceSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchService = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(serviceSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openServiceSearchList());\n      dispatch(serviceSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closecategoriesearchList());\n        }\n      });\n    } else {\n      dispatch(serviceListViewApi());\n    }\n  };\n  const handleCloseSearchService = () => {\n    dispatch(serviceSearchName(\"\"));\n    dispatch(closeServiceSearchList());\n    dispatch(serviceListViewApi());\n  };\n  const handleOnBlurService = (e) => {\n    setTimeout(() => {\n      dispatch(closeServiceSearchList());\n    }, 100);\n  };\n\n  //Category search\n  const fetchDataSuggetionListCategory = () => {\n    dispatch(categoriesuggetionListApi({ next_page_url: isSuggetionViewCategory.next_page_url, q: isSearchNameCategory }));\n  };\n\n  const handleClickSearchCategory = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openCategorieSearchList());\n      dispatch(categoriesuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchCategory = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(categoriesearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openCategorieSearchList());\n      dispatch(categoriesuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closecategoriesearchList());\n        }\n      });\n    } else {\n      dispatch(categoryListViewApi());\n    }\n  };\n  const handleCloseSearchCategory = () => {\n    dispatch(categoriesearchName(\"\"));\n    dispatch(closecategoriesearchList());\n    dispatch(categoryListViewApi());\n  };\n  const handleOnBlurCategory = (e) => {\n    setTimeout(() => {\n      dispatch(closecategoriesearchList());\n    }, 100);\n  };\n\n  const sorting = (props) => {\n    dispatch(serviceSort(props));\n    dispatch(serviceListViewApi({ sort: props }));\n  };\n\n  return (\n    <>\n      <div className={\"page-content bg-pink service page-content-\" + tabview}>\n        <div className=\"row bg-white align-items-center sticky-top\">\n          <div className=\"common-tab col-md-4 col-7 order-1\">\n            <ul className=\"nav nav-tabs mb-0 justify-content-start\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"service\" ? \" active\" : \"\")} id=\"service-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#service\" type=\"button\" role=\"tab\" aria-controls=\"service\" aria-selected=\"true\" onClick={handleServiceTab}>\n                  {t(\"services\")}\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"category\" ? \" active\" : \"\")} id=\"categories-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#categories\" type=\"button\" role=\"tab\" aria-controls=\"categories\" aria-selected=\"true\" onClick={handleCategoryTab}>\n                  {t(\"categories\")}\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-4 py-md-0 py-2 px-md-0 px-4 order-md-2 order-3 search-wrp\">\n            <div className=\"search search-radius\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <i className=\"far fa-search\"></i>\n                </span>\n                {tabview && tabview == \"service\" ? (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameService} onInput={(e) => dispatch(serviceSearchName(e.target.value))} onClick={handleClickSearchService} onKeyUp={handleKeyUpSearchService} onBlur={handleOnBlurService} />\n                    <a className=\"close cursor-pointer\" style={{ display: isSearchNameService ? \"block\" : \"none\" }} onClick={handleCloseSearchService}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                ) : (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameCategory} onInput={(e) => dispatch(categoriesearchName(e.target.value))} onClick={handleClickSearchCategory} onKeyUp={handleKeyUpSearchCategory} onBlur={handleOnBlurCategory} />\n                    <a className=\"close cursor-pointer\" style={{ display: isSearchNameCategory ? \"block\" : \"none\" }} onClick={handleCloseSearchCategory}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                )}\n              </div>\n              {tabview && tabview == \"service\" ? (\n                <div className={\"search-result dropdown-box \" + isSearchListService} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewService.data && isSuggetionViewService.data.length ? isSuggetionViewService.data.length : \"0\"} next={fetchDataSuggetionListService} scrollableTarget=\"search-content\" hasMore={isSuggetionViewService.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <ServiceSuggetionListView view={isSuggetionViewService} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              ) : (\n                <div className={\"search-result dropdown-box \" + isSearchListCategory} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewCategory.data && isSuggetionViewCategory.data.length ? isSuggetionViewCategory.data.length : \"0\"} next={fetchDataSuggetionListCategory} scrollableTarget=\"search-content\" hasMore={isSuggetionViewCategory.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <CategorySuggetionListView view={isSuggetionViewCategory} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-4 text-end col-5 ps-0 order-md-3 order-2\">\n            <div className=\"tab-content p-0 d-inline-block\">\n              <div className={tabview && tabview == \"service\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"service\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleopenAddServiceForm}>\n                  {t(\"new_service\")}\n                </a>\n              </div>\n              <div className={tabview && tabview == \"category\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"category\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleOpenAddCategoryForm}>\n                  {t(\"new_category\")}\n                </a>\n              </div>\n            </div>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a href=\"#\" id=\"addservice-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"import.png\"} className=\"me-3\" alt=\"\" />\n                      Import Services\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"addsale-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"export.png\"} className=\"me-3\" />\n                      Export Services\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className={\"tab-content \" + (tabview && tabview == \"service\" ? \"px-lg-4\" : \"list-view-content\")}>\n            <div className={\"tab-pane\" + (tabview && tabview == \"service\" ? \" show active\" : \"\")} id=\"service\" role=\"tabpanel\" aria-labelledby=\"service-tab\">\n              {ListView.length > 0 || ListView.data ? (\n                <section>\n                  <div className=\"table-responsive services-table-shadow\" id=\"scrollableListView\">\n                    <InfiniteScroll dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataList} scrollableTarget=\"page-content-service\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                      <table className=\"table bg-white\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ name: sort.name == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"service_name\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ sku: sort.sku == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"sku\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.sku == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.sku == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ category: { name: sort && sort.category && sort.category.name == \"asc\" ? \"desc\" : \"asc\" } })}>\n                                {t(\"category\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort && sort.category && sort.category.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort && sort.category && sort.category.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ stock_quantity: sort.stock_quantity == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"stock\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.stock_quantity == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.stock_quantity == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ retail_price: sort.retail_price == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"retail_price\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.retail_price == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.retail_price == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <div className=\"d-flex align-items-center justify-content-end\">{t(\"action\")}</div>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"services-table-data\">\n                          <ServiceListView view={ListView} />\n                        </tbody>\n                      </table>\n\n                      {!isFetching && ListView.next_page_url && (\n                        <div className=\"col-2 m-auto p-3\">\n                          <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                            {t(\"more\")}\n                          </button>\n                        </div>\n                      )}\n                    </InfiniteScroll>\n                  </div>\n                </section>\n              ) : (\n                <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n                  <div className=\"complete-box-wrp text-center \">\n                    <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n                    <h4 className=\"mb-2 fw-semibold\">\n                      {t(\"no_services_have_been_created_yet\")}\n                      <a className=\"add-service ms-1 cursor-pointer\" onClick={() => dispatch(openAddServiceForm())}>\n                        {t(\"please_create_one\")}\n                      </a>\n                      .\n                    </h4>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className={\"tab-pane\" + (tabview && tabview == \"category\" ? \" show active\" : \"\")} id=\"categories\" role=\"tabpanel\" aria-labelledby=\"categories-tab\">\n              <Categories />\n            </div>\n          </div>\n        </div>\n        {categoryIsOpenedAddForm ? <CategoryAddForm /> : \"\"}\n        {categoryIsOpenedEditForm ? <CategoryEditForm /> : \"\"}\n        {serviceIsOpenedAddForm ? <ServiceAddForm /> : \"\"}\n        {serviceIsOpenedEditForm ? <ServiceEditForm /> : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Services;\n","/opt/lampp/htdocs/git/salonreact/src/pages/staff/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/subscriptions/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/sales/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/vouchers/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/calender/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MinimalLayout/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/Loader.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/Language.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/auth/RestLogin.js",[],"/opt/lampp/htdocs/git/salonreact/src/common/EventBus.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/fancybox.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductSuggetionListView.js",["500","501","502","503"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { productListViewApi, closeProductSearchList, productSearchName } from \"../../../store/slices/productSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n// import ReactPaginate from 'react-paginate';\n\nconst ProductSuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.product.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(productSearchName(suggetionname));\n    dispatch(closeProductSearchList());\n    dispatch(productListViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <li className=\"product-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{image_url ? <img src={image_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name) +' - '+sku}</span>\n                  <span className=\"user-id\">{ucfirst(supplier_name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default ProductSuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductListView.js",["504","505","506","507","508","509","510","511","512","513","514","515"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { productManageStock, productDeleteApi, productDetailApi, productSortRemove, openEditProductForm } from \"../../../store/slices/productSlice\";\nimport { supplierOptions } from \"../../../store/slices/supplierSlice\";\nimport { taxOptions } from \"../../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\n// import ReactPaginate from 'react-paginate';\n\nconst ProductListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const currentUser = props.currentUser;\n  const view = props.view;\n\n  // const view = useSelector((state) => state.product.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleProductDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_product\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(productDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleProductEditForm = (e) => {\n    const id = e.currentTarget.closest(\".product-view-tr\").dataset.id;\n    dispatch(openEditProductForm());\n    dispatch(productDetailApi({ id })).then(action => {\n      if(action.meta.requestStatus == 'fulfilled'){\n          const detail = action.payload;\n          if (detail.image) {\n            dispatch(selectImage({ name: detail.image, size: \"\", type: \"\", url: detail.image_url }));\n          }else{\n            dispatch(removeImage());\n          }\n          dispatch(productManageStock(detail && detail.manage_stock));\n          dispatch(supplierOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n          dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n      }\n    });\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let cost_price = objectData[item].cost_price;\n          let retail_price = objectData[item].retail_price;\n          let manage_stock = objectData[item].manage_stock;\n          let stock_quantity = objectData[item].stock_quantity;\n          let low_stock_threshold = objectData[item].low_stock_threshold;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <tr className=\"product-view-tr\" key={i} data-id={id}>\n              <td className=\"pe-0\" width=\"60px\">\n                {image_url ? (\n                  <div className=\"user\">\n                    <a data-fancybox=\"\" data-src={image_url}>\n                      <img src={image_url} alt=\"\" className=\"rounded-circle wh-40\" />\n                    </a>\n                  </div>\n                ) : (\n                  <div className=\"user-initial\">{name.charAt(0)}</div>\n                )}\n              </td>\n              <td>{ucfirst(name)}\n              </td>\n              <td>{sku}</td>\n              <td>{supplier_name}</td>\n              <td>{stock_quantity}</td>\n              <td>{retail_price}</td>\n              <td className=\"ps-0 text-end\" width=\"60px\">\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleProductEditForm(e)}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleProductDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ProductListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierAddForm.js",["516","517","518","519","520"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { closeAddSupplierForm, supplierStoreApi } from \"../../../store/slices/supplierSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\n\nconst SupplierAddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.supplier.isOpenedAddForm);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseAddSupplierForm = () => {\n    dispatch(closeAddSupplierForm());\n    dispatch({type:'supplier/detail/rejected'});\n  };\n\n  const initialValues = {\n    name: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    logo: \"\",\n    email: \"\",\n    phone_number: \"\",\n    website: \"\",\n    address: \"\",\n    street: \"\",\n    suburb: \"\",\n    state: \"\",\n    postcode: \"\"\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"supplier_name\")).required(),\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    logo: Yup.mixed(),\n    // logo: Yup.string().trim().label(t(\"logo\")),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    website: Yup.string().trim().url().label(t(\"website\")).required(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required()\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(supplierStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddSupplierForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n      {(formik) => {\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"addsuppliers-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t('new_supplier')}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseAddSupplierForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"supplier\")}</h4>\n                          <p>{t(\"add_the_name_of_the_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"supplier_name\")} controlId=\"supplierForm-name\" />\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"contact_information\")}</h4>\n                          <p>{t(\"add_the_contact_details_of_this_supplier\")}</p>\n                          <InputFieldImage name=\"logo\" accept=\"image/*\" label={t(\"add_supplier_Logo\")} page=\"supplier-form\" controlId=\"supplierForm-logo\" imagname=\"\" imageurl=\"\"/>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row gx-2\">\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"first_name\" value={formik.values.first_name} label={t(\"first_name\")} controlId=\"supplierForm-first_name\" />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"last_name\" value={formik.values.last_name} label={t(\"last_name\")} controlId=\"supplierForm-last_name\" />\n                            </div>\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"phone_number\" value={formik.values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"supplierForm-phone_number\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"email\" value={formik.values.email} label={t(\"email\")} controlId=\"supplierForm-email\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"website\" value={formik.values.website} label={t(\"website\")} controlId=\"supplierForm-website\" />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"address\")}</h4>\n                          <p>{t(\"add_the_address_of_this_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <MapAddressField name=\"address\" label={t(\"address\")} value={formik.values.address} placeholder={t(\"typing_address\")} controlId=\"supplierForm-address\" />\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"street\" value={formik.values.street} label={t(\"street\")} controlId=\"supplierForm-street\" />\n                          </div>\n                          <div className=\"row gx-2\">\n                            <div className=\"col-md-6 mb-3\">\n                              <InputField type=\"text\" name=\"suburb\" value={formik.values.suburb} label={t(\"suburb\")} controlId=\"supplierForm-suburb\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"state\" value={formik.values.state} label={t(\"state\")} controlId=\"supplierForm-state\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"postcode\" value={formik.values.postcode} label={t(\"postcode\")} controlId=\"supplierForm-postcode\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default SupplierAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierEditForm.js",["521","522","523","524","525","526","527","528"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { closeEditSupplierForm, supplierUpdateApi } from \"../../../store/slices/supplierSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst SupplierEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.supplier.isOpenedEditForm);\n  const detail = useSelector((state) => state.supplier.isDetailData);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditSupplierForm = () => {\n    dispatch(closeEditSupplierForm());\n    dispatch({ type: \"supplier/detail/rejected\" });\n  };\n  const initialValues = {\n    name: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone_number: '',\n    website: '',\n    address: '',\n    street: '',\n    suburb: '',\n    state: '',\n    postcode: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"supplier_name\")).required(),\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    logo: Yup.mixed(),\n    // logo: Yup.string().trim().label(t(\"logo\")),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    website: Yup.string().trim().url().label(t(\"website\")).required(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required(),\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(supplierUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditSupplierForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              if (detail.logo) {\n                dispatch(selectImage({ name: detail.logo, size: \"\", type: \"\", url: detail.logo_url }));\n              }\n              const fields = ['id',\"name\", \"first_name\", \"last_name\", \"email\", \"phone_number\", \"website\", \"address\", \"street\", \"suburb\", \"state\", \"postcode\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"editsuppliers-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t('edit_supplier')}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseEditSupplierForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"supplier\")}</h4>\n                          <p>{t(\"add_the_name_of_the_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"supplier_name\")} controlId=\"supplierForm-name\" />\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"contact_information\")}</h4>\n                          <p>{t(\"add_the_contact_details_of_this_supplier\")}</p>\n                          <InputFieldImage name=\"logo\" accept=\"image/*\" label={t(\"add_supplier_Logo\")} page=\"supplier-form\" controlId=\"supplierForm-logo\" imagname=\"\" imageurl=\"\" />\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row gx-2\">\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"first_name\" value={formik.values.first_name} label={t(\"first_name\")} controlId=\"supplierForm-first_name\" />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"last_name\" value={formik.values.last_name} label={t(\"last_name\")} controlId=\"supplierForm-last_name\" />\n                            </div>\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"phone_number\" value={formik.values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"supplierForm-phone_number\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"email\" value={formik.values.email} label={t(\"email\")} controlId=\"supplierForm-email\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"website\" value={formik.values.website} label={t(\"website\")} controlId=\"supplierForm-website\" />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"address\")}</h4>\n                          <p>{t(\"add_the_address_of_this_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <MapAddressField name=\"address\" label={t(\"address\")} value={formik.values.address} placeholder={t(\"typing_address\")} controlId=\"supplierForm-address\" />\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"street\" value={formik.values.street} label={t(\"street\")} controlId=\"supplierForm-street\" />\n                          </div>\n                          <div className=\"row gx-2\">\n                            <div className=\"col-md-6 mb-3\">\n                              <InputField type=\"text\" name=\"suburb\" value={formik.values.suburb} label={t(\"suburb\")} controlId=\"supplierForm-suburb\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"state\" value={formik.values.state} label={t(\"state\")} controlId=\"supplierForm-state\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"postcode\" value={formik.values.postcode} label={t(\"postcode\")} controlId=\"supplierForm-postcode\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default SupplierEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierSuggetionListView.js",["529","530","531","532","533","534"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { supplierGridViewApi, closeSupplierSearchList, supplierSearchName } from \"../../../store/slices/supplierSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n\n// import ReactPaginate from 'react-paginate';\n\nconst SupplierSuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.supplier.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(supplierSearchName(suggetionname));\n    dispatch(closeSupplierSearchList());\n    dispatch(supplierGridViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let first_name = objectData[item].first_name;\n          let last_name = objectData[item].last_name;\n          let email = objectData[item].email;\n          let phone_number = objectData[item].phone_number;\n          let profile_photo_url = objectData[item].profile_photo_url;\n          return (\n            <li className=\"supplier-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{profile_photo_url ? <img src={profile_photo_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name)}</span>\n                  <span className=\"user-id\">{ucfirst(first_name + \" \" + last_name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default SupplierSuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryAddForm.js",["535","536","537","538","539","540"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewCategoryForm } from \"../../../store/slices/categorySlice\";\nimport { closeAddCategoryForm, categoryStoreApi } from \"../../../store/slices/categorySlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\n\nconst CategoryAddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.category.isOpenedAddForm);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseAddCategoryForm = () => {\n    dispatch(closeAddCategoryForm());\n    dispatch({type:'category/detail/rejected'});\n  };\n\n  const initialValues = {\n    name: \"\"\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"category_name\")).required()\n  });\n  yupconfig();\n\n  const handlecategoriesubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(categoryStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddCategoryForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handlecategoriesubmit}>\n      {(formik) => {\n          return (\n            <div className={rightDrawerOpened ? \"modal fade show\" : \"modal fade\"} id=\"add-category\" tabIndex=\"-1\" aria-labelledby=\"addcategoryModalLabel\" aria-hidden=\"true\" style={{ display : rightDrawerOpened ? \"block\" : \"none\" }}>\n                <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content \">\n                        <button type=\"button\" className=\"close me-md-4 me-3 mt-md-4 mt-3\" onClick={handleCloseAddCategoryForm}>\n                            <img src={ config.imagepath + \"close-icon.svg\"} alt=\"\"/>\n                        </button>\n                        <div className=\"modal-body p-md-4 p-3\">\n                            <h4 className=\"mb-2\">{t('add_category')}</h4>\n                            <form noValidate onSubmit={formik.handleSubmit}>\n                                <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"category_name\")} controlId=\"categoryForm-name\" />\n                                <div className=\"text-center\">\n                                    <button type=\"submit\" className=\"btn\">\n                                      {t(\"save\")}\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryEditForm.js",["541","542","543","544","545","546","547","548","549"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewCategoryForm } from \"../../../store/slices/categorySlice\";\nimport { closeEditCategoryForm, categoryUpdateApi } from \"../../../store/slices/categorySlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst CategoryEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.category.isOpenedEditForm);\n  const detail = useSelector((state) => state.category.isDetailData);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditCategoryForm = () => {\n    dispatch(closeEditCategoryForm());\n    dispatch({ type: \"category/detail/rejected\" });\n  };\n  const initialValues = {\n    name: ''\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"category_name\")).required()\n  });\n  yupconfig();\n\n  const handlecategoriesubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(categoryUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditCategoryForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handlecategoriesubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              if (detail.logo) {\n                dispatch(selectImage({ name: detail.logo, size: \"\", type: \"\", url: detail.logo_url }));\n              }\n              const fields = ['id',\"name\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={rightDrawerOpened ? \"modal fade show\" : \"modal fade\"} id=\"edit-category\" tabIndex=\"-1\" aria-labelledby=\"editcategoryModalLabel\" aria-hidden=\"true\" style={{ display : rightDrawerOpened ? \"block\" : \"none\" }}>\n                <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content \">\n                        <button type=\"button\" className=\"close me-md-4 me-3 mt-md-4 mt-3\" onClick={handleCloseEditCategoryForm}>\n                            <img src={ config.imagepath + \"close-icon.svg\"} alt=\"\"/>\n                        </button>\n                        <div className=\"modal-body p-md-4 p-3\">\n                            <h4 className=\"mb-2\">{t('edit_category')}</h4>\n                            <form noValidate onSubmit={formik.handleSubmit}>\n                                <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"category_name\")} controlId=\"categoryForm-name\" />\n                                <div className=\"text-center\">\n                                    <button type=\"submit\" className=\"btn\">\n                                      {t(\"save\")}\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductEditForm.js",["550","551","552","553","554","555","556","557","558","559","560","561","562","563"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, SwitchField, InputFieldImage, TextareaField, ReactSelectField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { productManageStock, closeEditProductForm, productUpdateApi } from \"../../../store/slices/productSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst ProductEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.product.isOpenedEditForm);\n  const detail = useSelector((state) => state.product.isDetailData);\n  const isProductManageStock = useSelector((state) => state.product.isProductManageStock);\n  const isSupplierOption = useSelector((state) => state.supplier.isSupplierOption);\n  const isTaxOption = useSelector((state) => state.tax.isTaxOption);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditSupplierForm = () => {\n    dispatch(closeEditProductForm());\n    dispatch({ type: \"product/detail/rejected\" });\n    dispatch(removeImage());\n  };\n  // const initialValues = {\n  //   id: detail && detail.id,\n  //   name: detail && detail.name,\n  //   sku: detail && detail.sku,\n  //   description: detail && detail.description,\n  //   cost_price: detail && detail.cost_price ? detail.cost_price : '',\n  //   retail_price: detail && detail.retail_price ? detail && detail.retail_price : '',\n  //   manage_stock: '',\n  //   stock_quantity: detail && detail.stock_quantity ? detail.stock_quantity : '',\n  //   low_stock_threshold: detail && detail.low_stock_threshold ? detail.low_stock_threshold : '',\n  //   tax_id: detail && detail.tax_id,\n  //   supplier_id: detail && detail.supplier_id,\n  // };\n  const initialValues = {\n    id: \"\",\n    name: \"\",\n    sku: \"\",\n    description: \"\",\n    cost_price: \"\",\n    retail_price: \"\",\n    manage_stock: \"\",\n    stock_quantity: \"\",\n    low_stock_threshold: \"\",\n    tax_id: \"\",\n    supplier_id: \"\",\n  };\n\n  const digitOnly = (value) => /^\\d+$/.test(value);\n  const decimalOnly = (value) => /^\\d{1,6}(\\.\\d{1,2})?$/.test(value);\n\n  const validationSchema = Yup.object().shape({\n    image: Yup.mixed(),\n    name: Yup.string().max(100).label(t(\"product_name\")).trim().required(),\n    sku: Yup.string().trim().label(t(\"sku\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    cost_price: Yup.string().trim().label(t(\"cost_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    retail_price: Yup.string().trim().label(t(\"retail_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    stock_quantity: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"stock_quantity\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    low_stock_threshold: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"low_stock_threshold\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    tax_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"tax\")).required())),\n    supplier_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"supplier\")).required())),\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(productUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditProductForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const supplierOptionsData = isSupplierOption;\n  const taxOptionsData = isTaxOption;\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              const fields = ['id',\"name\", \"sku\", \"description\", \"cost_price\", \"retail_price\", \"manage_stock\", \"stock_quantity\", \"low_stock_threshold\", \"tax_id\", \"supplier_id\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"editproduct-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t(\"edit_product\")}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseEditSupplierForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"description\")}</h4>\n                          <p>{t(\"add_the_name_and_general_details_of_this_product\")}</p>\n                          <InputFieldImage name=\"image\" accept=\"image/*\" label={t(\"add_product_image\")} page=\"product-form\" controlId=\"productForm-logo\" imagname=\"\" imageurl=\"\" />\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"product_name\")} controlId=\"productForm-name\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"sku\" value={formik.values.sku} label={t(\"sku\")} controlId=\"productForm-sku\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <ReactSelectField name=\"supplier_id\" placeholder={t(\"search_option\")} value={formik.values.supplier_id} options={supplierOptionsData} label={t(\"supplier\")} controlId=\"productForm-supplier_id\" isMulti={false}  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextareaField name=\"description\" value={formik.values.description} label={t(\"description\")} controlId=\"productForm-description\"  />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"price\")}</h4>\n                          <p>{t(\"add_the_pricing_details_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row\">\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"cost_price\" value={formik.values.cost_price} label={t(\"cost_price\")} controlId=\"productForm-cost_price\"  />\n                            </div>\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"retail_price\" value={formik.values.retail_price} label={t(\"retail_price\")} controlId=\"productForm-retail_price\"  />\n                            </div>\n                            <div className=\"col-md-8 mb-3\">\n                              <ReactSelectField name=\"tax_id\" placeholder={t(\"search_option\")} value={formik.values.tax_id} options={taxOptionsData} label={t(\"tax\")} controlId=\"productForm-tax_id\" isMulti={false}  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"inventory\")}</h4>\n                          <p>{t(\"manage_stock_levels_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <SwitchField\n                            name=\"manage_stock\"\n                            label={t(\"manage_stock\")}\n                            controlId=\"clientForm-manage_stock\"\n                            value='1'\n                            onChange={(e) => {\n                              if(e.currentTarget.checked){\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '1', false);\n                                }, 100);\n                              }else{\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '', false);\n                                }, 100);\n                              }\n                              formik.handleChange(e);\n                            }}\n                          />\n                          {console.log(formik.values.manage_stock)}\n                          <div className=\"row\" style={{ display: formik.values.manage_stock == \"\" || formik.values.manage_stock == 0 ? \"none\" : \"\" }}>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"stock_quantity\" value={formik.values.stock_quantity != null ? formik.values.stock_quantity : \"\"} label={t(\"stock_quantity\")} controlId=\"productForm-stock_quantity\"   />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"low_stock_threshold\" value={formik.values.stock_quantity != null ? formik.values.low_stock_threshold : \"\"} label={t(\"low_stock_threshold\")} controlId=\"productForm-low_stock_threshold\"  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ProductEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductAddForm.js",["564","565","566","567","568","569","570","571","572","573","574","575"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, SwitchField, InputFieldImage, TextareaField, ReactSelectField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { productManageStock, closeAddProductForm, productStoreApi } from \"../../../store/slices/productSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport CustomSelect from \"../../../component/form/CustomSelect\";\n\nconst ProductAddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.product.isOpenedAddForm);\n  const isProductManageStock = useSelector((state) => state.product.isProductManageStock);\n  const isSupplierOption = useSelector((state) => state.supplier.isSupplierOption);\n  const isTaxOption = useSelector((state) => state.tax.isTaxOption);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseAddProductForm = () => {\n    dispatch(closeAddProductForm());\n    dispatch({ type: \"product/detail/rejected\" });\n    dispatch(removeImage());\n  };\n\n  const initialValues = {\n    image: \"\",\n    name: \"\",\n    sku: \"\",\n    description: \"\",\n    cost_price: \"\",\n    retail_price: \"\",\n    manage_stock: '',\n    stock_quantity: \"\",\n    low_stock_threshold: \"\",\n    tax_id: \"\",\n    supplier_id: \"\",\n  };\n\n  const digitOnly = (value) => /^\\d+$/.test(value);\n  const decimalOnly = (value) => /^\\d{1,6}(\\.\\d{1,2})?$/.test(value);\n\n  const validationSchema = Yup.object().shape({\n    image: Yup.mixed().nullable(),\n    name: Yup.string().max(100).label(t(\"product_name\")).trim().required(),\n    sku: Yup.string().trim().label(t(\"sku\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    cost_price: Yup.string().trim().label(t(\"cost_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    retail_price: Yup.string().trim().label(t(\"retail_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    manage_stock:Yup.mixed().nullable(),\n    stock_quantity: Yup.string().when(\"manage_stock\", {\n      is: '1',\n      then: Yup.string().trim().label(t(\"stock_quantity\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly).nullable(),\n    }),\n    low_stock_threshold: Yup.string().when(\"manage_stock\", {\n      is: '1',\n      then: Yup.string().trim().label(t(\"low_stock_threshold\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly).nullable(),\n    }),\n    tax_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"tax\")).required())),\n    supplier_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"supplier\")).required())),\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(productStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddProductForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const supplierOptionsData = isSupplierOption;\n  const taxOptionsData = isTaxOption;\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n        {(formik) => {\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"addproduct-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t(\"new_product\")}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseAddProductForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"description\")}</h4>\n                          <p>{t(\"add_the_name_and_general_details_of_this_product\")}</p>\n                          <InputFieldImage name=\"image\" accept=\"image/*\" label={t(\"add_product_image\")} page=\"product-form\" controlId=\"productForm-logo\" imagname=\"\" imageurl=\"\"/>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"product_name\")} controlId=\"productForm-name\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"sku\" value={formik.values.sku} label={t(\"sku\")} controlId=\"productForm-sku\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <ReactSelectField name=\"supplier_id\" placeholder={t(\"search_option\")} value={formik.values.supplier_id} options={supplierOptionsData} label={t(\"supplier\")} controlId=\"productForm-supplier_id\" isMulti={false} />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextareaField name=\"description\" value={formik.values.description} label={t(\"description\")} controlId=\"productForm-description\" />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"price\")}</h4>\n                          <p>{t(\"add_the_pricing_details_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row\">\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"cost_price\" value={formik.values.cost_price} label={t(\"cost_price\")} controlId=\"productForm-cost_price\" />\n                            </div>\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"retail_price\" value={formik.values.retail_price} label={t(\"retail_price\")} controlId=\"productForm-retail_price\" />\n                            </div>\n                            <div className=\"col-md-8 mb-3\">\n                              <ReactSelectField name=\"tax_id\" placeholder={t(\"search_option\")} value={formik.values.tax_id} options={taxOptionsData} label={t(\"tax\")} controlId=\"productForm-tax_id\" isMulti={false}  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"inventory\")}</h4>\n                          <p>{t(\"manage_stock_levels_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <SwitchField\n                            name=\"manage_stock\"\n                            label={t(\"manage_stock\")}\n                            controlId=\"clientForm-manage_stock\"\n                            value={'1'}\n                            onChange={(e) => {\n                              if(e.currentTarget.checked){\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '1', false);\n                                }, 100);\n                              }else{\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '', false);\n                                }, 100);\n                              }\n                              formik.handleChange(e);\n                            }}\n                          />\n                          <div className=\"row\" style={{ display: formik.values.manage_stock == \"\" || formik.values.manage_stock == 0 ? \"none\" : \"\" }}>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"stock_quantity\" value={formik.values.stock_quantity} label={t(\"stock_quantity\")} controlId=\"productForm-stock_quantity\" />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"low_stock_threshold\" value={formik.values.low_stock_threshold} label={t(\"low_stock_threshold\")} controlId=\"productForm-low_stock_threshold\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ProductAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategorySuggetionListView.js",["576","577","578","579"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { categoryListViewApi, closecategoriesearchList, categoriesearchName } from \"../../../store/slices/categorySlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n\n// import ReactPaginate from 'react-paginate';\n\nconst CategorySuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.category.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(categoriesearchName(suggetionname));\n    dispatch(closecategoriesearchList());\n    dispatch(categoryListViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          return (\n            <li className=\"category-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default CategorySuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceEditForm.js",["580","581","582","583","584","585","586","587","588","589","590","591","592","593"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, SwitchField, InputFieldImage, TextareaField, ReactSelectField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewCategoryForm } from \"../../../store/slices/categorySlice\";\nimport { serviceManageStock, closeEditServiceForm, serviceUpdateApi } from \"../../../store/slices/serviceSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst ServiceEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.service.isOpenedEditForm);\n  const detail = useSelector((state) => state.service.isDetailData);\n  const isServiceManageStock = useSelector((state) => state.service.isServiceManageStock);\n  const isCategoryOption = useSelector((state) => state.category.isCategoryOption);\n  const isTaxOption = useSelector((state) => state.tax.isTaxOption);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditCategoryForm = () => {\n    dispatch(closeEditServiceForm());\n    dispatch({ type: \"service/detail/rejected\" });\n    dispatch(removeImage());\n  };\n  // const initialValues = {\n  //   id: detail && detail.id,\n  //   name: detail && detail.name,\n  //   sku: detail && detail.sku,\n  //   description: detail && detail.description,\n  //   cost_price: detail && detail.cost_price ? detail.cost_price : '',\n  //   retail_price: detail && detail.retail_price ? detail && detail.retail_price : '',\n  //   manage_stock: '',\n  //   stock_quantity: detail && detail.stock_quantity ? detail.stock_quantity : '',\n  //   low_stock_threshold: detail && detail.low_stock_threshold ? detail.low_stock_threshold : '',\n  //   tax_id: detail && detail.tax_id,\n  //   category_id: detail && detail.category_id,\n  // };\n  const initialValues = {\n    id: \"\",\n    name: \"\",\n    sku: \"\",\n    description: \"\",\n    cost_price: \"\",\n    retail_price: \"\",\n    manage_stock: \"\",\n    stock_quantity: \"\",\n    low_stock_threshold: \"\",\n    tax_id: \"\",\n    category_id: \"\",\n  };\n\n  const digitOnly = (value) => /^\\d+$/.test(value);\n  const decimalOnly = (value) => /^\\d{1,6}(\\.\\d{1,2})?$/.test(value);\n\n  const validationSchema = Yup.object().shape({\n    image: Yup.mixed(),\n    name: Yup.string().max(100).label(t(\"service_name\")).trim().required(),\n    sku: Yup.string().trim().label(t(\"sku\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    cost_price: Yup.string().trim().label(t(\"cost_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    retail_price: Yup.string().trim().label(t(\"retail_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    stock_quantity: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"stock_quantity\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    low_stock_threshold: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"low_stock_threshold\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    tax_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"tax\")).required())),\n    category_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"category\")).required())),\n  });\n  yupconfig();\n\n  const handlecategoriesubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(serviceUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditServiceForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const categoryOptionsData = isCategoryOption;\n  const taxOptionsData = isTaxOption;\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handlecategoriesubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              const fields = ['id',\"name\", \"sku\", \"description\", \"cost_price\", \"retail_price\", \"manage_stock\", \"stock_quantity\", \"low_stock_threshold\", \"tax_id\", \"category_id\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"editservice-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t(\"edit_service\")}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseEditCategoryForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"description\")}</h4>\n                          <p>{t(\"add_the_name_and_general_details_of_this_service\")}</p>\n                          <InputFieldImage name=\"image\" accept=\"image/*\" label={t(\"add_service_image\")} page=\"service-form\" controlId=\"serviceForm-logo\" imagname=\"\" imageurl=\"\" />\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"service_name\")} controlId=\"serviceForm-name\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"sku\" value={formik.values.sku} label={t(\"sku\")} controlId=\"serviceForm-sku\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <ReactSelectField name=\"category_id\" placeholder={t(\"search_option\")} value={formik.values.category_id} options={categoryOptionsData} label={t(\"category\")} controlId=\"serviceForm-category_id\" isMulti={false}  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextareaField name=\"description\" value={formik.values.description} label={t(\"description\")} controlId=\"serviceForm-description\"  />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-category-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"price\")}</h4>\n                          <p>{t(\"add_the_pricing_details_of_this_service\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row\">\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"cost_price\" value={formik.values.cost_price} label={t(\"cost_price\")} controlId=\"serviceForm-cost_price\"  />\n                            </div>\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"retail_price\" value={formik.values.retail_price} label={t(\"retail_price\")} controlId=\"serviceForm-retail_price\"  />\n                            </div>\n                            <div className=\"col-md-8 mb-3\">\n                              <ReactSelectField name=\"tax_id\" placeholder={t(\"search_option\")} value={formik.values.tax_id} options={taxOptionsData} label={t(\"tax\")} controlId=\"serviceForm-tax_id\" isMulti={false}  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-category-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"inventory\")}</h4>\n                          <p>{t(\"manage_stock_levels_of_this_service\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <SwitchField\n                            name=\"manage_stock\"\n                            label={t(\"manage_stock\")}\n                            controlId=\"clientForm-manage_stock\"\n                            value='1'\n                            onChange={(e) => {\n                              if(e.currentTarget.checked){\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '1', false);\n                                }, 100);\n                              }else{\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '', false);\n                                }, 100);\n                              }\n                              formik.handleChange(e);\n                            }}\n                          />\n                          {console.log(formik.values.manage_stock)}\n                          <div className=\"row\" style={{ display: formik.values.manage_stock == \"\" || formik.values.manage_stock == 0 ? \"none\" : \"\" }}>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"stock_quantity\" value={formik.values.stock_quantity != null ? formik.values.stock_quantity : \"\"} label={t(\"stock_quantity\")} controlId=\"serviceForm-stock_quantity\"   />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"low_stock_threshold\" value={formik.values.stock_quantity != null ? formik.values.low_stock_threshold : \"\"} label={t(\"low_stock_threshold\")} controlId=\"serviceForm-low_stock_threshold\"  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ServiceEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceAddForm.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceSuggetionListView.js",["594","595","596","597"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { serviceListViewApi, closeServiceSearchList, serviceSearchName } from \"../../../store/slices/serviceSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n// import ReactPaginate from 'react-paginate';\n\nconst ServiceSuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.service.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(serviceSearchName(suggetionname));\n    dispatch(closeServiceSearchList());\n    dispatch(serviceListViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <li className=\"service-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{image_url ? <img src={image_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name) +' - '+sku}</span>\n                  <span className=\"user-id\">{ucfirst(supplier_name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default ServiceSuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceListView.js",["598","599","600","601","602","603","604","605","606","607","608","609"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { serviceManageStock, serviceDeleteApi, serviceDetailApi, serviceSortRemove, openEditServiceForm } from \"../../../store/slices/serviceSlice\";\nimport { supplierOptions } from \"../../../store/slices/supplierSlice\";\nimport { taxOptions } from \"../../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\n// import ReactPaginate from 'react-paginate';\n\nconst ServiceListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const currentUser = props.currentUser;\n  const view = props.view;\n\n  // const view = useSelector((state) => state.service.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleServiceDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_service\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(serviceDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleServiceEditForm = (e, props) => {\n    const id = e.currentTarget.closest(\".service-view-tr\").dataset.id;\n    dispatch(openEditServiceForm());\n    dispatch(serviceDetailApi({ id })).then(action => {\n      if(action.meta.requestStatus == 'fulfilled'){\n          const detail = action.payload;\n          if (detail.image) {\n            dispatch(selectImage({ name: detail.image, size: \"\", type: \"\", url: detail.image_url }));\n          }else{\n            dispatch(removeImage());\n          }\n          dispatch(serviceManageStock(detail && detail.manage_stock));\n          dispatch(supplierOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n          dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n      }\n    });\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let cost_price = objectData[item].cost_price;\n          let retail_price = objectData[item].retail_price;\n          let manage_stock = objectData[item].manage_stock;\n          let stock_quantity = objectData[item].stock_quantity;\n          let low_stock_threshold = objectData[item].low_stock_threshold;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <tr className=\"service-view-tr\" key={i} data-id={id}>\n              <td className=\"pe-0\" width=\"60px\">\n                {image_url ? (\n                  <div className=\"user\">\n                    <a data-fancybox=\"\" data-src={image_url}>\n                      <img src={image_url} alt=\"\" className=\"rounded-circle wh-40\" />\n                    </a>\n                  </div>\n                ) : (\n                  <div className=\"user-initial\">{name.charAt(0)}</div>\n                )}\n              </td>\n              <td>{ucfirst(name)}\n              </td>\n              <td>{sku}</td>\n              <td>{supplier_name}</td>\n              <td>{stock_quantity}</td>\n              <td>{retail_price}</td>\n              <td className=\"ps-0 text-end\" width=\"60px\">\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleServiceEditForm(e, { tab: \"servicedetail\" })}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleServiceDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ServiceListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientAddForm.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/gridview.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/listview.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/SuggetionListView.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/index.js",["610","611","612","613","614"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../../config\";\nimport SupplierGridView from \"./SupplierGridView\";\nimport { openAddSupplierForm, supplierGridViewApi, supplierSuggetionListApi } from \"../../../store/slices/supplierSlice\";\n\nconst Suppliers = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const GridView = useSelector((state) => state.supplier.isGridView);\n  const fetchDataGrid = () => {\n    dispatch(supplierGridViewApi({ next_page_url: GridView.next_page_url }));\n  };\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(supplierGridViewApi({ next_page_url: GridView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      {GridView.length > 0 || GridView.data ? (\n        <div className=\"row\">\n          <InfiniteScroll className=\"row\" dataLength={GridView.data && GridView.data.length ? GridView.data.length : \"0\"} next={fetchDataGrid} scrollableTarget=\"page-content-supplier\" hasMore={GridView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n            <a className=\"box-image-cover cursor-pointer\" onClick={() => dispatch(openAddSupplierForm())}>\n              <div className=\"tabs-image\">\n                <img src={config.imagepath + \"suppliers.png\"} alt=\"\" />\n              </div>\n              <div className=\"image-content\">\n                <h5>\n                  <i className=\"fal fa-plus me-2\"></i> {t(\"add_new\")}\n                </h5>\n              </div>\n            </a>\n            <SupplierGridView currentUser={currentUser} view={GridView} />\n            {!isFetching && GridView.next_page_url && (\n              <div className=\"col-2 m-auto text-center\">\n                <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                  {t(\"more\")}\n                </button>\n              </div>\n            )}\n          </InfiniteScroll>\n        </div>\n      ) : (\n        <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n          <div className=\"complete-box-wrp text-center \">\n            <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n            <h4 className=\"mb-2 fw-semibold\">\n              {t(\"no_suppliers_have_been_created_yet\")}\n              <a className=\"add-suppliers ms-1 cursor-pointer\" onClick={() => dispatch(openAddSupplierForm())}>\n                {t(\"please_create_one\")}\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Suppliers;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/index.js",["615","616","617","618"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../../config\";\nimport CategoryListView from \"./CategoryListView\";\nimport { openAddCategoryForm, categoryListViewApi, categoriesuggetionListApi } from \"../../../store/slices/categorySlice\";\n\nconst Categories = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const ListView = useSelector((state) => state.category.isListView);\n  const fetchDataGrid = () => {\n    dispatch(categoryListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(categoryListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      {ListView.length > 0 || ListView.data ? (\n        <section className=\"services-table\">\n          <div className=\"services-table-shadow\">\n            <InfiniteScroll className=\"\" dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataGrid} scrollableTarget=\"page-content-category\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n              <table className=\"table table-striped bg-white categorie-table\">\n                <thead>\n                  <tr>\n                    <th>Category</th>\n                    <th>Count</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody className=\"services-table-data\">\n                  <CategoryListView currentUser={currentUser} view={ListView} />\n                </tbody>\n              </table>\n\n              {!isFetching && ListView.next_page_url && (\n                <div className=\"col-2 m-auto text-center\">\n                  <button onClick={loadMoreItems} className=\"btn btn-primary m-4\">\n                    {t(\"more\")}\n                  </button>\n                </div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </section>\n      ) : (\n        <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n          <div className=\"complete-box-wrp text-center \">\n            <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n            <h4 className=\"mb-2 fw-semibold\">\n              {t(\"no_categories_have_been_created_yet\")}\n              <a className=\"add-categories ms-1 cursor-pointer\" onClick={() => dispatch(openAddCategoryForm())}>\n                {t(\"please_create_one\")}\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Categories;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Sidebar/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/hooks/useScriptRef.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/form/Field.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/form/CustomSelect.js",[],"/opt/lampp/htdocs/git/salonreact/src/helpers/functions.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierGridView.js",["619","620","621","622","623","624","625","626"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { openEditSupplierForm, supplierDeleteApi, supplierDetailApi } from \"../../../store/slices/supplierSlice\";\n\nconst SupplierGridView = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.supplier.isView);\n \n  const objectData = view && view.data ? view.data : view;\n  const handleSupplierDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.first_name + \" \" + props.last_name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_supplier\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(supplierDeleteApi({ id: props.id }));\n    }\n  };\n \n  const handleEditForm = (e) =>{\n      const id = e.currentTarget.closest('.box-image-cover').dataset.id;\n      dispatch(openEditSupplierForm());\n      dispatch(supplierDetailApi({ id }));\n  }\n  return (\n    <>\n      {objectData && Object.keys(objectData).map((item, i) => {\n        let id = objectData[item].id;\n        let name = objectData[item].name;\n        let first_name = objectData[item].first_name;\n        let last_name = objectData[item].last_name;\n        let phone_number = objectData[item].phone_number;\n        let logo_url = objectData[item].logo_url;\n        return (\n          <div className=\"box-image-cover\" key={i} data-id={id}>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" style={{ minWidth: \"116px\" }} aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\" onClick={handleEditForm}>\n                      <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"edit\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"sms.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"sms\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"email.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"email\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleSupplierDelete}>\n                      <i className=\"far fa-trash me-3\"></i>\n                      {t(\"delete\")}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <a className=\"supplier-detail cursor-pointer\" >\n              {logo_url ? (\n                <div className=\"tabs-image\">\n                  <img src={logo_url} alt=\"\" className=\"rounded-circle wh-118\" />\n                </div>\n              ) : (\n                <div className=\"tabs-image user-initial mx-auto\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>\n              )}\n              <div className=\"image-content\">\n                <h5 className=\"fw-semibold mb-1\">{ucfirst(name)}</h5>\n                <h5 className=\"mb-1 fw-normal\">{ucfirst(first_name + \" \" + last_name)}</h5>\n                <h6 className=\"mb-0 fw-normal text-sm\">{phone_number}</h6>\n              </div>\n            </a>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SupplierGridView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryListView.js",["627","628","629","630","631","632"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { openEditCategoryForm, categoryDeleteApi, categoryDetailApi } from \"../../../store/slices/categorySlice\";\n\nconst CategoryListView = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.category.isView);\n\n  const objectData = view && view.data ? view.data : view;\n  const handleCategoryDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.first_name + \" \" + props.last_name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_category\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(categoryDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleEditForm = (e) => {\n    const id = e.currentTarget.closest(\".category-view-tr\").dataset.id;\n    dispatch(openEditCategoryForm());\n    dispatch(categoryDetailApi({ id }));\n  };\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          return (\n            <tr className=\"category-view-tr\" key={i} data-id={id}>\n              <td>{ucfirst(name)}</td>\n              <td>\n                <a href=\"#\" className=\"color-wine\">\n                  4\n                </a>\n              </td>\n              <td style={{ textAlign: 'right', width: '8%' }}>\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                    <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleEditForm(e)}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleCategoryDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default CategoryListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientEditForm.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/Sweatalert2/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Voucher/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Appointment/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Subscription/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Photos/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Invoices/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Membership/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Documents/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/ProfileSection/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/hooks/useErrorsRef.js",[],"/opt/lampp/htdocs/git/salonreact/src/yupconfig.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/form/Validation.js",[],{"ruleId":"633","replacedBy":"634"},{"ruleId":"635","replacedBy":"636"},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"641","line":13,"column":10,"nodeType":"639","messageId":"640","endLine":13,"endColumn":21},{"ruleId":"637","severity":1,"message":"642","line":27,"column":9,"nodeType":"639","messageId":"640","endLine":27,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":101,"column":39,"nodeType":"645","messageId":"646","endLine":101,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":138,"column":39,"nodeType":"645","messageId":"646","endLine":138,"endColumn":41},{"ruleId":"647","severity":1,"message":"648","line":169,"column":17,"nodeType":"649","endLine":169,"endColumn":267},{"ruleId":"643","severity":1,"message":"644","line":169,"column":74,"nodeType":"645","messageId":"646","endLine":169,"endColumn":76},{"ruleId":"647","severity":1,"message":"648","line":174,"column":17,"nodeType":"649","endLine":174,"endColumn":275},{"ruleId":"643","severity":1,"message":"644","line":174,"column":74,"nodeType":"645","messageId":"646","endLine":174,"endColumn":76},{"ruleId":"643","severity":1,"message":"644","line":186,"column":37,"nodeType":"645","messageId":"646","endLine":186,"endColumn":39},{"ruleId":"647","severity":1,"message":"648","line":189,"column":21,"nodeType":"649","endLine":189,"endColumn":146},{"ruleId":"647","severity":1,"message":"648","line":196,"column":21,"nodeType":"649","endLine":196,"endColumn":148},{"ruleId":"643","severity":1,"message":"644","line":202,"column":35,"nodeType":"645","messageId":"646","endLine":202,"endColumn":37},{"ruleId":"643","severity":1,"message":"644","line":223,"column":50,"nodeType":"645","messageId":"646","endLine":223,"endColumn":52},{"ruleId":"643","severity":1,"message":"644","line":223,"column":117,"nodeType":"645","messageId":"646","endLine":223,"endColumn":119},{"ruleId":"647","severity":1,"message":"650","line":224,"column":17,"nodeType":"649","endLine":224,"endColumn":116},{"ruleId":"643","severity":1,"message":"644","line":228,"column":50,"nodeType":"645","messageId":"646","endLine":228,"endColumn":52},{"ruleId":"643","severity":1,"message":"644","line":228,"column":118,"nodeType":"645","messageId":"646","endLine":228,"endColumn":120},{"ruleId":"647","severity":1,"message":"650","line":229,"column":17,"nodeType":"649","endLine":229,"endColumn":117},{"ruleId":"647","severity":1,"message":"648","line":241,"column":21,"nodeType":"649","endLine":241,"endColumn":99},{"ruleId":"647","severity":1,"message":"648","line":247,"column":21,"nodeType":"649","endLine":247,"endColumn":96},{"ruleId":"651","severity":1,"message":"652","line":248,"column":23,"nodeType":"649","endLine":248,"endColumn":85},{"ruleId":"643","severity":1,"message":"644","line":260,"column":62,"nodeType":"645","messageId":"646","endLine":260,"endColumn":64},{"ruleId":"647","severity":1,"message":"650","line":270,"column":31,"nodeType":"649","endLine":270,"endColumn":147},{"ruleId":"643","severity":1,"message":"644","line":270,"column":117,"nodeType":"645","messageId":"646","endLine":270,"endColumn":119},{"ruleId":"643","severity":1,"message":"644","line":273,"column":80,"nodeType":"645","messageId":"646","endLine":273,"endColumn":82},{"ruleId":"643","severity":1,"message":"644","line":274,"column":82,"nodeType":"645","messageId":"646","endLine":274,"endColumn":84},{"ruleId":"647","severity":1,"message":"650","line":279,"column":31,"nodeType":"649","endLine":279,"endColumn":145},{"ruleId":"643","severity":1,"message":"644","line":279,"column":115,"nodeType":"645","messageId":"646","endLine":279,"endColumn":117},{"ruleId":"643","severity":1,"message":"644","line":282,"column":79,"nodeType":"645","messageId":"646","endLine":282,"endColumn":81},{"ruleId":"643","severity":1,"message":"644","line":283,"column":81,"nodeType":"645","messageId":"646","endLine":283,"endColumn":83},{"ruleId":"647","severity":1,"message":"650","line":288,"column":31,"nodeType":"649","endLine":288,"endColumn":195},{"ruleId":"643","severity":1,"message":"644","line":288,"column":163,"nodeType":"645","messageId":"646","endLine":288,"endColumn":165},{"ruleId":"643","severity":1,"message":"644","line":291,"column":114,"nodeType":"645","messageId":"646","endLine":291,"endColumn":116},{"ruleId":"643","severity":1,"message":"644","line":292,"column":116,"nodeType":"645","messageId":"646","endLine":292,"endColumn":118},{"ruleId":"647","severity":1,"message":"650","line":297,"column":31,"nodeType":"649","endLine":297,"endColumn":167},{"ruleId":"643","severity":1,"message":"644","line":297,"column":137,"nodeType":"645","messageId":"646","endLine":297,"endColumn":139},{"ruleId":"643","severity":1,"message":"644","line":300,"column":90,"nodeType":"645","messageId":"646","endLine":300,"endColumn":92},{"ruleId":"643","severity":1,"message":"644","line":301,"column":92,"nodeType":"645","messageId":"646","endLine":301,"endColumn":94},{"ruleId":"647","severity":1,"message":"650","line":306,"column":31,"nodeType":"649","endLine":306,"endColumn":163},{"ruleId":"643","severity":1,"message":"644","line":306,"column":133,"nodeType":"645","messageId":"646","endLine":306,"endColumn":135},{"ruleId":"643","severity":1,"message":"644","line":309,"column":88,"nodeType":"645","messageId":"646","endLine":309,"endColumn":90},{"ruleId":"643","severity":1,"message":"644","line":310,"column":90,"nodeType":"645","messageId":"646","endLine":310,"endColumn":92},{"ruleId":"647","severity":1,"message":"650","line":339,"column":23,"nodeType":"649","endLine":339,"endColumn":117},{"ruleId":"643","severity":1,"message":"644","line":348,"column":62,"nodeType":"645","messageId":"646","endLine":348,"endColumn":64},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"641","line":13,"column":10,"nodeType":"639","messageId":"640","endLine":13,"endColumn":21},{"ruleId":"637","severity":1,"message":"642","line":27,"column":9,"nodeType":"639","messageId":"640","endLine":27,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":101,"column":39,"nodeType":"645","messageId":"646","endLine":101,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":138,"column":39,"nodeType":"645","messageId":"646","endLine":138,"endColumn":41},{"ruleId":"647","severity":1,"message":"648","line":169,"column":17,"nodeType":"649","endLine":169,"endColumn":267},{"ruleId":"643","severity":1,"message":"644","line":169,"column":74,"nodeType":"645","messageId":"646","endLine":169,"endColumn":76},{"ruleId":"647","severity":1,"message":"648","line":174,"column":17,"nodeType":"649","endLine":174,"endColumn":278},{"ruleId":"643","severity":1,"message":"644","line":174,"column":74,"nodeType":"645","messageId":"646","endLine":174,"endColumn":76},{"ruleId":"643","severity":1,"message":"644","line":186,"column":37,"nodeType":"645","messageId":"646","endLine":186,"endColumn":39},{"ruleId":"647","severity":1,"message":"650","line":189,"column":21,"nodeType":"649","endLine":189,"endColumn":152},{"ruleId":"647","severity":1,"message":"650","line":196,"column":21,"nodeType":"649","endLine":196,"endColumn":154},{"ruleId":"643","severity":1,"message":"644","line":202,"column":35,"nodeType":"645","messageId":"646","endLine":202,"endColumn":37},{"ruleId":"643","severity":1,"message":"644","line":223,"column":50,"nodeType":"645","messageId":"646","endLine":223,"endColumn":52},{"ruleId":"643","severity":1,"message":"644","line":223,"column":117,"nodeType":"645","messageId":"646","endLine":223,"endColumn":119},{"ruleId":"647","severity":1,"message":"650","line":224,"column":17,"nodeType":"649","endLine":224,"endColumn":116},{"ruleId":"643","severity":1,"message":"644","line":228,"column":50,"nodeType":"645","messageId":"646","endLine":228,"endColumn":52},{"ruleId":"643","severity":1,"message":"644","line":228,"column":118,"nodeType":"645","messageId":"646","endLine":228,"endColumn":120},{"ruleId":"647","severity":1,"message":"650","line":229,"column":17,"nodeType":"649","endLine":229,"endColumn":117},{"ruleId":"647","severity":1,"message":"648","line":241,"column":21,"nodeType":"649","endLine":241,"endColumn":99},{"ruleId":"647","severity":1,"message":"648","line":247,"column":21,"nodeType":"649","endLine":247,"endColumn":96},{"ruleId":"651","severity":1,"message":"652","line":248,"column":23,"nodeType":"649","endLine":248,"endColumn":85},{"ruleId":"643","severity":1,"message":"644","line":259,"column":64,"nodeType":"645","messageId":"646","endLine":259,"endColumn":66},{"ruleId":"643","severity":1,"message":"644","line":260,"column":62,"nodeType":"645","messageId":"646","endLine":260,"endColumn":64},{"ruleId":"647","severity":1,"message":"650","line":270,"column":31,"nodeType":"649","endLine":270,"endColumn":147},{"ruleId":"643","severity":1,"message":"644","line":270,"column":117,"nodeType":"645","messageId":"646","endLine":270,"endColumn":119},{"ruleId":"643","severity":1,"message":"644","line":273,"column":80,"nodeType":"645","messageId":"646","endLine":273,"endColumn":82},{"ruleId":"643","severity":1,"message":"644","line":274,"column":82,"nodeType":"645","messageId":"646","endLine":274,"endColumn":84},{"ruleId":"647","severity":1,"message":"650","line":279,"column":31,"nodeType":"649","endLine":279,"endColumn":145},{"ruleId":"643","severity":1,"message":"644","line":279,"column":115,"nodeType":"645","messageId":"646","endLine":279,"endColumn":117},{"ruleId":"643","severity":1,"message":"644","line":282,"column":79,"nodeType":"645","messageId":"646","endLine":282,"endColumn":81},{"ruleId":"643","severity":1,"message":"644","line":283,"column":81,"nodeType":"645","messageId":"646","endLine":283,"endColumn":83},{"ruleId":"647","severity":1,"message":"650","line":288,"column":31,"nodeType":"649","endLine":288,"endColumn":195},{"ruleId":"643","severity":1,"message":"644","line":288,"column":163,"nodeType":"645","messageId":"646","endLine":288,"endColumn":165},{"ruleId":"643","severity":1,"message":"644","line":291,"column":114,"nodeType":"645","messageId":"646","endLine":291,"endColumn":116},{"ruleId":"643","severity":1,"message":"644","line":292,"column":116,"nodeType":"645","messageId":"646","endLine":292,"endColumn":118},{"ruleId":"647","severity":1,"message":"650","line":297,"column":31,"nodeType":"649","endLine":297,"endColumn":167},{"ruleId":"643","severity":1,"message":"644","line":297,"column":137,"nodeType":"645","messageId":"646","endLine":297,"endColumn":139},{"ruleId":"643","severity":1,"message":"644","line":300,"column":90,"nodeType":"645","messageId":"646","endLine":300,"endColumn":92},{"ruleId":"643","severity":1,"message":"644","line":301,"column":92,"nodeType":"645","messageId":"646","endLine":301,"endColumn":94},{"ruleId":"647","severity":1,"message":"650","line":306,"column":31,"nodeType":"649","endLine":306,"endColumn":163},{"ruleId":"643","severity":1,"message":"644","line":306,"column":133,"nodeType":"645","messageId":"646","endLine":306,"endColumn":135},{"ruleId":"643","severity":1,"message":"644","line":309,"column":88,"nodeType":"645","messageId":"646","endLine":309,"endColumn":90},{"ruleId":"643","severity":1,"message":"644","line":310,"column":90,"nodeType":"645","messageId":"646","endLine":310,"endColumn":92},{"ruleId":"647","severity":1,"message":"650","line":340,"column":23,"nodeType":"649","endLine":340,"endColumn":117},{"ruleId":"643","severity":1,"message":"644","line":349,"column":62,"nodeType":"645","messageId":"646","endLine":349,"endColumn":64},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"653","line":3,"column":23,"nodeType":"639","messageId":"640","endLine":3,"endColumn":34},{"ruleId":"637","severity":1,"message":"642","line":14,"column":9,"nodeType":"639","messageId":"640","endLine":14,"endColumn":20},{"ruleId":"647","severity":1,"message":"650","line":38,"column":15,"nodeType":"649","endLine":38,"endColumn":80},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"653","line":3,"column":23,"nodeType":"639","messageId":"640","endLine":3,"endColumn":34},{"ruleId":"637","severity":1,"message":"654","line":9,"column":66,"nodeType":"639","messageId":"640","endLine":9,"endColumn":83},{"ruleId":"637","severity":1,"message":"642","line":18,"column":9,"nodeType":"639","messageId":"640","endLine":18,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":28,"column":20,"nodeType":"645","messageId":"646","endLine":28,"endColumn":22},{"ruleId":"643","severity":1,"message":"644","line":37,"column":36,"nodeType":"645","messageId":"646","endLine":37,"endColumn":38},{"ruleId":"637","severity":1,"message":"655","line":58,"column":15,"nodeType":"639","messageId":"640","endLine":58,"endColumn":25},{"ruleId":"637","severity":1,"message":"656","line":60,"column":15,"nodeType":"639","messageId":"640","endLine":60,"endColumn":27},{"ruleId":"637","severity":1,"message":"657","line":62,"column":15,"nodeType":"639","messageId":"640","endLine":62,"endColumn":34},{"ruleId":"647","severity":1,"message":"650","line":70,"column":21,"nodeType":"649","endLine":70,"endColumn":62},{"ruleId":"647","severity":1,"message":"650","line":92,"column":25,"nodeType":"649","endLine":92,"endColumn":136},{"ruleId":"647","severity":1,"message":"650","line":98,"column":25,"nodeType":"649","endLine":98,"endColumn":155},{"ruleId":"637","severity":1,"message":"658","line":18,"column":10,"nodeType":"639","messageId":"640","endLine":18,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":66,"column":39,"nodeType":"645","messageId":"646","endLine":66,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":72,"column":46,"nodeType":"645","messageId":"646","endLine":72,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":75,"column":22,"nodeType":"645","messageId":"646","endLine":75,"endColumn":24},{"ruleId":"647","severity":1,"message":"650","line":105,"column":23,"nodeType":"649","endLine":105,"endColumn":105},{"ruleId":"637","severity":1,"message":"659","line":16,"column":8,"nodeType":"639","messageId":"640","endLine":16,"endColumn":9},{"ruleId":"637","severity":1,"message":"658","line":19,"column":10,"nodeType":"639","messageId":"640","endLine":19,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":65,"column":39,"nodeType":"645","messageId":"646","endLine":65,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":71,"column":46,"nodeType":"645","messageId":"646","endLine":71,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":74,"column":22,"nodeType":"645","messageId":"646","endLine":74,"endColumn":24},{"ruleId":"660","severity":2,"message":"661","line":97,"column":11,"nodeType":"639","endLine":97,"endColumn":20},{"ruleId":"662","severity":1,"message":"663","line":107,"column":14,"nodeType":"664","endLine":107,"endColumn":22,"suggestions":"665"},{"ruleId":"647","severity":1,"message":"650","line":115,"column":23,"nodeType":"649","endLine":115,"endColumn":106},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"653","line":3,"column":23,"nodeType":"639","messageId":"640","endLine":3,"endColumn":34},{"ruleId":"637","severity":1,"message":"642","line":15,"column":9,"nodeType":"639","messageId":"640","endLine":15,"endColumn":20},{"ruleId":"637","severity":1,"message":"666","line":36,"column":15,"nodeType":"639","messageId":"640","endLine":36,"endColumn":20},{"ruleId":"637","severity":1,"message":"667","line":37,"column":15,"nodeType":"639","messageId":"640","endLine":37,"endColumn":27},{"ruleId":"647","severity":1,"message":"650","line":41,"column":15,"nodeType":"649","endLine":41,"endColumn":80},{"ruleId":"637","severity":1,"message":"668","line":9,"column":22,"nodeType":"639","messageId":"640","endLine":9,"endColumn":37},{"ruleId":"637","severity":1,"message":"669","line":9,"column":39,"nodeType":"639","messageId":"640","endLine":9,"endColumn":54},{"ruleId":"637","severity":1,"message":"658","line":18,"column":10,"nodeType":"639","messageId":"640","endLine":18,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":43,"column":39,"nodeType":"645","messageId":"646","endLine":43,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":49,"column":46,"nodeType":"645","messageId":"646","endLine":49,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":52,"column":22,"nodeType":"645","messageId":"646","endLine":52,"endColumn":24},{"ruleId":"637","severity":1,"message":"668","line":9,"column":22,"nodeType":"639","messageId":"640","endLine":9,"endColumn":37},{"ruleId":"637","severity":1,"message":"669","line":9,"column":39,"nodeType":"639","messageId":"640","endLine":9,"endColumn":54},{"ruleId":"637","severity":1,"message":"659","line":16,"column":8,"nodeType":"639","messageId":"640","endLine":16,"endColumn":9},{"ruleId":"637","severity":1,"message":"658","line":19,"column":10,"nodeType":"639","messageId":"640","endLine":19,"endColumn":17},{"ruleId":"643","severity":1,"message":"644","line":43,"column":39,"nodeType":"645","messageId":"646","endLine":43,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":49,"column":46,"nodeType":"645","messageId":"646","endLine":49,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":52,"column":22,"nodeType":"645","messageId":"646","endLine":52,"endColumn":24},{"ruleId":"660","severity":2,"message":"661","line":75,"column":11,"nodeType":"639","endLine":75,"endColumn":20},{"ruleId":"662","severity":1,"message":"663","line":85,"column":14,"nodeType":"664","endLine":85,"endColumn":22,"suggestions":"670"},{"ruleId":"637","severity":1,"message":"671","line":7,"column":8,"nodeType":"639","messageId":"640","endLine":7,"endColumn":14},{"ruleId":"637","severity":1,"message":"672","line":13,"column":10,"nodeType":"639","messageId":"640","endLine":13,"endColumn":28},{"ruleId":"637","severity":1,"message":"641","line":14,"column":10,"nodeType":"639","messageId":"640","endLine":14,"endColumn":21},{"ruleId":"637","severity":1,"message":"659","line":16,"column":8,"nodeType":"639","messageId":"640","endLine":16,"endColumn":9},{"ruleId":"637","severity":1,"message":"658","line":19,"column":10,"nodeType":"639","messageId":"640","endLine":19,"endColumn":17},{"ruleId":"637","severity":1,"message":"673","line":22,"column":9,"nodeType":"639","messageId":"640","endLine":22,"endColumn":29},{"ruleId":"643","severity":1,"message":"644","line":93,"column":39,"nodeType":"645","messageId":"646","endLine":93,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":99,"column":46,"nodeType":"645","messageId":"646","endLine":99,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":102,"column":22,"nodeType":"645","messageId":"646","endLine":102,"endColumn":24},{"ruleId":"660","severity":2,"message":"661","line":128,"column":11,"nodeType":"639","endLine":128,"endColumn":20},{"ruleId":"662","severity":1,"message":"663","line":135,"column":14,"nodeType":"664","endLine":135,"endColumn":22,"suggestions":"674"},{"ruleId":"647","severity":1,"message":"650","line":143,"column":23,"nodeType":"649","endLine":143,"endColumn":106},{"ruleId":"643","severity":1,"message":"644","line":220,"column":93,"nodeType":"645","messageId":"646","endLine":220,"endColumn":95},{"ruleId":"643","severity":1,"message":"644","line":220,"column":129,"nodeType":"645","messageId":"646","endLine":220,"endColumn":131},{"ruleId":"637","severity":1,"message":"675","line":1,"column":17,"nodeType":"639","messageId":"640","endLine":1,"endColumn":26},{"ruleId":"637","severity":1,"message":"671","line":7,"column":8,"nodeType":"639","messageId":"640","endLine":7,"endColumn":14},{"ruleId":"637","severity":1,"message":"672","line":13,"column":10,"nodeType":"639","messageId":"640","endLine":13,"endColumn":28},{"ruleId":"637","severity":1,"message":"676","line":16,"column":8,"nodeType":"639","messageId":"640","endLine":16,"endColumn":20},{"ruleId":"637","severity":1,"message":"658","line":19,"column":10,"nodeType":"639","messageId":"640","endLine":19,"endColumn":17},{"ruleId":"637","severity":1,"message":"673","line":21,"column":9,"nodeType":"639","messageId":"640","endLine":21,"endColumn":29},{"ruleId":"643","severity":1,"message":"644","line":77,"column":39,"nodeType":"645","messageId":"646","endLine":77,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":83,"column":46,"nodeType":"645","messageId":"646","endLine":83,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":86,"column":22,"nodeType":"645","messageId":"646","endLine":86,"endColumn":24},{"ruleId":"647","severity":1,"message":"650","line":119,"column":23,"nodeType":"649","endLine":119,"endColumn":104},{"ruleId":"643","severity":1,"message":"644","line":195,"column":93,"nodeType":"645","messageId":"646","endLine":195,"endColumn":95},{"ruleId":"643","severity":1,"message":"644","line":195,"column":129,"nodeType":"645","messageId":"646","endLine":195,"endColumn":131},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"653","line":3,"column":23,"nodeType":"639","messageId":"640","endLine":3,"endColumn":34},{"ruleId":"637","severity":1,"message":"642","line":15,"column":9,"nodeType":"639","messageId":"640","endLine":15,"endColumn":20},{"ruleId":"647","severity":1,"message":"650","line":36,"column":15,"nodeType":"649","endLine":36,"endColumn":80},{"ruleId":"637","severity":1,"message":"671","line":7,"column":8,"nodeType":"639","messageId":"640","endLine":7,"endColumn":14},{"ruleId":"637","severity":1,"message":"677","line":13,"column":10,"nodeType":"639","messageId":"640","endLine":13,"endColumn":28},{"ruleId":"637","severity":1,"message":"641","line":14,"column":10,"nodeType":"639","messageId":"640","endLine":14,"endColumn":21},{"ruleId":"637","severity":1,"message":"659","line":16,"column":8,"nodeType":"639","messageId":"640","endLine":16,"endColumn":9},{"ruleId":"637","severity":1,"message":"658","line":19,"column":10,"nodeType":"639","messageId":"640","endLine":19,"endColumn":17},{"ruleId":"637","severity":1,"message":"678","line":22,"column":9,"nodeType":"639","messageId":"640","endLine":22,"endColumn":29},{"ruleId":"643","severity":1,"message":"644","line":93,"column":39,"nodeType":"645","messageId":"646","endLine":93,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":99,"column":46,"nodeType":"645","messageId":"646","endLine":99,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":102,"column":22,"nodeType":"645","messageId":"646","endLine":102,"endColumn":24},{"ruleId":"660","severity":2,"message":"661","line":128,"column":11,"nodeType":"639","endLine":128,"endColumn":20},{"ruleId":"662","severity":1,"message":"663","line":135,"column":14,"nodeType":"664","endLine":135,"endColumn":22,"suggestions":"679"},{"ruleId":"647","severity":1,"message":"650","line":143,"column":23,"nodeType":"649","endLine":143,"endColumn":106},{"ruleId":"643","severity":1,"message":"644","line":220,"column":93,"nodeType":"645","messageId":"646","endLine":220,"endColumn":95},{"ruleId":"643","severity":1,"message":"644","line":220,"column":129,"nodeType":"645","messageId":"646","endLine":220,"endColumn":131},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"653","line":3,"column":23,"nodeType":"639","messageId":"640","endLine":3,"endColumn":34},{"ruleId":"637","severity":1,"message":"642","line":14,"column":9,"nodeType":"639","messageId":"640","endLine":14,"endColumn":20},{"ruleId":"647","severity":1,"message":"650","line":38,"column":15,"nodeType":"649","endLine":38,"endColumn":80},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"653","line":3,"column":23,"nodeType":"639","messageId":"640","endLine":3,"endColumn":34},{"ruleId":"637","severity":1,"message":"680","line":9,"column":66,"nodeType":"639","messageId":"640","endLine":9,"endColumn":83},{"ruleId":"637","severity":1,"message":"642","line":18,"column":9,"nodeType":"639","messageId":"640","endLine":18,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":28,"column":20,"nodeType":"645","messageId":"646","endLine":28,"endColumn":22},{"ruleId":"643","severity":1,"message":"644","line":37,"column":36,"nodeType":"645","messageId":"646","endLine":37,"endColumn":38},{"ruleId":"637","severity":1,"message":"655","line":58,"column":15,"nodeType":"639","messageId":"640","endLine":58,"endColumn":25},{"ruleId":"637","severity":1,"message":"656","line":60,"column":15,"nodeType":"639","messageId":"640","endLine":60,"endColumn":27},{"ruleId":"637","severity":1,"message":"657","line":62,"column":15,"nodeType":"639","messageId":"640","endLine":62,"endColumn":34},{"ruleId":"647","severity":1,"message":"650","line":70,"column":21,"nodeType":"649","endLine":70,"endColumn":62},{"ruleId":"647","severity":1,"message":"650","line":92,"column":25,"nodeType":"649","endLine":92,"endColumn":162},{"ruleId":"647","severity":1,"message":"650","line":98,"column":25,"nodeType":"649","endLine":98,"endColumn":155},{"ruleId":"637","severity":1,"message":"675","line":1,"column":17,"nodeType":"639","messageId":"640","endLine":1,"endColumn":26},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"681","line":9,"column":52,"nodeType":"639","messageId":"640","endLine":9,"endColumn":76},{"ruleId":"647","severity":1,"message":"650","line":37,"column":13,"nodeType":"649","endLine":37,"endColumn":107},{"ruleId":"647","severity":1,"message":"650","line":63,"column":15,"nodeType":"649","endLine":63,"endColumn":112},{"ruleId":"637","severity":1,"message":"675","line":1,"column":17,"nodeType":"639","messageId":"640","endLine":1,"endColumn":26},{"ruleId":"637","severity":1,"message":"638","line":2,"column":10,"nodeType":"639","messageId":"640","endLine":2,"endColumn":14},{"ruleId":"637","severity":1,"message":"682","line":9,"column":52,"nodeType":"639","messageId":"640","endLine":9,"endColumn":77},{"ruleId":"647","severity":1,"message":"650","line":67,"column":15,"nodeType":"649","endLine":67,"endColumn":113},{"ruleId":"637","severity":1,"message":"653","line":2,"column":23,"nodeType":"639","messageId":"640","endLine":2,"endColumn":34},{"ruleId":"637","severity":1,"message":"642","line":14,"column":9,"nodeType":"639","messageId":"640","endLine":14,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":23,"column":20,"nodeType":"645","messageId":"646","endLine":23,"endColumn":22},{"ruleId":"647","severity":1,"message":"650","line":51,"column":21,"nodeType":"649","endLine":51,"endColumn":102},{"ruleId":"647","severity":1,"message":"650","line":57,"column":21,"nodeType":"649","endLine":57,"endColumn":77},{"ruleId":"647","severity":1,"message":"650","line":63,"column":21,"nodeType":"649","endLine":63,"endColumn":77},{"ruleId":"647","severity":1,"message":"650","line":69,"column":21,"nodeType":"649","endLine":69,"endColumn":152},{"ruleId":"647","severity":1,"message":"650","line":77,"column":13,"nodeType":"649","endLine":77,"endColumn":60},{"ruleId":"637","severity":1,"message":"653","line":2,"column":23,"nodeType":"639","messageId":"640","endLine":2,"endColumn":34},{"ruleId":"637","severity":1,"message":"642","line":14,"column":9,"nodeType":"639","messageId":"640","endLine":14,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":23,"column":20,"nodeType":"645","messageId":"646","endLine":23,"endColumn":22},{"ruleId":"647","severity":1,"message":"648","line":43,"column":17,"nodeType":"649","endLine":43,"endColumn":52},{"ruleId":"647","severity":1,"message":"650","line":55,"column":25,"nodeType":"649","endLine":55,"endColumn":129},{"ruleId":"647","severity":1,"message":"650","line":61,"column":25,"nodeType":"649","endLine":61,"endColumn":156},"no-native-reassign",["683"],"no-negated-in-lhs",["684"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'selectImage' is defined but never used.","'currentUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useSelector' is defined but never used.","'productSortRemove' is defined but never used.","'cost_price' is assigned a value but never used.","'manage_stock' is assigned a value but never used.","'low_stock_threshold' is assigned a value but never used.","'loading' is assigned a value but never used.","'_' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useEffect\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array. Outer scope values like 'detail' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["685"],"'email' is assigned a value but never used.","'phone_number' is assigned a value but never used.","'MapAddressField' is defined but never used.","'InputFieldImage' is defined but never used.",["686"],"'config' is defined but never used.","'productManageStock' is defined but never used.","'isProductManageStock' is assigned a value but never used.",["687"],"'useEffect' is defined but never used.","'CustomSelect' is defined but never used.","'serviceManageStock' is defined but never used.","'isServiceManageStock' is assigned a value but never used.",["688"],"'serviceSortRemove' is defined but never used.","'supplierSuggetionListApi' is defined but never used.","'categoriesuggetionListApi' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"689","fix":"690"},{"desc":"689","fix":"691"},{"desc":"689","fix":"692"},{"desc":"689","fix":"693"},"Update the dependencies array to be: [formik]",{"range":"694","text":"695"},{"range":"696","text":"695"},{"range":"697","text":"695"},{"range":"698","text":"695"},[4344,4352],"[formik]",[3202,3210],[5862,5870],[5864,5872]]