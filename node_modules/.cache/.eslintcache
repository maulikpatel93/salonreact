[{"/opt/lampp/htdocs/git/salonreact/src/index.js":"1","/opt/lampp/htdocs/git/salonreact/src/App.js":"2","/opt/lampp/htdocs/git/salonreact/src/reportWebVitals.js":"3","/opt/lampp/htdocs/git/salonreact/src/store/index.js":"4","/opt/lampp/htdocs/git/salonreact/src/store/reducer.js":"5","/opt/lampp/htdocs/git/salonreact/src/store/slices/imageSlice.js":"6","/opt/lampp/htdocs/git/salonreact/src/store/slices/auth.js":"7","/opt/lampp/htdocs/git/salonreact/src/store/slices/message.js":"8","/opt/lampp/htdocs/git/salonreact/src/store/slices/productSlice.js":"9","/opt/lampp/htdocs/git/salonreact/src/store/slices/supplierSlice.js":"10","/opt/lampp/htdocs/git/salonreact/src/store/slices/clientSlice.js":"11","/opt/lampp/htdocs/git/salonreact/src/store/slices/categorySlice.js":"12","/opt/lampp/htdocs/git/salonreact/src/store/slices/taxSlice.js":"13","/opt/lampp/htdocs/git/salonreact/src/store/slices/serviceSlice.js":"14","/opt/lampp/htdocs/git/salonreact/src/store/HandleResponse.js":"15","/opt/lampp/htdocs/git/salonreact/src/store/HandleError.js":"16","/opt/lampp/htdocs/git/salonreact/src/services/product.service.js":"17","/opt/lampp/htdocs/git/salonreact/src/services/auth.service.js":"18","/opt/lampp/htdocs/git/salonreact/src/services/client.service.js":"19","/opt/lampp/htdocs/git/salonreact/src/services/tax.service.js":"20","/opt/lampp/htdocs/git/salonreact/src/services/supplier.service.js":"21","/opt/lampp/htdocs/git/salonreact/src/services/service.service.js":"22","/opt/lampp/htdocs/git/salonreact/src/services/category.service.js":"23","/opt/lampp/htdocs/git/salonreact/src/store/Unauthorized.js":"24","/opt/lampp/htdocs/git/salonreact/src/services/auth-header.js":"25","/opt/lampp/htdocs/git/salonreact/src/i18n.js":"26","/opt/lampp/htdocs/git/salonreact/src/config.js":"27","/opt/lampp/htdocs/git/salonreact/src/routes/index.js":"28","/opt/lampp/htdocs/git/salonreact/src/routes/MainRoutes.js":"29","/opt/lampp/htdocs/git/salonreact/src/routes/LoginRoutes.js":"30","/opt/lampp/htdocs/git/salonreact/src/routes/AuthenticationRoutes.js":"31","/opt/lampp/htdocs/git/salonreact/src/component/Loadable.js":"32","/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/AuthGuard.js":"33","/opt/lampp/htdocs/git/salonreact/src/pages/dashboard/index.js":"34","/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/GuestGuard.js":"35","/opt/lampp/htdocs/git/salonreact/src/pages/auth/Login.js":"36","/opt/lampp/htdocs/git/salonreact/src/pages/account/index.js":"37","/opt/lampp/htdocs/git/salonreact/src/pages/marketing/index.js":"38","/opt/lampp/htdocs/git/salonreact/src/pages/reports/index.js":"39","/opt/lampp/htdocs/git/salonreact/src/pages/products/index.js":"40","/opt/lampp/htdocs/git/salonreact/src/pages/services/index.js":"41","/opt/lampp/htdocs/git/salonreact/src/pages/staff/index.js":"42","/opt/lampp/htdocs/git/salonreact/src/pages/clients/index.js":"43","/opt/lampp/htdocs/git/salonreact/src/pages/subscriptions/index.js":"44","/opt/lampp/htdocs/git/salonreact/src/pages/sales/index.js":"45","/opt/lampp/htdocs/git/salonreact/src/pages/vouchers/index.js":"46","/opt/lampp/htdocs/git/salonreact/src/pages/calender/index.js":"47","/opt/lampp/htdocs/git/salonreact/src/layout/MinimalLayout/index.js":"48","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/index.js":"49","/opt/lampp/htdocs/git/salonreact/src/component/Loader.js":"50","/opt/lampp/htdocs/git/salonreact/src/component/Language.js":"51","/opt/lampp/htdocs/git/salonreact/src/pages/auth/RestLogin.js":"52","/opt/lampp/htdocs/git/salonreact/src/common/EventBus.js":"53","/opt/lampp/htdocs/git/salonreact/src/component/fancybox.js":"54","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductSuggetionListView.js":"55","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductListView.js":"56","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierAddForm.js":"57","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierEditForm.js":"58","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierSuggetionListView.js":"59","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryAddForm.js":"60","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryEditForm.js":"61","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductEditForm.js":"62","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductAddForm.js":"63","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategorySuggetionListView.js":"64","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceEditForm.js":"65","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceAddForm.js":"66","/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceSuggetionListView.js":"67","/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceListView.js":"68","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientAddForm.js":"69","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/gridview.js":"70","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/listview.js":"71","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/SuggetionListView.js":"72","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/index.js":"73","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/index.js":"74","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/index.js":"75","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Sidebar/index.js":"76","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/index.js":"77","/opt/lampp/htdocs/git/salonreact/src/hooks/useScriptRef.js":"78","/opt/lampp/htdocs/git/salonreact/src/component/form/Field.js":"79","/opt/lampp/htdocs/git/salonreact/src/component/form/CustomSelect.js":"80","/opt/lampp/htdocs/git/salonreact/src/helpers/functions.js":"81","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierGridView.js":"82","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryListView.js":"83","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientEditForm.js":"84","/opt/lampp/htdocs/git/salonreact/src/component/Sweatalert2/index.js":"85","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Voucher/index.js":"86","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Appointment/index.js":"87","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Subscription/index.js":"88","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Photos/index.js":"89","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Invoices/index.js":"90","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Membership/index.js":"91","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Documents/index.js":"92","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/ProfileSection/index.js":"93","/opt/lampp/htdocs/git/salonreact/src/hooks/useErrorsRef.js":"94","/opt/lampp/htdocs/git/salonreact/src/yupconfig.js":"95","/opt/lampp/htdocs/git/salonreact/src/component/form/Validation.js":"96"},{"size":1211,"mtime":1641648189104,"results":"97","hashOfConfig":"98"},{"size":126,"mtime":1641648187316,"results":"99","hashOfConfig":"98"},{"size":362,"mtime":1641640475645,"results":"100","hashOfConfig":"101"},{"size":1139,"mtime":1641648117892,"results":"102","hashOfConfig":"98"},{"size":2143,"mtime":1641648129544,"results":"103","hashOfConfig":"98"},{"size":782,"mtime":1641647483406,"results":"104","hashOfConfig":"98"},{"size":2529,"mtime":1641647075160,"results":"105","hashOfConfig":"98"},{"size":437,"mtime":1641647487450,"results":"106","hashOfConfig":"98"},{"size":9547,"mtime":1641647588021,"results":"107","hashOfConfig":"98"},{"size":9571,"mtime":1641648007049,"results":"108","hashOfConfig":"98"},{"size":11272,"mtime":1641647477678,"results":"109","hashOfConfig":"98"},{"size":9581,"mtime":1641647275583,"results":"110","hashOfConfig":"98"},{"size":1389,"mtime":1641648033085,"results":"111","hashOfConfig":"98"},{"size":9415,"mtime":1641647748372,"results":"112","hashOfConfig":"98"},{"size":224,"mtime":1641648093569,"results":"113","hashOfConfig":"98"},{"size":744,"mtime":1641648074673,"results":"114","hashOfConfig":"98"},{"size":4695,"mtime":1641648239711,"results":"115","hashOfConfig":"98"},{"size":1601,"mtime":1641648226399,"results":"116","hashOfConfig":"98"},{"size":4155,"mtime":1641648236791,"results":"117","hashOfConfig":"98"},{"size":1590,"mtime":1641648246779,"results":"118","hashOfConfig":"98"},{"size":4247,"mtime":1641648244463,"results":"119","hashOfConfig":"98"},{"size":4695,"mtime":1641648242327,"results":"120","hashOfConfig":"98"},{"size":4155,"mtime":1641648228007,"results":"121","hashOfConfig":"98"},{"size":149,"mtime":1641648132964,"results":"122","hashOfConfig":"98"},{"size":405,"mtime":1641648223923,"results":"123","hashOfConfig":"98"},{"size":989,"mtime":1641648191880,"results":"124","hashOfConfig":"98"},{"size":592,"mtime":1641648194304,"results":"125","hashOfConfig":"98"},{"size":498,"mtime":1641648268711,"results":"126","hashOfConfig":"98"},{"size":1992,"mtime":1641648273127,"results":"127","hashOfConfig":"98"},{"size":828,"mtime":1641648270875,"results":"128","hashOfConfig":"98"},{"size":628,"mtime":1641648264707,"results":"129","hashOfConfig":"98"},{"size":362,"mtime":1640166384811,"results":"130","hashOfConfig":"101"},{"size":630,"mtime":1641648178012,"results":"131","hashOfConfig":"98"},{"size":236,"mtime":1641648309603,"results":"132","hashOfConfig":"98"},{"size":716,"mtime":1641648180876,"results":"133","hashOfConfig":"98"},{"size":6972,"mtime":1640686281806,"results":"134","hashOfConfig":"101"},{"size":224,"mtime":1639384613389,"results":"135","hashOfConfig":"101"},{"size":230,"mtime":1639384613393,"results":"136","hashOfConfig":"101"},{"size":224,"mtime":1639384613401,"results":"137","hashOfConfig":"101"},{"size":18636,"mtime":1641636831817,"results":"138","hashOfConfig":"101"},{"size":18730,"mtime":1641636831821,"results":"139","hashOfConfig":"101"},{"size":218,"mtime":1639384613401,"results":"140","hashOfConfig":"101"},{"size":12184,"mtime":1641636831817,"results":"141","hashOfConfig":"101"},{"size":241,"mtime":1641648286599,"results":"142","hashOfConfig":"98"},{"size":218,"mtime":1639384613401,"results":"143","hashOfConfig":"101"},{"size":227,"mtime":1641648283375,"results":"144","hashOfConfig":"98"},{"size":227,"mtime":1639384613393,"results":"145","hashOfConfig":"101"},{"size":291,"mtime":1639652283247,"results":"146","hashOfConfig":"101"},{"size":764,"mtime":1641460579369,"results":"147","hashOfConfig":"101"},{"size":288,"mtime":1639384613389,"results":"148","hashOfConfig":"101"},{"size":1076,"mtime":1639390759210,"results":"149","hashOfConfig":"101"},{"size":3446,"mtime":1641646366366,"results":"150","hashOfConfig":"98"},{"size":327,"mtime":1639384613389,"results":"151","hashOfConfig":"101"},{"size":481,"mtime":1640261989049,"results":"152","hashOfConfig":"101"},{"size":2340,"mtime":1641384268953,"results":"153","hashOfConfig":"101"},{"size":5068,"mtime":1641636831817,"results":"154","hashOfConfig":"101"},{"size":9282,"mtime":1641636831821,"results":"155","hashOfConfig":"101"},{"size":9933,"mtime":1641539602626,"results":"156","hashOfConfig":"101"},{"size":2504,"mtime":1641216354152,"results":"157","hashOfConfig":"101"},{"size":4172,"mtime":1641636831821,"results":"158","hashOfConfig":"101"},{"size":4720,"mtime":1641636831821,"results":"159","hashOfConfig":"101"},{"size":12476,"mtime":1641636831817,"results":"160","hashOfConfig":"101"},{"size":11227,"mtime":1641636831817,"results":"161","hashOfConfig":"101"},{"size":1896,"mtime":1641636831821,"results":"162","hashOfConfig":"101"},{"size":12478,"mtime":1641636831821,"results":"163","hashOfConfig":"101"},{"size":11969,"mtime":1641646516040,"results":"164","hashOfConfig":"98"},{"size":2340,"mtime":1641475693225,"results":"165","hashOfConfig":"101"},{"size":5101,"mtime":1641475693225,"results":"166","hashOfConfig":"101"},{"size":9824,"mtime":1641450087968,"results":"167","hashOfConfig":"101"},{"size":4448,"mtime":1640784715476,"results":"168","hashOfConfig":"101"},{"size":4693,"mtime":1641450087968,"results":"169","hashOfConfig":"101"},{"size":2537,"mtime":1640784715476,"results":"170","hashOfConfig":"101"},{"size":2990,"mtime":1641636831821,"results":"171","hashOfConfig":"101"},{"size":3049,"mtime":1641636831821,"results":"172","hashOfConfig":"101"},{"size":11855,"mtime":1641646514564,"results":"173","hashOfConfig":"98"},{"size":4702,"mtime":1640784715472,"results":"174","hashOfConfig":"101"},{"size":3477,"mtime":1639384613389,"results":"175","hashOfConfig":"101"},{"size":350,"mtime":1639384613389,"results":"176","hashOfConfig":"101"},{"size":9552,"mtime":1641644308430,"results":"177","hashOfConfig":"101"},{"size":2144,"mtime":1641646986052,"results":"178","hashOfConfig":"98"},{"size":109,"mtime":1640092178807,"results":"179","hashOfConfig":"101"},{"size":4345,"mtime":1641216354152,"results":"180","hashOfConfig":"101"},{"size":3213,"mtime":1641636831821,"results":"181","hashOfConfig":"101"},{"size":8703,"mtime":1641633099569,"results":"182","hashOfConfig":"101"},{"size":1077,"mtime":1640092178807,"results":"183","hashOfConfig":"101"},{"size":1722,"mtime":1640092178811,"results":"184","hashOfConfig":"101"},{"size":2051,"mtime":1640092178807,"results":"185","hashOfConfig":"101"},{"size":1119,"mtime":1640686211799,"results":"186","hashOfConfig":"101"},{"size":2615,"mtime":1640092178811,"results":"187","hashOfConfig":"101"},{"size":2307,"mtime":1640092178807,"results":"188","hashOfConfig":"101"},{"size":1113,"mtime":1640784715472,"results":"189","hashOfConfig":"101"},{"size":1151,"mtime":1640784715472,"results":"190","hashOfConfig":"101"},{"size":1367,"mtime":1640092178807,"results":"191","hashOfConfig":"101"},{"size":470,"mtime":1640167508742,"results":"192","hashOfConfig":"101"},{"size":1549,"mtime":1641648211951,"results":"193","hashOfConfig":"98"},{"size":286,"mtime":1641644493227,"results":"194","hashOfConfig":"101"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ecn54v",{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},"1lnbkc",{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","errorCount":1,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","errorCount":1,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":1,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":1,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"381"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},{"filePath":"392","messages":"393","errorCount":1,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/lampp/htdocs/git/salonreact/src/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/App.js",[],"/opt/lampp/htdocs/git/salonreact/src/reportWebVitals.js",[],["428","429"],"/opt/lampp/htdocs/git/salonreact/src/store/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/reducer.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/imageSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/auth.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/message.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/productSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/supplierSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/clientSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/categorySlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/taxSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/slices/serviceSlice.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/HandleResponse.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/HandleError.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/product.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/auth.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/client.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/tax.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/supplier.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/service.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/category.service.js",[],"/opt/lampp/htdocs/git/salonreact/src/store/Unauthorized.js",[],"/opt/lampp/htdocs/git/salonreact/src/services/auth-header.js",[],"/opt/lampp/htdocs/git/salonreact/src/i18n.js",[],"/opt/lampp/htdocs/git/salonreact/src/config.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/MainRoutes.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/LoginRoutes.js",[],"/opt/lampp/htdocs/git/salonreact/src/routes/AuthenticationRoutes.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/Loadable.js",[],"/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/AuthGuard.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/dashboard/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/utils/route-guard/GuestGuard.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/auth/Login.js",["430","431","432","433","434","435","436","437","438","439","440"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport config from \"../../config\";\nimport Language from \"../../component/Language\";\n\nimport RestLogin from \"./RestLogin\";\n\nconst Login = () => {\n  return (\n    <React.Fragment>\n      <section className=\"vh-100\">\n        <div className=\"container py-5 h-custom\">\n          <div className=\"row d-flex justify-content-center align-items-center h-100\">\n            <div className=\"col-md-9 col-lg-6 col-xl-5 text-center\">\n              <img src={config.logopath} className=\"img-fluid\" alt=\"Sample image\" />\n            </div>\n            <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n              <RestLogin />\n            </div>\n          </div>\n          <div className=\"row d-flex justify-content-center align-items-center\">\n            <div className=\"col-md-12 text-center\">\n              <Language />\n            </div>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n};\n// const Login = (props) => {\n//   const [loading, setLoading] = useState(false);\n\n//   const { isLoggedIn } = useSelector((state) => state.auth);\n//   const { message } = useSelector((state) => state.message);\n\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const { t } = useTranslation();\n\n//   useEffect(() => {\n//     dispatch(clearMessage());\n//   }, [dispatch]);\n\n//   const initialValues = {\n//     email: \"\",\n//     password: \"\",\n//     remember_me: \"\",\n//   };\n\n//   const validationSchema = Yup.object().shape({\n//     email: Yup.string().label(\"Email\").email().required(),\n//     password: Yup.string().min(6).max(16).label(\"Password\").required(),\n//     remember_me: Yup.bool(),\n//   });\n\n//   const handleLogin = (formValue) => {\n//     const { email, password, remember_me } = formValue;\n//     setLoading(true);\n\n//     dispatch(login({ email, password, remember_me }))\n//       .unwrap()\n//       .then(() => {\n//         navigate(\"/dashboard\");\n//         // window.location.reload();\n//       })\n//       .catch(() => {\n//         setLoading(false);\n//       });\n//   };\n\n//   if (isLoggedIn) {\n//     return navigate(\"/dashboard\");\n//   }\n//   return (\n//     <>\n//     <React.Fragment>\n//       <section className=\"vh-100\">\n//         <div className=\"container py-5 h-custom\">\n//           <div className=\"row d-flex justify-content-center align-items-center h-100\">\n//             <div className=\"col-md-9 col-lg-6 col-xl-5 text-center\">\n//               <img\n//                 src={config.logopath}\n//                 className=\"img-fluid\"\n//                 alt=\"Sample image\"\n//               />\n//             </div>\n//             <div className=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\n//               <Formik\n//                 initialValues={initialValues}\n//                 validationSchema={validationSchema}\n//                 onSubmit={handleLogin}\n//               >\n//                 {(formik) => (\n//                   <WithTranslateFormErrors\n//                     errors={formik.errors}\n//                     touched={formik.touched}\n//                     setFieldTouched={formik.setFieldTouched}\n//                   >\n//                     <Form>\n//                       <div className=\"d-flex flex-row align-items-center justify-content-center mb-5\">\n//                         <h1 className=\"fw-normal mb-0 me-3\">{t(\"sign_in\")}</h1>\n//                       </div>\n//                       <FloatLabelInputField\n//                         name=\"email\"\n//                         type=\"text\"\n//                         placeholder=\"\"\n//                         className={\n//                           formik.touched.email && formik.errors.email\n//                             ? \"form-control is-invalid\"\n//                             : \"form-control\"\n//                         }\n//                         id=\"login-email\"\n//                         label={t(\"email\")}\n//                       />\n//                       <FloatLabelInputField\n//                         name=\"password\"\n//                         type=\"password\"\n//                         placeholder=\"\"\n//                         className={\n//                           formik.touched.password && formik.errors.password\n//                             ? \"form-control is-invalid\"\n//                             : \"form-control\"\n//                         }\n//                         id=\"login-password\"\n//                         autoComplete=\"off\"\n//                         label={t(\"password\")}\n//                       />\n//                       <div className=\"d-flex justify-content-between align-items-center mb-3\">\n//                         <div className=\"form-check mb-0\">\n//                           <input\n//                             className=\"form-check-input me-2\"\n//                             type=\"checkbox\"\n//                             value=\"\"\n//                             id=\"form2Example3\"\n//                           />\n//                           <label\n//                             className=\"form-check-label\"\n//                             htmlFor=\"form2Example3\"\n//                           >\n//                             {t(\"remember_me\")}\n//                           </label>\n//                         </div>\n//                         <Link to=\"#!\" className=\"text-body\">\n//                           {t(\"forgot_password?\")}\n//                         </Link>\n//                       </div>\n//                       <div className=\"text-center text-lg-start mt-4 pt-2\">\n//                         <button\n//                           type=\"submit\"\n//                           className=\"btn btn-primary btn-lg\"\n//                           disabled={loading}\n//                         >\n//                           {loading && (\n//                             <span className=\"spinner-border spinner-border-sm\"></span>\n//                           )}\n//                           {t(\"login\")}\n//                         </button>\n//                       </div>\n//                     </Form>\n//                   </WithTranslateFormErrors>\n//                 )}\n//               </Formik>\n//               {message && (\n//                 <div className=\"form-group\">\n//                   <div className=\"alert alert-danger\" role=\"alert\">\n//                     {message}\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n\n//             <div className=\"\">\n//               <div className=\"col-12 text-center\">\n//                 <Language />\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//       </React.Fragment>\n//     </>\n//   );\n// };\n\nexport default Login;\n","/opt/lampp/htdocs/git/salonreact/src/pages/account/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/marketing/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/reports/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/products/index.js",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../config\";\nimport Suppliers from \"./suppliers\";\n\nimport { openAddProductForm, productTabView, productListViewApi, productSort, productSortRemove, openProductSearchList, closeProductSearchList, productSuggetionListApi, productSearchName } from \"../../store/slices/productSlice\";\nimport { openAddSupplierForm, supplierGridViewApi, openSupplierSearchList, closeSupplierSearchList, supplierSuggetionListApi, supplierSearchName, supplierOptions } from \"../../store/slices/supplierSlice\";\nimport { taxOptions } from \"../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../store/slices/imageSlice\";\nimport SupplierAddForm from \"./suppliers/SupplierAddForm\";\nimport SupplierEditForm from \"./suppliers/SupplierEditForm\";\nimport SupplierSuggetionListView from \"./suppliers/SupplierSuggetionListView\";\nimport ProductSuggetionListView from \"./list/ProductSuggetionListView\";\nimport ProductListView from \"./list/ProductListView\";\nimport ProductAddForm from \"./form/ProductAddForm\";\nimport ProductEditForm from \"./form/ProductEditForm\";\n\nconst Products = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const tabview = useSelector((state) => state.product.isTabView);\n  const ListView = useSelector((state) => state.product.isListView);\n  const sort = useSelector((state) => state.product.isSort);\n  const productIsOpenedAddForm = useSelector((state) => state.product.isOpenedAddForm);\n  const productIsOpenedEditForm = useSelector((state) => state.product.isOpenedEditForm);\n  const supplierIsOpenedAddForm = useSelector((state) => state.supplier.isOpenedAddForm);\n  const supplierIsOpenedEditForm = useSelector((state) => state.supplier.isOpenedEditForm);\n\n  const isSearchListProduct = useSelector((state) => state.product.isSearchList);\n  const isSearchNameProduct = useSelector((state) => state.product.isSearchName);\n  const isSuggetionViewProduct = useSelector((state) => state.product.isSuggetionListView);\n\n  const isSearchListSupplier = useSelector((state) => state.supplier.isSearchList);\n  const isSearchNameSupplier = useSelector((state) => state.supplier.isSearchName);\n  const isSuggetionViewSupplier = useSelector((state) => state.supplier.isSuggetionListView);\n\n  useEffect(() => {\n    dispatch(productSortRemove());\n    dispatch(productListViewApi());\n    dispatch(supplierGridViewApi());\n  }, [dispatch]);\n\n  const handleProductTab = () => {\n    dispatch(productTabView(\"product\"));\n  };\n\n  const handleSupplierTab = () => {\n    dispatch(productTabView(\"supplier\"));\n  };\n\n  const handleopenAddProductForm = () => {\n    dispatch(openAddProductForm());\n    dispatch(supplierOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n    dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n  };\n\n  const handleOpenAddSupplierForm = () => {\n    dispatch(openAddSupplierForm());\n    dispatch(removeImage());\n  };\n\n  const fetchDataList = () => {\n    dispatch(productListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n  //Product search\n  const fetchDataSuggetionListProduct = () => {\n    dispatch(productSuggetionListApi({ next_page_url: isSuggetionViewProduct.next_page_url, q: isSearchNameProduct }));\n  };\n\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(productListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  const handleClickSearchProduct = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openProductSearchList());\n      dispatch(productSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchProduct = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(productSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openProductSearchList());\n      dispatch(productSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closeSupplierSearchList());\n        }\n      });\n    } else {\n      dispatch(productListViewApi());\n    }\n  };\n  const handleCloseSearchProduct = () => {\n    dispatch(productSearchName(\"\"));\n    dispatch(closeProductSearchList());\n    dispatch(productListViewApi());\n  };\n  const handleOnBlurProduct = (e) => {\n    setTimeout(() => {\n      dispatch(closeProductSearchList());\n    }, 100);\n  };\n\n  //Supplier search\n  const fetchDataSuggetionListSupplier = () => {\n    dispatch(supplierSuggetionListApi({ next_page_url: isSuggetionViewSupplier.next_page_url, q: isSearchNameSupplier }));\n  };\n\n  const handleClickSearchSupplier = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openSupplierSearchList());\n      dispatch(supplierSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchSupplier = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(supplierSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openSupplierSearchList());\n      dispatch(supplierSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closeSupplierSearchList());\n        }\n      });\n    } else {\n      dispatch(supplierGridViewApi());\n    }\n  };\n  const handleCloseSearchSupplier = () => {\n    dispatch(supplierSearchName(\"\"));\n    dispatch(closeSupplierSearchList());\n    dispatch(supplierGridViewApi());\n  };\n  const handleOnBlurSupplier = (e) => {\n    setTimeout(() => {\n      dispatch(closeSupplierSearchList());\n    }, 100);\n  };\n\n  const sorting = (props) => {\n    dispatch(productSort(props));\n    dispatch(productListViewApi({ sort: props }));\n  };\n\n  return (\n    <>\n      <div className={\"page-content bg-pink service page-content-\" + tabview}>\n        <div className=\"row bg-white align-items-center sticky-top\">\n          <div className=\"common-tab col-md-4 col-7 order-1\">\n            <ul className=\"nav nav-tabs mb-0 justify-content-start\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"product\" ? \" active\" : \"\")} id=\"product-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#product\" type=\"button\" role=\"tab\" aria-controls=\"product\" aria-selected=\"true\" onClick={handleProductTab}>\n                  {t(\"products\")}\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"supplier\" ? \" active\" : \"\")} id=\"suppliers-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#suppliers\" type=\"button\" role=\"tab\" aria-controls=\"suppliers\" aria-selected=\"true\" onClick={handleSupplierTab}>\n                  {t(\"suppliers\")}\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-4 py-md-0 py-2 px-md-0 px-4 order-md-2 order-3 search-wrp\">\n            <div className=\"search search-radius\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <i className=\"far fa-search\"></i>\n                </span>\n                {tabview && tabview == \"product\" ? (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameProduct} onInput={(e) => dispatch(productSearchName(e.target.value))} onClick={handleClickSearchProduct} onKeyUp={handleKeyUpSearchProduct} onBlur={handleOnBlurProduct} />\n                    <a href=\"#\" className=\"close\" style={{ display: isSearchNameProduct ? \"block\" : \"none\" }} onClick={handleCloseSearchProduct}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                ) : (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameSupplier} onInput={(e) => dispatch(supplierSearchName(e.target.value))} onClick={handleClickSearchSupplier} onKeyUp={handleKeyUpSearchSupplier} onBlur={handleOnBlurSupplier} />\n                    <a href=\"#\" className=\"close\" style={{ display: isSearchNameSupplier ? \"block\" : \"none\" }} onClick={handleCloseSearchSupplier}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                )}\n              </div>\n              {tabview && tabview == \"product\" ? (\n                <div className={\"search-result dropdown-box \" + isSearchListProduct} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewProduct.data && isSuggetionViewProduct.data.length ? isSuggetionViewProduct.data.length : \"0\"} next={fetchDataSuggetionListProduct} scrollableTarget=\"search-content\" hasMore={isSuggetionViewProduct.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <ProductSuggetionListView view={isSuggetionViewProduct} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              ) : (\n                <div className={\"search-result dropdown-box \" + isSearchListSupplier} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewSupplier.data && isSuggetionViewSupplier.data.length ? isSuggetionViewSupplier.data.length : \"0\"} next={fetchDataSuggetionListSupplier} scrollableTarget=\"search-content\" hasMore={isSuggetionViewSupplier.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <SupplierSuggetionListView view={isSuggetionViewSupplier} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-4 text-end col-5 ps-0 order-md-3 order-2\">\n            <div className=\"tab-content p-0 d-inline-block\">\n              <div className={tabview && tabview == \"product\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"product\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleopenAddProductForm}>\n                  {t(\"new_product\")}\n                </a>\n              </div>\n              <div className={tabview && tabview == \"supplier\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"supplier\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleOpenAddSupplierForm}>\n                  {t(\"new_supplier\")}\n                </a>\n              </div>\n            </div>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a href=\"#\" id=\"addproduct-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"import.png\"} className=\"me-3\" alt=\"\" />\n                      Import Services\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"addsale-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"export.png\"} className=\"me-3\" />\n                      Export Services\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className={\"tab-content list-view-content\"}>\n            <div className={\"tab-pane\" + (tabview && tabview == \"product\" ? \" show active\" : \"\")} id=\"product\" role=\"tabpanel\" aria-labelledby=\"product-tab\">\n              {ListView.length > 0 || ListView.data ? (\n                <section>\n                  <div className=\"table-responsive services-table-shadow\" id=\"scrollableListView\">\n                    <InfiniteScroll dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataList} scrollableTarget=\"page-content-product\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                      <table className=\"table bg-white\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ name: sort.name == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"product_name\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ sku: sort.sku == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"sku\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.sku == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.sku == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ supplier: { name: sort && sort.supplier && sort.supplier.name == \"asc\" ? \"desc\" : \"asc\" } })}>\n                                {t(\"supplier\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort && sort.supplier && sort.supplier.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort && sort.supplier && sort.supplier.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ stock_quantity: sort.stock_quantity == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"stock\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.stock_quantity == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.stock_quantity == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"product-header cursor-pointer\" onClick={() => sorting({ retail_price: sort.retail_price == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"retail_price\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.retail_price == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.retail_price == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <div className=\"d-flex align-items-center justify-content-end\">{t(\"action\")}</div>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"services-table-data\">\n                          <ProductListView view={ListView} />\n                        </tbody>\n                      </table>\n                      {!isFetching && ListView.next_page_url && (\n                        <div className=\"col-2 m-auto p-3\">\n                          <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                            {t(\"more\")}\n                          </button>\n                        </div>\n                      )}\n                    </InfiniteScroll>\n                  </div>\n                </section>\n              ) : (\n                <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n                  <div className=\"complete-box-wrp text-center \">\n                    <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n                    <h4 className=\"mb-2 fw-semibold\">\n                      {t(\"no_products_have_been_created_yet\")}\n                      <a className=\"add-product ms-1 cursor-pointer\" onClick={() => dispatch(openAddProductForm())}>\n                        {t(\"please_create_one\")}\n                      </a>\n                      .\n                    </h4>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className={\"tab-pane\" + (tabview && tabview == \"supplier\" ? \" show active\" : \"\")} id=\"suppliers\" role=\"tabpanel\" aria-labelledby=\"suppliers-tab\">\n              <Suppliers />\n            </div>\n          </div>\n        </div>\n        {supplierIsOpenedAddForm ? <SupplierAddForm /> : \"\"}\n        {supplierIsOpenedEditForm ? <SupplierEditForm /> : \"\"}\n        {productIsOpenedAddForm ? <ProductAddForm /> : \"\"}\n        {productIsOpenedEditForm ? <ProductEditForm /> : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/index.js",["486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../config\";\nimport Categories from \"./categories\";\n\nimport { openAddServiceForm, serviceTabView, serviceListViewApi, serviceSort, serviceSortRemove, openServiceSearchList, closeServiceSearchList, serviceSuggetionListApi, serviceSearchName } from \"../../store/slices/serviceSlice\";\nimport { openAddCategoryForm, categoryListViewApi, openCategorieSearchList, closecategoriesearchList, categoriesuggetionListApi, categoriesearchName, categoryOptions } from \"../../store/slices/categorySlice\";\nimport { taxOptions } from \"../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../store/slices/imageSlice\";\nimport CategoryAddForm from \"./categories/CategoryAddForm\";\nimport CategoryEditForm from \"./categories/CategoryEditForm\";\nimport CategorySuggetionListView from \"./categories/CategorySuggetionListView\";\nimport ServiceSuggetionListView from \"./list/ServiceSuggetionListView\";\nimport ServiceListView from \"./list/ServiceListView\";\nimport ServiceAddForm from \"./form/ServiceAddForm\";\nimport ServiceEditForm from \"./form/ServiceEditForm\";\n\nconst Services = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const tabview = useSelector((state) => state.service.isTabView);\n  const ListView = useSelector((state) => state.service.isListView);\n  const sort = useSelector((state) => state.service.isSort);\n  const serviceIsOpenedAddForm = useSelector((state) => state.service.isOpenedAddForm);\n  const serviceIsOpenedEditForm = useSelector((state) => state.service.isOpenedEditForm);\n  const categoryIsOpenedAddForm = useSelector((state) => state.category.isOpenedAddForm);\n  const categoryIsOpenedEditForm = useSelector((state) => state.category.isOpenedEditForm);\n\n  const isSearchListService = useSelector((state) => state.service.isSearchList);\n  const isSearchNameService = useSelector((state) => state.service.isSearchName);\n  const isSuggetionViewService = useSelector((state) => state.service.isSuggetionListView);\n\n  const isSearchListCategory = useSelector((state) => state.category.isSearchList);\n  const isSearchNameCategory = useSelector((state) => state.category.isSearchName);\n  const isSuggetionViewCategory = useSelector((state) => state.category.isSuggetionListView);\n\n  useEffect(() => {\n    dispatch(serviceSortRemove());\n    dispatch(serviceListViewApi());\n    dispatch(categoryListViewApi());\n  }, [dispatch]);\n\n  const handleServiceTab = () => {\n    dispatch(serviceTabView(\"service\"));\n  };\n\n  const handleCategoryTab = () => {\n    dispatch(serviceTabView(\"category\"));\n  };\n\n  const handleopenAddServiceForm = () => {\n    dispatch(openAddServiceForm());\n    dispatch(categoryOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n    dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n  };\n\n  const handleOpenAddCategoryForm = () => {\n    dispatch(openAddCategoryForm());\n    dispatch(removeImage());\n  };\n\n  const fetchDataList = () => {\n    dispatch(serviceListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n  //Service search\n  const fetchDataSuggetionListService = () => {\n    dispatch(serviceSuggetionListApi({ next_page_url: isSuggetionViewService.next_page_url, q: isSearchNameService }));\n  };\n\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(serviceListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  const handleClickSearchService = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openServiceSearchList());\n      dispatch(serviceSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchService = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(serviceSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openServiceSearchList());\n      dispatch(serviceSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closecategoriesearchList());\n        }\n      });\n    } else {\n      dispatch(serviceListViewApi());\n    }\n  };\n  const handleCloseSearchService = () => {\n    dispatch(serviceSearchName(\"\"));\n    dispatch(closeServiceSearchList());\n    dispatch(serviceListViewApi());\n  };\n  const handleOnBlurService = (e) => {\n    setTimeout(() => {\n      dispatch(closeServiceSearchList());\n    }, 100);\n  };\n\n  //Category search\n  const fetchDataSuggetionListCategory = () => {\n    dispatch(categoriesuggetionListApi({ next_page_url: isSuggetionViewCategory.next_page_url, q: isSearchNameCategory }));\n  };\n\n  const handleClickSearchCategory = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openCategorieSearchList());\n      dispatch(categoriesuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearchCategory = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(categoriesearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openCategorieSearchList());\n      dispatch(categoriesuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closecategoriesearchList());\n        }\n      });\n    } else {\n      dispatch(categoryListViewApi());\n    }\n  };\n  const handleCloseSearchCategory = () => {\n    dispatch(categoriesearchName(\"\"));\n    dispatch(closecategoriesearchList());\n    dispatch(categoryListViewApi());\n  };\n  const handleOnBlurCategory = (e) => {\n    setTimeout(() => {\n      dispatch(closecategoriesearchList());\n    }, 100);\n  };\n\n  const sorting = (props) => {\n    dispatch(serviceSort(props));\n    dispatch(serviceListViewApi({ sort: props }));\n  };\n\n  return (\n    <>\n      <div className={\"page-content bg-pink service page-content-\" + tabview}>\n        <div className=\"row bg-white align-items-center sticky-top\">\n          <div className=\"common-tab col-md-4 col-7 order-1\">\n            <ul className=\"nav nav-tabs mb-0 justify-content-start\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"service\" ? \" active\" : \"\")} id=\"service-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#service\" type=\"button\" role=\"tab\" aria-controls=\"service\" aria-selected=\"true\" onClick={handleServiceTab}>\n                  {t(\"services\")}\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"#\" className={\"nav-link \" + (tabview && tabview == \"category\" ? \" active\" : \"\")} id=\"categories-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#categories\" type=\"button\" role=\"tab\" aria-controls=\"categories\" aria-selected=\"true\" onClick={handleCategoryTab}>\n                  {t(\"categories\")}\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-4 py-md-0 py-2 px-md-0 px-4 order-md-2 order-3 search-wrp\">\n            <div className=\"search search-radius\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <i className=\"far fa-search\"></i>\n                </span>\n                {tabview && tabview == \"service\" ? (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameService} onInput={(e) => dispatch(serviceSearchName(e.target.value))} onClick={handleClickSearchService} onKeyUp={handleKeyUpSearchService} onBlur={handleOnBlurService} />\n                    <a className=\"close cursor-pointer\" style={{ display: isSearchNameService ? \"block\" : \"none\" }} onClick={handleCloseSearchService}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                ) : (\n                  <>\n                    <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchNameCategory} onInput={(e) => dispatch(categoriesearchName(e.target.value))} onClick={handleClickSearchCategory} onKeyUp={handleKeyUpSearchCategory} onBlur={handleOnBlurCategory} />\n                    <a className=\"close cursor-pointer\" style={{ display: isSearchNameCategory ? \"block\" : \"none\" }} onClick={handleCloseSearchCategory}>\n                      <i className=\"fal fa-times\"></i>\n                    </a>\n                  </>\n                )}\n              </div>\n              {tabview && tabview == \"service\" ? (\n                <div className={\"search-result dropdown-box \" + isSearchListService} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewService.data && isSuggetionViewService.data.length ? isSuggetionViewService.data.length : \"0\"} next={fetchDataSuggetionListService} scrollableTarget=\"search-content\" hasMore={isSuggetionViewService.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <ServiceSuggetionListView view={isSuggetionViewService} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              ) : (\n                <div className={\"search-result dropdown-box \" + isSearchListCategory} id=\"search-content\">\n                  <InfiniteScroll className=\"\" dataLength={isSuggetionViewCategory.data && isSuggetionViewCategory.data.length ? isSuggetionViewCategory.data.length : \"0\"} next={fetchDataSuggetionListCategory} scrollableTarget=\"search-content\" hasMore={isSuggetionViewCategory.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <CategorySuggetionListView view={isSuggetionViewCategory} />\n                    </ul>\n                  </InfiniteScroll>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-4 text-end col-5 ps-0 order-md-3 order-2\">\n            <div className=\"tab-content p-0 d-inline-block\">\n              <div className={tabview && tabview == \"service\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"service\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleopenAddServiceForm}>\n                  {t(\"new_service\")}\n                </a>\n              </div>\n              <div className={tabview && tabview == \"category\" ? \"active\" : \"\"} style={{ display: tabview && tabview == \"category\" ? \"block\" : \"none\" }}>\n                <a className=\"add-service btn me-md-3 me-1 add-new-btn px-xs-4\" onClick={handleOpenAddCategoryForm}>\n                  {t(\"new_category\")}\n                </a>\n              </div>\n            </div>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a href=\"#\" id=\"addservice-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"import.png\"} className=\"me-3\" alt=\"\" />\n                      Import Services\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"addsale-drawer-link\" className=\"d-flex align-items-center\">\n                      <img src={config.imagepath + \"export.png\"} className=\"me-3\" />\n                      Export Services\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className={\"tab-content \" + (tabview && tabview == \"service\" ? \"px-lg-4\" : \"list-view-content\")}>\n            <div className={\"tab-pane\" + (tabview && tabview == \"service\" ? \" show active\" : \"\")} id=\"service\" role=\"tabpanel\" aria-labelledby=\"service-tab\">\n              {ListView.length > 0 || ListView.data ? (\n                <section>\n                  <div className=\"table-responsive services-table-shadow\" id=\"scrollableListView\">\n                    <InfiniteScroll dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataList} scrollableTarget=\"page-content-service\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                      <table className=\"table bg-white\">\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ name: sort.name == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"service_name\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ sku: sort.sku == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"sku\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.sku == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.sku == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ category: { name: sort && sort.category && sort.category.name == \"asc\" ? \"desc\" : \"asc\" } })}>\n                                {t(\"category\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort && sort.category && sort.category.name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort && sort.category && sort.category.name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ stock_quantity: sort.stock_quantity == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"stock\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.stock_quantity == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.stock_quantity == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <a className=\"service-header cursor-pointer\" onClick={() => sorting({ retail_price: sort.retail_price == \"asc\" ? \"desc\" : \"asc\" })}>\n                                {t(\"retail_price\")}\n                                <span className=\"down-up-arrow\">\n                                  <i className={\"fal fa-angle-up\" + (sort.retail_price == \"asc\" ? \" text-dark\" : \"\")}></i>\n                                  <i className={\"fal fa-angle-down\" + (sort.retail_price == \"desc\" ? \" text-dark\" : \"\")}></i>\n                                </span>\n                              </a>\n                            </th>\n                            <th>\n                              <div className=\"d-flex align-items-center justify-content-end\">{t(\"action\")}</div>\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"services-table-data\">\n                          <ServiceListView view={ListView} />\n                        </tbody>\n                      </table>\n\n                      {!isFetching && ListView.next_page_url && (\n                        <div className=\"col-2 m-auto p-3\">\n                          <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                            {t(\"more\")}\n                          </button>\n                        </div>\n                      )}\n                    </InfiniteScroll>\n                  </div>\n                </section>\n              ) : (\n                <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n                  <div className=\"complete-box-wrp text-center \">\n                    <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n                    <h4 className=\"mb-2 fw-semibold\">\n                      {t(\"no_services_have_been_created_yet\")}\n                      <a className=\"add-service ms-1 cursor-pointer\" onClick={() => dispatch(openAddServiceForm())}>\n                        {t(\"please_create_one\")}\n                      </a>\n                      .\n                    </h4>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className={\"tab-pane\" + (tabview && tabview == \"category\" ? \" show active\" : \"\")} id=\"categories\" role=\"tabpanel\" aria-labelledby=\"categories-tab\">\n              <Categories />\n            </div>\n          </div>\n        </div>\n        {categoryIsOpenedAddForm ? <CategoryAddForm /> : \"\"}\n        {categoryIsOpenedEditForm ? <CategoryEditForm /> : \"\"}\n        {serviceIsOpenedAddForm ? <ServiceAddForm /> : \"\"}\n        {serviceIsOpenedEditForm ? <ServiceEditForm /> : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Services;\n","/opt/lampp/htdocs/git/salonreact/src/pages/staff/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/clients/index.js",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { openAddClientForm, clientTabListView, clientTabGridView, clientGridViewApi, clientListViewApi, clientSort, clientSortRemove, openClientSearchList, closeClientSearchList, clientSuggetionListApi, clientSearchName } from \"../../store/slices/clientSlice\";\n\nimport config from \"../../config\";\nimport ClientAddForm from \"./Form/ClientAddForm\";\nimport ClientDetailModal from \"./Detail\";\nimport ClientGridView from \"./List/gridview\";\nimport ClientListView from \"./List/listview\";\nimport SuggetionListView from \"./List/SuggetionListView\";\n\nconst Clients = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const GridView = useSelector((state) => state.client.isGridView);\n  const ListView = useSelector((state) => state.client.isListView);\n  const tabview = useSelector((state) => state.client.isTabView);\n  const sort = useSelector((state) => state.client.isSort);\n  const isSearchList = useSelector((state) => state.client.isSearchList);\n  const isSearchName = useSelector((state) => state.client.isSearchName);\n  const SuggetionView = useSelector((state) => state.client.isSuggetionListView);\n  const clientIsOpenedAddForm = useSelector((state) => state.client.isOpenedAddForm);\n  const clientIsOpenedDetailModal = useSelector((state) => state.client.isOpenedDetailModal);\n\n  useEffect(() => {\n    dispatch(clientSortRemove());\n    dispatch(clientGridViewApi());\n    dispatch(clientListViewApi());\n  }, [dispatch]);\n\n  const handleopenAddClientForm = () => {\n    dispatch(openAddClientForm());\n  };\n\n  const sorting = (props) => {\n    dispatch(clientSort(props));\n    dispatch(clientListViewApi({ sort: props }));\n  };\n\n  const fetchDataGrid = () => {\n    dispatch(clientGridViewApi({ next_page_url: GridView.next_page_url }));\n  };\n  const fetchDataList = () => {\n    dispatch(clientListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(clientGridViewApi({ next_page_url: GridView.next_page_url }));\n    dispatch(clientListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  const fetchDataSuggetionList = () => {\n    dispatch(clientSuggetionListApi({ next_page_url: SuggetionView.next_page_url, q: isSearchName }));\n  };\n\n  const handleClickSearch = (e) => {\n    let q = e.currentTarget.value;\n    if (q && q.length > 0) {\n      dispatch(openClientSearchList());\n      dispatch(clientSuggetionListApi({ q: q }));\n    }\n  };\n  const handleKeyUpSearch = (e) => {\n    let q = e.currentTarget.value;\n    dispatch(clientSearchName(q));\n    if (q && q.length > 0) {\n      dispatch(openClientSearchList());\n      dispatch(clientSuggetionListApi({ q: q })).then((action) => {\n        if (action.meta.requestStatus == \"rejected\") {\n          // dispatch(closeClientSearchList());\n        }\n      });\n    } else {\n      dispatch(clientGridViewApi());\n      dispatch(clientListViewApi());\n    }\n  };\n  const handleCloseSearch = () => {\n    dispatch(clientSearchName(\"\"));\n    dispatch(closeClientSearchList());\n    dispatch(clientGridViewApi());\n    dispatch(clientListViewApi());\n  };\n  const handleOnBlur = (e) => {\n    setTimeout(() => {\n      dispatch(closeClientSearchList());\n    }, 100);\n  };\n\n  return (\n    <>\n      <div className=\"page-content bg-pink service\" id=\"page-content\">\n        <div className=\"row bg-white align-items-center sticky-top\">\n          <div className=\"common-tab col-md-4 col-4 order-1\">\n            <ul className=\"nav nav-tabs mb-0 justify-content-start\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active cursor-pointer\" id=\"all-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#all\" type=\"button\" role=\"tab\" aria-controls=\"all\" aria-selected=\"true\">\n                  {t(\"all\")}\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-md-4 mb-md-0 mb-2 px-md-0 px-4 mt-md-0 mt-2 order-md-2 order-first\">\n            <div className=\"search search-radius\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">\n                  <i className=\"far fa-search\"></i>\n                </span>\n                <input type=\"text\" className=\"form-control search-input\" placeholder={t(\"search\")} value={isSearchName} onInput={(e) => dispatch(clientSearchName(e.target.value))} onClick={handleClickSearch} onKeyUp={handleKeyUpSearch} onBlur={handleOnBlur} />\n                <a className=\"close cursor-pointer\" style={{ display: isSearchName ? \"block\" : \"none\" }} onClick={handleCloseSearch}>\n                  <i className=\"fal fa-times\"></i>\n                </a>\n              </div>\n              <div className={\"search-result dropdown-box \" + isSearchList} id=\"search-content\">\n                <InfiniteScroll className=\"\" dataLength={SuggetionView.data && SuggetionView.data.length ? SuggetionView.data.length : \"0\"} next={fetchDataSuggetionList} scrollableTarget=\"search-content\" hasMore={SuggetionView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                  <ul className=\"p-0 m-0 list-unstyled\">\n                    <SuggetionListView view={SuggetionView} />\n                  </ul>\n                </InfiniteScroll>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 col-8 text-end ps-0 mb-md-0 mb-2 order-3\">\n            <span className=\"list-view-lable me-1\">{t(\"display_as\")}</span>\n            <ul className=\"nav nav-tabs mb-0 d-inline-block list-view-tab border-0 me-xl-3\" role=\"tablist\">\n              <li className=\"nav-item d-inline-block\">\n                <a className={\"nav-link border-0 cursor-pointer\" + (tabview && tabview == \"grid\" ? \" active\" : \"\")} id=\"all-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#all\" type=\"button\" role=\"tab\" aria-controls=\"all\" aria-selected=\"true\" onClick={() => dispatch(clientTabGridView())}>\n                  <img src={config.imagepath + \"block-view.png\"} alt=\"\" />\n                </a>\n              </li>\n              <li className=\"nav-item d-inline-block\">\n                <a className={\"nav-link border-0 cursor-pointer\" + (tabview && tabview == \"list\" ? \" active\" : \"\")} id=\"listview-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#listview\" type=\"button\" role=\"tab\" aria-controls=\"listview\" aria-selected=\"true\" onClick={() => dispatch(clientTabListView())}>\n                  <img src={config.imagepath + \"list-view.png\"} alt=\"\" />\n                </a>\n              </li>\n            </ul>\n            <a id=\"addclient-drawer-link\" className=\"add-new-btn btn me-1 px-lg-4  cursor-pointer\" onClick={handleopenAddClientForm}>\n              {t(\"new_client\")}\n            </a>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a id=\"addclient-drawer-link\" className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"import.png\"} className=\"me-3\" alt=\"\" />\n                      Import Clients\n                    </a>\n                  </li>\n                  <li>\n                    <a id=\"addsale-drawer-link\" className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"export.png\"} className=\"me-3\" alt=\"\" />\n                      Export Clients\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"tab-content list-view-content\">\n          <div className={\"tab-pane\" + (tabview && tabview == \"grid\" ? \" show active\" : \"\")} id=\"all\">\n            <div className=\"\" id=\"scrollableGridView\">\n              <InfiniteScroll className=\"row\" dataLength={GridView.data && GridView.data.length ? GridView.data.length : \"0\"} next={fetchDataGrid} scrollableTarget=\"page-content\" hasMore={GridView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                <a className=\"box-image-cover cursor-pointer\" onClick={handleopenAddClientForm}>\n                  <div className=\"tabs-image\">\n                    <img src={config.imagepath + \"tabs-image.png\"} alt=\"\" />\n                  </div>\n                  <div className=\"image-content\">\n                    <h5>\n                      <i className=\"fal fa-plus me-2\"></i> {t(\"add_new\")}\n                    </h5>\n                  </div>\n                </a>\n                {/* <a className=\"box-image-cover client-detail cursor-pointer\">\n                <div className=\"tabs-image user-initial mx-auto\">jd</div>\n                <div className=\"image-content\">\n                  <h5 className=\"fw-semibold mb-1\">Wella</h5>\n                  <h5 className=\"mb-0 fw-normal\">William Wella</h5>\n                </div>\n              </a> */}\n                <ClientGridView currentUser={currentUser} view={GridView} />\n\n                {!isFetching && GridView.next_page_url && (\n                  <div className=\"col-2 m-auto text-center\">\n                    <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                      {t(\"more\")}\n                    </button>\n                  </div>\n                )}\n              </InfiniteScroll>\n            </div>\n          </div>\n          <div className={\"tab-pane\" + (tabview && tabview == \"list\" ? \" show active\" : \"\")} id=\"listview\">\n            <div className=\"table-responsive bg-white\" id=\"scrollableListView\">\n              <InfiniteScroll dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataList} scrollableTarget=\"page-content\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n                <table className=\"table mb-0\">\n                  <thead className=\"position-sticky\">\n                    <tr>\n                      <th></th>\n                      <th>\n                        <a className=\"cursor-pointer\" onClick={() => sorting({ first_name: sort.first_name == \"asc\" ? \"desc\" : \"asc\" })}>\n                          {t(\"name\")}\n                        </a>\n                        <span className=\"down-up-arrow\">\n                          <i className={\"fal fa-angle-up\" + (sort.first_name == \"asc\" ? \" text-dark\" : \"\")}></i>\n                          <i className={\"fal fa-angle-down\" + (sort.first_name == \"desc\" ? \" text-dark\" : \"\")}></i>\n                        </span>\n                      </th>\n                      <th>{t(\"phone\")}</th>\n                      <th colSpan=\"2\">{t(\"email\")}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <ClientListView currentUser={currentUser} view={ListView} />\n                  </tbody>\n                </table>\n                {!isFetching && GridView.next_page_url && (\n                  <div className=\"col-2 m-auto p-3\">\n                    <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                      {t(\"more\")}\n                    </button>\n                  </div>\n                )}\n              </InfiniteScroll>\n            </div>\n          </div>\n        </div>\n        {clientIsOpenedAddForm ? <ClientAddForm /> : \"\"}\n        {clientIsOpenedDetailModal ? <ClientDetailModal /> : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Clients;\n","/opt/lampp/htdocs/git/salonreact/src/pages/subscriptions/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/sales/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/vouchers/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/calender/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MinimalLayout/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/index.js",["550","551","552"],"import React, { useEffect } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Sidebar from \"./Sidebar\";\nimport Header from \"./Header\";\nimport { Helmet } from \"react-helmet-async\";\nimport Fancybox from \"../../component/fancybox.js\";\n// import config from \"../../config\";\n// ==============================|| MAIN LAYOUT ||============================== //\nconst MainLayout = () => {\n  return (\n    <>\n      <Helmet>\n        <link rel=\"stylesheet\" href=\"/css/style.css\" />\n      </Helmet>\n      <Fancybox />\n      <main>\n        <div className=\"body-wrapper\">\n          <Header />\n          <Sidebar />\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default MainLayout;\n","/opt/lampp/htdocs/git/salonreact/src/component/Loader.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/Language.js",["553","554"],"import { t } from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Language = () => {\n    const { i18n } = useTranslation();\n\n    const changeLanguage = (lng) => {\n        i18n.changeLanguage(lng);\n    };\n\n    const lang = i18n.language;\n    const langs = i18n.languages;\n    \n    const checkAvailability = (val) => {\n        if(val == lang){\n            return 1;\n        }else{\n            return 0;\n        }\n    }\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                className={checkAvailability('en') ? 'btn btn-primary-outline active' : 'btn btn-primary-outline'}\n                onClick={() => changeLanguage(\"en\")}\n            >\n                {t(\"English\")}\n            </button>\n            <button\n                type=\"button\"\n                className={checkAvailability('de')? 'btn btn-primary-outline active' : 'btn btn-primary-outline'}\n                onClick={() => changeLanguage(\"de\")}\n            >\n                {t(\"German\")}\n            </button>\n        </>\n    );\n};\n\nexport default Language;\n","/opt/lampp/htdocs/git/salonreact/src/pages/auth/RestLogin.js",[],"/opt/lampp/htdocs/git/salonreact/src/common/EventBus.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/fancybox.js",["555"],"import React, { useEffect } from \"react\";\n\nimport { Fancybox as NativeFancybox } from \"@fancyapps/ui/dist/fancybox.esm.js\";\nimport \"@fancyapps/ui/dist/fancybox.css\";\n\nfunction Fancybox(props) {\n  const delegate = props.delegate || \"[data-fancybox]\";\n\n  useEffect(() => {\n    const opts = props.options || {};\n\n    NativeFancybox.bind(delegate, opts);\n\n    return () => {\n      NativeFancybox.destroy();\n    };\n  }, []);\n\n  return <>{props.children}</>;\n}\n\nexport default Fancybox;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductSuggetionListView.js",["556","557","558","559"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { productListViewApi, closeProductSearchList, productSearchName } from \"../../../store/slices/productSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n// import ReactPaginate from 'react-paginate';\n\nconst ProductSuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.product.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(productSearchName(suggetionname));\n    dispatch(closeProductSearchList());\n    dispatch(productListViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <li className=\"product-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{image_url ? <img src={image_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name) +' - '+sku}</span>\n                  <span className=\"user-id\">{ucfirst(supplier_name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default ProductSuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/list/ProductListView.js",["560","561","562","563","564","565","566","567","568","569","570","571"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { productManageStock, productDeleteApi, productDetailApi, productSortRemove, openEditProductForm } from \"../../../store/slices/productSlice\";\nimport { supplierOptions } from \"../../../store/slices/supplierSlice\";\nimport { taxOptions } from \"../../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\n// import ReactPaginate from 'react-paginate';\n\nconst ProductListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const currentUser = props.currentUser;\n  const view = props.view;\n\n  // const view = useSelector((state) => state.product.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleProductDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_product\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(productDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleProductEditForm = (e) => {\n    const id = e.currentTarget.closest(\".product-view-tr\").dataset.id;\n    dispatch(openEditProductForm());\n    dispatch(productDetailApi({ id })).then(action => {\n      if(action.meta.requestStatus == 'fulfilled'){\n          const detail = action.payload;\n          if (detail.image) {\n            dispatch(selectImage({ name: detail.image, size: \"\", type: \"\", url: detail.image_url }));\n          }else{\n            dispatch(removeImage());\n          }\n          dispatch(productManageStock(detail && detail.manage_stock));\n          dispatch(supplierOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n          dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n      }\n    });\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let cost_price = objectData[item].cost_price;\n          let retail_price = objectData[item].retail_price;\n          let manage_stock = objectData[item].manage_stock;\n          let stock_quantity = objectData[item].stock_quantity;\n          let low_stock_threshold = objectData[item].low_stock_threshold;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <tr className=\"product-view-tr\" key={i} data-id={id}>\n              <td className=\"pe-0\" width=\"60px\">\n                {image_url ? (\n                  <div className=\"user\">\n                    <a data-fancybox=\"\" data-src={image_url}>\n                      <img src={image_url} alt=\"\" className=\"rounded-circle wh-40\" />\n                    </a>\n                  </div>\n                ) : (\n                  <div className=\"user-initial\">{name.charAt(0)}</div>\n                )}\n              </td>\n              <td>{ucfirst(name)}\n              </td>\n              <td>{sku}</td>\n              <td>{supplier_name}</td>\n              <td>{stock_quantity}</td>\n              <td>{retail_price}</td>\n              <td className=\"ps-0 text-end\" width=\"60px\">\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleProductEditForm(e)}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleProductDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ProductListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierAddForm.js",["572","573","574","575","576"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { closeAddSupplierForm, supplierStoreApi } from \"../../../store/slices/supplierSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\n\nconst SupplierAddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.supplier.isOpenedAddForm);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseAddSupplierForm = () => {\n    dispatch(closeAddSupplierForm());\n    dispatch({type:'supplier/detail/rejected'});\n  };\n\n  const initialValues = {\n    name: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    logo: \"\",\n    email: \"\",\n    phone_number: \"\",\n    website: \"\",\n    address: \"\",\n    street: \"\",\n    suburb: \"\",\n    state: \"\",\n    postcode: \"\"\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"supplier_name\")).required(),\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    logo: Yup.mixed(),\n    // logo: Yup.string().trim().label(t(\"logo\")),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    website: Yup.string().trim().url().label(t(\"website\")).required(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required()\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(supplierStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddSupplierForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n      {(formik) => {\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"addsuppliers-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t('new_supplier')}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseAddSupplierForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"supplier\")}</h4>\n                          <p>{t(\"add_the_name_of_the_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"supplier_name\")} controlId=\"supplierForm-name\" />\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"contact_information\")}</h4>\n                          <p>{t(\"add_the_contact_details_of_this_supplier\")}</p>\n                          <InputFieldImage name=\"logo\" accept=\"image/*\" label={t(\"add_supplier_Logo\")} page=\"supplier-form\" controlId=\"supplierForm-logo\" imagname=\"\" imageurl=\"\"/>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row gx-2\">\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"first_name\" value={formik.values.first_name} label={t(\"first_name\")} controlId=\"supplierForm-first_name\" />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"last_name\" value={formik.values.last_name} label={t(\"last_name\")} controlId=\"supplierForm-last_name\" />\n                            </div>\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"phone_number\" value={formik.values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"supplierForm-phone_number\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"email\" value={formik.values.email} label={t(\"email\")} controlId=\"supplierForm-email\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"website\" value={formik.values.website} label={t(\"website\")} controlId=\"supplierForm-website\" />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"address\")}</h4>\n                          <p>{t(\"add_the_address_of_this_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <MapAddressField name=\"address\" label={t(\"address\")} value={formik.values.address} placeholder={t(\"typing_address\")} controlId=\"supplierForm-address\" />\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"street\" value={formik.values.street} label={t(\"street\")} controlId=\"supplierForm-street\" />\n                          </div>\n                          <div className=\"row gx-2\">\n                            <div className=\"col-md-6 mb-3\">\n                              <InputField type=\"text\" name=\"suburb\" value={formik.values.suburb} label={t(\"suburb\")} controlId=\"supplierForm-suburb\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"state\" value={formik.values.state} label={t(\"state\")} controlId=\"supplierForm-state\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"postcode\" value={formik.values.postcode} label={t(\"postcode\")} controlId=\"supplierForm-postcode\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default SupplierAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierEditForm.js",["577","578","579","580","581","582","583","584"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { closeEditSupplierForm, supplierUpdateApi } from \"../../../store/slices/supplierSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst SupplierEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.supplier.isOpenedEditForm);\n  const detail = useSelector((state) => state.supplier.isDetailData);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditSupplierForm = () => {\n    dispatch(closeEditSupplierForm());\n    dispatch({ type: \"supplier/detail/rejected\" });\n  };\n  const initialValues = {\n    name: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone_number: '',\n    website: '',\n    address: '',\n    street: '',\n    suburb: '',\n    state: '',\n    postcode: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"supplier_name\")).required(),\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    logo: Yup.mixed(),\n    // logo: Yup.string().trim().label(t(\"logo\")),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    website: Yup.string().trim().url().label(t(\"website\")).required(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required(),\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(supplierUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditSupplierForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              if (detail.logo) {\n                dispatch(selectImage({ name: detail.logo, size: \"\", type: \"\", url: detail.logo_url }));\n              }\n              const fields = ['id',\"name\", \"first_name\", \"last_name\", \"email\", \"phone_number\", \"website\", \"address\", \"street\", \"suburb\", \"state\", \"postcode\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"editsuppliers-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t('edit_supplier')}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseEditSupplierForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"supplier\")}</h4>\n                          <p>{t(\"add_the_name_of_the_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"supplier_name\")} controlId=\"supplierForm-name\" />\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"contact_information\")}</h4>\n                          <p>{t(\"add_the_contact_details_of_this_supplier\")}</p>\n                          <InputFieldImage name=\"logo\" accept=\"image/*\" label={t(\"add_supplier_Logo\")} page=\"supplier-form\" controlId=\"supplierForm-logo\" imagname=\"\" imageurl=\"\" />\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row gx-2\">\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"first_name\" value={formik.values.first_name} label={t(\"first_name\")} controlId=\"supplierForm-first_name\" />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"last_name\" value={formik.values.last_name} label={t(\"last_name\")} controlId=\"supplierForm-last_name\" />\n                            </div>\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"phone_number\" value={formik.values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"supplierForm-phone_number\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"email\" value={formik.values.email} label={t(\"email\")} controlId=\"supplierForm-email\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"website\" value={formik.values.website} label={t(\"website\")} controlId=\"supplierForm-website\" />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"address\")}</h4>\n                          <p>{t(\"add_the_address_of_this_supplier\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <MapAddressField name=\"address\" label={t(\"address\")} value={formik.values.address} placeholder={t(\"typing_address\")} controlId=\"supplierForm-address\" />\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"street\" value={formik.values.street} label={t(\"street\")} controlId=\"supplierForm-street\" />\n                          </div>\n                          <div className=\"row gx-2\">\n                            <div className=\"col-md-6 mb-3\">\n                              <InputField type=\"text\" name=\"suburb\" value={formik.values.suburb} label={t(\"suburb\")} controlId=\"supplierForm-suburb\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"state\" value={formik.values.state} label={t(\"state\")} controlId=\"supplierForm-state\" />\n                            </div>\n                            <div className=\"col-md-3 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"postcode\" value={formik.values.postcode} label={t(\"postcode\")} controlId=\"supplierForm-postcode\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default SupplierEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierSuggetionListView.js",["585","586","587","588","589","590"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { supplierGridViewApi, closeSupplierSearchList, supplierSearchName } from \"../../../store/slices/supplierSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n\n// import ReactPaginate from 'react-paginate';\n\nconst SupplierSuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.supplier.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(supplierSearchName(suggetionname));\n    dispatch(closeSupplierSearchList());\n    dispatch(supplierGridViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let first_name = objectData[item].first_name;\n          let last_name = objectData[item].last_name;\n          let email = objectData[item].email;\n          let phone_number = objectData[item].phone_number;\n          let profile_photo_url = objectData[item].profile_photo_url;\n          return (\n            <li className=\"supplier-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{profile_photo_url ? <img src={profile_photo_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name)}</span>\n                  <span className=\"user-id\">{ucfirst(first_name + \" \" + last_name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default SupplierSuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryAddForm.js",["591","592","593","594","595","596"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewCategoryForm } from \"../../../store/slices/categorySlice\";\nimport { closeAddCategoryForm, categoryStoreApi } from \"../../../store/slices/categorySlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\n\nconst CategoryAddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.category.isOpenedAddForm);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseAddCategoryForm = () => {\n    dispatch(closeAddCategoryForm());\n    dispatch({type:'category/detail/rejected'});\n  };\n\n  const initialValues = {\n    name: \"\"\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"category_name\")).required()\n  });\n  yupconfig();\n\n  const handlecategoriesubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(categoryStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddCategoryForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handlecategoriesubmit}>\n      {(formik) => {\n          return (\n            <div className={rightDrawerOpened ? \"modal fade show\" : \"modal fade\"} id=\"add-category\" tabIndex=\"-1\" aria-labelledby=\"addcategoryModalLabel\" aria-hidden=\"true\" style={{ display : rightDrawerOpened ? \"block\" : \"none\" }}>\n                <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content \">\n                        <button type=\"button\" className=\"close me-md-4 me-3 mt-md-4 mt-3\" onClick={handleCloseAddCategoryForm}>\n                            <img src={ config.imagepath + \"close-icon.svg\"} alt=\"\"/>\n                        </button>\n                        <div className=\"modal-body p-md-4 p-3\">\n                            <h4 className=\"mb-2\">{t('add_category')}</h4>\n                            <form noValidate onSubmit={formik.handleSubmit}>\n                                <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"category_name\")} controlId=\"categoryForm-name\" />\n                                <div className=\"text-center\">\n                                    <button type=\"submit\" className=\"btn\">\n                                      {t(\"save\")}\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryEditForm.js",["597","598","599","600","601","602","603","604","605"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewCategoryForm } from \"../../../store/slices/categorySlice\";\nimport { closeEditCategoryForm, categoryUpdateApi } from \"../../../store/slices/categorySlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst CategoryEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.category.isOpenedEditForm);\n  const detail = useSelector((state) => state.category.isDetailData);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditCategoryForm = () => {\n    dispatch(closeEditCategoryForm());\n    dispatch({ type: \"category/detail/rejected\" });\n  };\n  const initialValues = {\n    name: ''\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().trim().max(100).label(t(\"category_name\")).required()\n  });\n  yupconfig();\n\n  const handlecategoriesubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(categoryUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditCategoryForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handlecategoriesubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              if (detail.logo) {\n                dispatch(selectImage({ name: detail.logo, size: \"\", type: \"\", url: detail.logo_url }));\n              }\n              const fields = ['id',\"name\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={rightDrawerOpened ? \"modal fade show\" : \"modal fade\"} id=\"edit-category\" tabIndex=\"-1\" aria-labelledby=\"editcategoryModalLabel\" aria-hidden=\"true\" style={{ display : rightDrawerOpened ? \"block\" : \"none\" }}>\n                <div className=\"modal-dialog modal-dialog-centered\">\n                    <div className=\"modal-content \">\n                        <button type=\"button\" className=\"close me-md-4 me-3 mt-md-4 mt-3\" onClick={handleCloseEditCategoryForm}>\n                            <img src={ config.imagepath + \"close-icon.svg\"} alt=\"\"/>\n                        </button>\n                        <div className=\"modal-body p-md-4 p-3\">\n                            <h4 className=\"mb-2\">{t('edit_category')}</h4>\n                            <form noValidate onSubmit={formik.handleSubmit}>\n                                <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"category_name\")} controlId=\"categoryForm-name\" />\n                                <div className=\"text-center\">\n                                    <button type=\"submit\" className=\"btn\">\n                                      {t(\"save\")}\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductEditForm.js",["606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, SwitchField, InputFieldImage, TextareaField, ReactSelectField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { productManageStock, closeEditProductForm, productUpdateApi } from \"../../../store/slices/productSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst ProductEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.product.isOpenedEditForm);\n  const detail = useSelector((state) => state.product.isDetailData);\n  const isProductManageStock = useSelector((state) => state.product.isProductManageStock);\n  const isSupplierOption = useSelector((state) => state.supplier.isSupplierOption);\n  const isTaxOption = useSelector((state) => state.tax.isTaxOption);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditSupplierForm = () => {\n    dispatch(closeEditProductForm());\n    dispatch({ type: \"product/detail/rejected\" });\n    dispatch(removeImage());\n  };\n  // const initialValues = {\n  //   id: detail && detail.id,\n  //   name: detail && detail.name,\n  //   sku: detail && detail.sku,\n  //   description: detail && detail.description,\n  //   cost_price: detail && detail.cost_price ? detail.cost_price : '',\n  //   retail_price: detail && detail.retail_price ? detail && detail.retail_price : '',\n  //   manage_stock: '',\n  //   stock_quantity: detail && detail.stock_quantity ? detail.stock_quantity : '',\n  //   low_stock_threshold: detail && detail.low_stock_threshold ? detail.low_stock_threshold : '',\n  //   tax_id: detail && detail.tax_id,\n  //   supplier_id: detail && detail.supplier_id,\n  // };\n  const initialValues = {\n    id: \"\",\n    name: \"\",\n    sku: \"\",\n    description: \"\",\n    cost_price: \"\",\n    retail_price: \"\",\n    manage_stock: \"\",\n    stock_quantity: \"\",\n    low_stock_threshold: \"\",\n    tax_id: \"\",\n    supplier_id: \"\",\n  };\n\n  const digitOnly = (value) => /^\\d+$/.test(value);\n  const decimalOnly = (value) => /^\\d{1,6}(\\.\\d{1,2})?$/.test(value);\n\n  const validationSchema = Yup.object().shape({\n    image: Yup.mixed(),\n    name: Yup.string().max(100).label(t(\"product_name\")).trim().required(),\n    sku: Yup.string().trim().label(t(\"sku\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    cost_price: Yup.string().trim().label(t(\"cost_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    retail_price: Yup.string().trim().label(t(\"retail_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    stock_quantity: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"stock_quantity\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    low_stock_threshold: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"low_stock_threshold\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    tax_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"tax\")).required())),\n    supplier_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"supplier\")).required())),\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(productUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditProductForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const supplierOptionsData = isSupplierOption;\n  const taxOptionsData = isTaxOption;\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              const fields = ['id',\"name\", \"sku\", \"description\", \"cost_price\", \"retail_price\", \"manage_stock\", \"stock_quantity\", \"low_stock_threshold\", \"tax_id\", \"supplier_id\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"editproduct-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t(\"edit_product\")}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseEditSupplierForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"description\")}</h4>\n                          <p>{t(\"add_the_name_and_general_details_of_this_product\")}</p>\n                          <InputFieldImage name=\"image\" accept=\"image/*\" label={t(\"add_product_image\")} page=\"product-form\" controlId=\"productForm-logo\" imagname=\"\" imageurl=\"\" />\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"product_name\")} controlId=\"productForm-name\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"sku\" value={formik.values.sku} label={t(\"sku\")} controlId=\"productForm-sku\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <ReactSelectField name=\"supplier_id\" placeholder={t(\"search_option\")} value={formik.values.supplier_id} options={supplierOptionsData} label={t(\"supplier\")} controlId=\"productForm-supplier_id\" isMulti={false}  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextareaField name=\"description\" value={formik.values.description} label={t(\"description\")} controlId=\"productForm-description\"  />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"price\")}</h4>\n                          <p>{t(\"add_the_pricing_details_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row\">\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"cost_price\" value={formik.values.cost_price} label={t(\"cost_price\")} controlId=\"productForm-cost_price\"  />\n                            </div>\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"retail_price\" value={formik.values.retail_price} label={t(\"retail_price\")} controlId=\"productForm-retail_price\"  />\n                            </div>\n                            <div className=\"col-md-8 mb-3\">\n                              <ReactSelectField name=\"tax_id\" placeholder={t(\"search_option\")} value={formik.values.tax_id} options={taxOptionsData} label={t(\"tax\")} controlId=\"productForm-tax_id\" isMulti={false}  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"inventory\")}</h4>\n                          <p>{t(\"manage_stock_levels_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <SwitchField\n                            name=\"manage_stock\"\n                            label={t(\"manage_stock\")}\n                            controlId=\"clientForm-manage_stock\"\n                            value='1'\n                            onChange={(e) => {\n                              if(e.currentTarget.checked){\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '1', false);\n                                }, 100);\n                              }else{\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '', false);\n                                }, 100);\n                              }\n                              formik.handleChange(e);\n                            }}\n                          />\n                          {console.log(formik.values.manage_stock)}\n                          <div className=\"row\" style={{ display: formik.values.manage_stock == \"\" || formik.values.manage_stock == 0 ? \"none\" : \"\" }}>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"stock_quantity\" value={formik.values.stock_quantity != null ? formik.values.stock_quantity : \"\"} label={t(\"stock_quantity\")} controlId=\"productForm-stock_quantity\"   />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"low_stock_threshold\" value={formik.values.stock_quantity != null ? formik.values.low_stock_threshold : \"\"} label={t(\"low_stock_threshold\")} controlId=\"productForm-low_stock_threshold\"  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ProductEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/form/ProductAddForm.js",["620","621","622","623","624","625","626","627","628","629","630","631"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, SwitchField, InputFieldImage, TextareaField, ReactSelectField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewSupplierForm } from \"../../../store/slices/supplierSlice\";\nimport { productManageStock, closeAddProductForm, productStoreApi } from \"../../../store/slices/productSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport CustomSelect from \"../../../component/form/CustomSelect\";\n\nconst ProductAddForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.product.isOpenedAddForm);\n  const isProductManageStock = useSelector((state) => state.product.isProductManageStock);\n  const isSupplierOption = useSelector((state) => state.supplier.isSupplierOption);\n  const isTaxOption = useSelector((state) => state.tax.isTaxOption);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseAddProductForm = () => {\n    dispatch(closeAddProductForm());\n    dispatch({ type: \"product/detail/rejected\" });\n    dispatch(removeImage());\n  };\n\n  const initialValues = {\n    image: \"\",\n    name: \"\",\n    sku: \"\",\n    description: \"\",\n    cost_price: \"\",\n    retail_price: \"\",\n    manage_stock: '',\n    stock_quantity: \"\",\n    low_stock_threshold: \"\",\n    tax_id: \"\",\n    supplier_id: \"\",\n  };\n\n  const digitOnly = (value) => /^\\d+$/.test(value);\n  const decimalOnly = (value) => /^\\d{1,6}(\\.\\d{1,2})?$/.test(value);\n\n  const validationSchema = Yup.object().shape({\n    image: Yup.mixed().nullable(),\n    name: Yup.string().max(100).label(t(\"product_name\")).trim().required(),\n    sku: Yup.string().trim().label(t(\"sku\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    cost_price: Yup.string().trim().label(t(\"cost_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    retail_price: Yup.string().trim().label(t(\"retail_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    manage_stock:Yup.mixed().nullable(),\n    stock_quantity: Yup.string().when(\"manage_stock\", {\n      is: '1',\n      then: Yup.string().trim().label(t(\"stock_quantity\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly).nullable(),\n    }),\n    low_stock_threshold: Yup.string().when(\"manage_stock\", {\n      is: '1',\n      then: Yup.string().trim().label(t(\"low_stock_threshold\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly).nullable(),\n    }),\n    tax_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"tax\")).required())),\n    supplier_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"supplier\")).required())),\n  });\n  yupconfig();\n\n  const handleSupplierSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(productStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddProductForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const supplierOptionsData = isSupplierOption;\n  const taxOptionsData = isTaxOption;\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSupplierSubmit}>\n        {(formik) => {\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"addproduct-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t(\"new_product\")}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseAddProductForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"description\")}</h4>\n                          <p>{t(\"add_the_name_and_general_details_of_this_product\")}</p>\n                          <InputFieldImage name=\"image\" accept=\"image/*\" label={t(\"add_product_image\")} page=\"product-form\" controlId=\"productForm-logo\" imagname=\"\" imageurl=\"\"/>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"product_name\")} controlId=\"productForm-name\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"sku\" value={formik.values.sku} label={t(\"sku\")} controlId=\"productForm-sku\" />\n                          </div>\n                          <div className=\"mb-3\">\n                            <ReactSelectField name=\"supplier_id\" placeholder={t(\"search_option\")} value={formik.values.supplier_id} options={supplierOptionsData} label={t(\"supplier\")} controlId=\"productForm-supplier_id\" isMulti={false} />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextareaField name=\"description\" value={formik.values.description} label={t(\"description\")} controlId=\"productForm-description\" />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"price\")}</h4>\n                          <p>{t(\"add_the_pricing_details_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row\">\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"cost_price\" value={formik.values.cost_price} label={t(\"cost_price\")} controlId=\"productForm-cost_price\" />\n                            </div>\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"retail_price\" value={formik.values.retail_price} label={t(\"retail_price\")} controlId=\"productForm-retail_price\" />\n                            </div>\n                            <div className=\"col-md-8 mb-3\">\n                              <ReactSelectField name=\"tax_id\" placeholder={t(\"search_option\")} value={formik.values.tax_id} options={taxOptionsData} label={t(\"tax\")} controlId=\"productForm-tax_id\" isMulti={false}  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-supplier-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"inventory\")}</h4>\n                          <p>{t(\"manage_stock_levels_of_this_product\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <SwitchField\n                            name=\"manage_stock\"\n                            label={t(\"manage_stock\")}\n                            controlId=\"clientForm-manage_stock\"\n                            value={'1'}\n                            onChange={(e) => {\n                              if(e.currentTarget.checked){\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '1', false);\n                                }, 100);\n                              }else{\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '', false);\n                                }, 100);\n                              }\n                              formik.handleChange(e);\n                            }}\n                          />\n                          <div className=\"row\" style={{ display: formik.values.manage_stock == \"\" || formik.values.manage_stock == 0 ? \"none\" : \"\" }}>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"stock_quantity\" value={formik.values.stock_quantity} label={t(\"stock_quantity\")} controlId=\"productForm-stock_quantity\" />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"low_stock_threshold\" value={formik.values.low_stock_threshold} label={t(\"low_stock_threshold\")} controlId=\"productForm-low_stock_threshold\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ProductAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategorySuggetionListView.js",["632","633","634","635"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { categoryListViewApi, closecategoriesearchList, categoriesearchName } from \"../../../store/slices/categorySlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n\n// import ReactPaginate from 'react-paginate';\n\nconst CategorySuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.category.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(categoriesearchName(suggetionname));\n    dispatch(closecategoriesearchList());\n    dispatch(categoryListViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          return (\n            <li className=\"category-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default CategorySuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceEditForm.js",["636","637","638","639","640","641","642","643","644","645","646","647","648","649"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, SwitchField, InputFieldImage, TextareaField, ReactSelectField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\n// import { closeNewCategoryForm } from \"../../../store/slices/categorySlice\";\nimport { serviceManageStock, closeEditServiceForm, serviceUpdateApi } from \"../../../store/slices/serviceSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport _ from \"lodash\";\n\nconst ServiceEditForm = () => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.service.isOpenedEditForm);\n  const detail = useSelector((state) => state.service.isDetailData);\n  const isServiceManageStock = useSelector((state) => state.service.isServiceManageStock);\n  const isCategoryOption = useSelector((state) => state.category.isCategoryOption);\n  const isTaxOption = useSelector((state) => state.tax.isTaxOption);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const scriptedRef = useScriptRef();\n\n  const handleCloseEditCategoryForm = () => {\n    dispatch(closeEditServiceForm());\n    dispatch({ type: \"service/detail/rejected\" });\n    dispatch(removeImage());\n  };\n  // const initialValues = {\n  //   id: detail && detail.id,\n  //   name: detail && detail.name,\n  //   sku: detail && detail.sku,\n  //   description: detail && detail.description,\n  //   cost_price: detail && detail.cost_price ? detail.cost_price : '',\n  //   retail_price: detail && detail.retail_price ? detail && detail.retail_price : '',\n  //   manage_stock: '',\n  //   stock_quantity: detail && detail.stock_quantity ? detail.stock_quantity : '',\n  //   low_stock_threshold: detail && detail.low_stock_threshold ? detail.low_stock_threshold : '',\n  //   tax_id: detail && detail.tax_id,\n  //   category_id: detail && detail.category_id,\n  // };\n  const initialValues = {\n    id: \"\",\n    name: \"\",\n    sku: \"\",\n    description: \"\",\n    cost_price: \"\",\n    retail_price: \"\",\n    manage_stock: \"\",\n    stock_quantity: \"\",\n    low_stock_threshold: \"\",\n    tax_id: \"\",\n    category_id: \"\",\n  };\n\n  const digitOnly = (value) => /^\\d+$/.test(value);\n  const decimalOnly = (value) => /^\\d{1,6}(\\.\\d{1,2})?$/.test(value);\n\n  const validationSchema = Yup.object().shape({\n    image: Yup.mixed(),\n    name: Yup.string().max(100).label(t(\"service_name\")).trim().required(),\n    sku: Yup.string().trim().label(t(\"sku\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    cost_price: Yup.string().trim().label(t(\"cost_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    retail_price: Yup.string().trim().label(t(\"retail_price\")).required().test(\"Decimal only\", t(\"The_field_should_have_decimal_only\"), decimalOnly),\n    stock_quantity: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"stock_quantity\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    low_stock_threshold: Yup.string()\n      .nullable()\n      .when(\"manage_stock\", {\n        is: \"1\",\n        then: Yup.string().trim().label(t(\"low_stock_threshold\")).required().test(\"Digits only\", t(\"The_field_should_have_digits_only\"), digitOnly),\n      }),\n    tax_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"tax\")).required())),\n    category_id: Yup.lazy((val) => (Array.isArray(val) ? Yup.array().of(Yup.string()).nullable().min(1).required() : Yup.string().nullable().label(t(\"category\")).required())),\n  });\n  yupconfig();\n\n  const handlecategoriesubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(serviceUpdateApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeEditServiceForm());\n          sweatalert({ title: t(\"updated\"), text: t(\"updated_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const categoryOptionsData = isCategoryOption;\n  const taxOptionsData = isTaxOption;\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={false} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handlecategoriesubmit}>\n        {(formik) => {\n          useEffect(() => {\n            if(detail){\n              const fields = ['id',\"name\", \"sku\", \"description\", \"cost_price\", \"retail_price\", \"manage_stock\", \"stock_quantity\", \"low_stock_threshold\", \"tax_id\", \"category_id\"];\n              fields.forEach((field) => {\n                formik.setFieldValue(field, detail[field], false);\n              });\n            }\n          }, [detail]);\n          return (\n            <div className={(rightDrawerOpened ? \"full-screen-drawer p-0 \" : '') + rightDrawerOpened} id=\"editservice-drawer\">\n              <div className=\"drawer-wrp position-relative\">\n                <form noValidate onSubmit={formik.handleSubmit}>\n                  <div className=\"drawer-header px-md-4 px-3 py-3 d-flex flex-wrap align-items-center\">\n                    <h3 className=\"mb-0 fw-semibold\">{t(\"edit_service\")}</h3>\n                    <div className=\"ms-auto\">\n                      <a className=\"close btn me-1 cursor-pointer\" onClick={handleCloseEditCategoryForm}>\n                        {t(\"cancel\")}\n                      </a>\n                      <button type=\"submit\" className=\"btn\">\n                        {t(\"save\")}\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"drawer-body\">\n                    <div className=\"col-xxl-6 col-xl-10 col-md-12 mx-auto add-form px-md-4 px-1 py-lg-5 py-3\">\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"description\")}</h4>\n                          <p>{t(\"add_the_name_and_general_details_of_this_service\")}</p>\n                          <InputFieldImage name=\"image\" accept=\"image/*\" label={t(\"add_service_image\")} page=\"service-form\" controlId=\"serviceForm-logo\" imagname=\"\" imageurl=\"\" />\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"name\" value={formik.values.name} label={t(\"service_name\")} controlId=\"serviceForm-name\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <InputField type=\"text\" name=\"sku\" value={formik.values.sku} label={t(\"sku\")} controlId=\"serviceForm-sku\"  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <ReactSelectField name=\"category_id\" placeholder={t(\"search_option\")} value={formik.values.category_id} options={categoryOptionsData} label={t(\"category\")} controlId=\"serviceForm-category_id\" isMulti={false}  />\n                          </div>\n                          <div className=\"mb-3\">\n                            <TextareaField name=\"description\" value={formik.values.description} label={t(\"description\")} controlId=\"serviceForm-description\"  />\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-category-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"price\")}</h4>\n                          <p>{t(\"add_the_pricing_details_of_this_service\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <div className=\"row\">\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"cost_price\" value={formik.values.cost_price} label={t(\"cost_price\")} controlId=\"serviceForm-cost_price\"  />\n                            </div>\n                            <div className=\"mb-2 col-md-4 col-6 mb-3\">\n                              <InputField type=\"text\" name=\"retail_price\" value={formik.values.retail_price} label={t(\"retail_price\")} controlId=\"serviceForm-retail_price\"  />\n                            </div>\n                            <div className=\"col-md-8 mb-3\">\n                              <ReactSelectField name=\"tax_id\" placeholder={t(\"search_option\")} value={formik.values.tax_id} options={taxOptionsData} label={t(\"tax\")} controlId=\"serviceForm-tax_id\" isMulti={false}  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr className=\"drawer-category-hr\"></hr>\n                      <div className=\"row mx-0\">\n                        <div className=\"col-md-6 ps-md-0 mb-md-0 mb-3\">\n                          <h4 className=\"fw-semibold mb-2\">{t(\"inventory\")}</h4>\n                          <p>{t(\"manage_stock_levels_of_this_service\")}</p>\n                        </div>\n                        <div className=\"col-md-6 pe-md-0\">\n                          <SwitchField\n                            name=\"manage_stock\"\n                            label={t(\"manage_stock\")}\n                            controlId=\"clientForm-manage_stock\"\n                            value='1'\n                            onChange={(e) => {\n                              if(e.currentTarget.checked){\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '1', false);\n                                }, 100);\n                              }else{\n                                setTimeout(() => {\n                                  formik.setFieldValue('manage_stock', '', false);\n                                }, 100);\n                              }\n                              formik.handleChange(e);\n                            }}\n                          />\n                          {console.log(formik.values.manage_stock)}\n                          <div className=\"row\" style={{ display: formik.values.manage_stock == \"\" || formik.values.manage_stock == 0 ? \"none\" : \"\" }}>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"stock_quantity\" value={formik.values.stock_quantity != null ? formik.values.stock_quantity : \"\"} label={t(\"stock_quantity\")} controlId=\"serviceForm-stock_quantity\"   />\n                            </div>\n                            <div className=\"mb-3 col-md-6\">\n                              <InputField type=\"text\" name=\"low_stock_threshold\" value={formik.values.stock_quantity != null ? formik.values.low_stock_threshold : \"\"} label={t(\"low_stock_threshold\")} controlId=\"serviceForm-low_stock_threshold\"  />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ServiceEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/form/ServiceAddForm.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceSuggetionListView.js",["650","651","652","653"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { serviceListViewApi, closeServiceSearchList, serviceSearchName } from \"../../../store/slices/serviceSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n// import ReactPaginate from 'react-paginate';\n\nconst ServiceSuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.service.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(serviceSearchName(suggetionname));\n    dispatch(closeServiceSearchList());\n    dispatch(serviceListViewApi({ id: suggetionid, result:\"result_array\" }));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <li className=\"service-suggetion-li\" key={i} data-id={id} data-name={ucfirst(name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{image_url ? <img src={image_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(name) +' - '+sku}</span>\n                  <span className=\"user-id\">{ucfirst(supplier_name)}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default ServiceSuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/list/ServiceListView.js",["654","655","656","657","658","659","660","661","662","663","664","665"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { serviceManageStock, serviceDeleteApi, serviceDetailApi, serviceSortRemove, openEditServiceForm } from \"../../../store/slices/serviceSlice\";\nimport { supplierOptions } from \"../../../store/slices/supplierSlice\";\nimport { taxOptions } from \"../../../store/slices/taxSlice\";\nimport { selectImage, removeImage } from \"../../../store/slices/imageSlice\";\n// import ReactPaginate from 'react-paginate';\n\nconst ServiceListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const currentUser = props.currentUser;\n  const view = props.view;\n\n  // const view = useSelector((state) => state.service.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleServiceDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_service\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(serviceDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleServiceEditForm = (e, props) => {\n    const id = e.currentTarget.closest(\".service-view-tr\").dataset.id;\n    dispatch(openEditServiceForm());\n    dispatch(serviceDetailApi({ id })).then(action => {\n      if(action.meta.requestStatus == 'fulfilled'){\n          const detail = action.payload;\n          if (detail.image) {\n            dispatch(selectImage({ name: detail.image, size: \"\", type: \"\", url: detail.image_url }));\n          }else{\n            dispatch(removeImage());\n          }\n          dispatch(serviceManageStock(detail && detail.manage_stock));\n          dispatch(supplierOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n          dispatch(taxOptions({ option: { valueField: \"id\", labelField: \"name\" } }));\n      }\n    });\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          let sku = objectData[item].sku;\n          let cost_price = objectData[item].cost_price;\n          let retail_price = objectData[item].retail_price;\n          let manage_stock = objectData[item].manage_stock;\n          let stock_quantity = objectData[item].stock_quantity;\n          let low_stock_threshold = objectData[item].low_stock_threshold;\n          let image_url = objectData[item].image_url;\n          let supplier_name = objectData[item].supplier && objectData[item].supplier.name;\n          return (\n            <tr className=\"service-view-tr\" key={i} data-id={id}>\n              <td className=\"pe-0\" width=\"60px\">\n                {image_url ? (\n                  <div className=\"user\">\n                    <a data-fancybox=\"\" data-src={image_url}>\n                      <img src={image_url} alt=\"\" className=\"rounded-circle wh-40\" />\n                    </a>\n                  </div>\n                ) : (\n                  <div className=\"user-initial\">{name.charAt(0)}</div>\n                )}\n              </td>\n              <td>{ucfirst(name)}\n              </td>\n              <td>{sku}</td>\n              <td>{supplier_name}</td>\n              <td>{stock_quantity}</td>\n              <td>{retail_price}</td>\n              <td className=\"ps-0 text-end\" width=\"60px\">\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleServiceEditForm(e, { tab: \"servicedetail\" })}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleServiceDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ServiceListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientAddForm.js",["666","667","668","669","670","671","672","673","674","675"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, ReactSelectField, TextareaField, SwitchField, InputFieldImage } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\nimport { closeAddClientForm, clientStoreApi, clientGridViewApi, clientListViewApi } from \"../../../store/slices/clientSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\n\nconst ClientAddForm = (props) => {\n  const [loading, setLoading] = useState(false);\n  const rightDrawerOpened = useSelector((state) => state.client.isOpenedAddForm);\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const scriptedRef = useScriptRef();\n\n  const handlecloseAddClientForm = () => {\n    dispatch(closeAddClientForm());\n  };\n  const initialValues = {\n    first_name: \"\",\n    last_name: \"\",\n    profile_photo: \"\",\n    email: \"\",\n    phone_number: \"\",\n    date_of_birth: \"\",\n    gender: null,\n    address: \"\",\n    street: \"\",\n    suburb: \"\",\n    state: \"\",\n    postcode: \"\",\n    description: \"\",\n    send_sms_notification: \"\",\n    send_email_notification: \"\",\n    recieve_marketing_email: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    profile_photo: Yup.mixed(),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    date_of_birth: Yup.string().trim().label(t(\"date_of_birth\")).required(),\n    gender: Yup.string().trim().label(t(\"gender\")).required().nullable(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required(),\n    send_sms_notification: Yup.bool().label(t(\"send_sms_notification\")),\n    send_email_notification: Yup.bool().label(t(\"send_email_notification\")),\n    recieve_marketing_email: Yup.bool().label(t(\"send_sms_notification\")),\n  });\n  yupconfig();\n\n  const handleClientSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(clientStoreApi(values)).then((action) => {\n        if (action.meta.requestStatus == \"fulfilled\") {\n          setStatus({ success: true });\n          resetForm();\n          dispatch(removeImage());\n          dispatch(closeAddClientForm());\n          sweatalert({ title: t(\"created\"), text: t(\"created_successfully\"), icon: \"success\" });\n        } else if (action.meta.requestStatus == \"rejected\") {\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if (status == 422) {\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const genderOptions = [\n    { value: \"Male\", label: t(\"male\") },\n    { value: \"Female\", label: t(\"female\") },\n    { value: \"Other\", label: t(\"other\") },\n  ];\n\n  return (\n    <React.Fragment>\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleClientSubmit}>\n        {({ handleSubmit, values }) => {\n          return (\n            <div className={\"drawer client-drawer \" + rightDrawerOpened} id=\"addclient-drawer\">\n              <div className=\"drawer-wrp position-relative include-footer\">\n                <form noValidate onSubmit={handleSubmit}>\n                  <div className=\"drawer-header\">\n                    <h2 className=\"mb-4 pe-md-5 pe-3\">New Client</h2>\n                    <a className=\"close-drawer cursor-pointer\" onClick={handlecloseAddClientForm}>\n                      <img src={config.imagepath + \"close-icon.svg\"} alt=\"\" />\n                    </a>\n                  </div>\n                  <div className=\"drawer-body pb-md-5 pb-3\">\n                    <div className=\"row\">\n                      <div className=\"col-md-7\">\n                        <div className=\"row gx-2\">\n                          <div className=\"col-sm-6 mb-3\">\n                            <InputField type=\"text\" name=\"first_name\" value={values.first_name} label={t(\"first_name\")} controlId=\"clientForm-first_name\" />\n                          </div>\n                          <div className=\"col-sm-6 mb-3\">\n                            <InputField type=\"text\" name=\"last_name\" value={values.last_name} label={t(\"last_name\")} controlId=\"clientForm-last_name\" />\n                          </div>\n                        </div>\n                        <div className=\"row gx-2\">\n                          <div className=\"col-sm-6 mb-3\">\n                            <InputField type=\"text\" name=\"phone_number\" value={values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"clientForm-phone_number\" />\n                          </div>\n                          <div className=\"col-sm-6 mb-3\">\n                            <InputField type=\"text\" name=\"email\" value={values.email} label={t(\"email\")} controlId=\"clientForm-email\" />\n                          </div>\n                        </div>\n                        <div className=\"row gx-2\">\n                          <div className=\"col-sm-6 mb-3\">\n                            <InputField type=\"date\" name=\"date_of_birth\" value={values.date_of_birth} label={t(\"date_of_birth\")} controlId=\"clientForm-date_of_birth\" />\n                          </div>\n                          <div className=\"col-sm-6 mb-3\">\n                            <ReactSelectField name=\"gender\" label={t(\"gender\")} options={genderOptions} placeholder={t(\"--select--\")} controlId=\"clientForm-gender\" />\n                          </div>\n                        </div>\n                        <MapAddressField name=\"address\" label={t(\"address\")} value={values.address} placeholder={t(\"typing_address\")} controlId=\"clientForm-address\" />\n                      </div>\n                      <div className=\"col-md-5 mb-md-0 mb-3\">\n                        <InputFieldImage name=\"profile_photo\" accept=\"image/*\" label={t(\"profile_photo\")} page=\"client-addform\" controlId=\"clientForm-profile_photo\" />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-7\">\n                        <div className=\"mb-3\">\n                          <InputField type=\"text\" name=\"street\" value={values.street} label={t(\"street\")} controlId=\"clientForm-street\" />\n                        </div>\n                        <div className=\"row gx-2\">\n                          <div className=\"col-sm-6 mb-3\">\n                            <InputField type=\"text\" name=\"suburb\" value={values.suburb} label={t(\"suburb\")} controlId=\"clientForm-suburb\" />\n                          </div>\n                          <div className=\"col-sm-3 col-6 mb-3\">\n                            <InputField type=\"text\" name=\"state\" value={values.state} label={t(\"state\")} controlId=\"clientForm-state\" />\n                          </div>\n                          <div className=\"col-sm-3 col-6 mb-3\">\n                            <InputField type=\"text\" name=\"postcode\" value={values.postcode} label={t(\"postcode\")} controlId=\"clientForm-postcode\" />\n                          </div>\n                        </div>\n                        <div className=\"mb-3\">\n                          <TextareaField type=\"text\" name=\"description\" value={values.description} label={t(\"description\")} controlId=\"clientForm-description\" />\n                        </div>\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"\">{t(\"notification\")}</label>\n                          <SwitchField name=\"send_sms_notification\" label={t(\"send_sms_notification\")} controlId=\"clientForm-send_sms_notification\" value=\"1\" />\n                          <SwitchField name=\"send_email_notification\" label={t(\"send_email_notification\")} controlId=\"clientForm-send_email_notification\" value=\"1\" />\n                          <SwitchField name=\"recieve_marketing_email\" label={t(\"recieve_marketing_email\")} controlId=\"clientForm-recieve_marketing_email\" value=\"1\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"drawer-footer\">\n                    <div className=\"col-md-7 pe-2\">\n                      <input type=\"submit\" className=\"btn w-100 btn-lg\" value={t(\"create_client\")} />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ClientAddForm;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/gridview.js",["676","677","678","679","680","681","682","683","684"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { clientDeleteApi, openClientDetailModal, clientDetailApi, clientDetailTab } from \"../../../store/slices/clientSlice\";\n\nconst ClientGridView = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.client.isView);\n \n  const objectData = view && view.data ? view.data : view;\n \n  const handleClientDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.first_name + \" \" + props.last_name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_client\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(clientDeleteApi({ id: props.id }));\n    }\n  };\n  const handleClientDetailModal = (e, props) => {\n    const id = e.currentTarget.closest('.box-image-cover').dataset.id;\n    dispatch(openClientDetailModal());\n    dispatch(clientDetailApi({ id }));\n    if(props && props.tab == 'clientdetail'){\n      dispatch(clientDetailTab(\"clientdetail\"));\n    }\n  };\n  return (\n    <>\n      {objectData && Object.keys(objectData).map((item, i) => {\n        let id = objectData[item].id;\n        let first_name = objectData[item].first_name;\n        let last_name = objectData[item].last_name;\n        let phone_number = objectData[item].phone_number;\n        let profile_photo_url = objectData[item].profile_photo_url;\n        return (\n          <div className=\"box-image-cover\" key={i} data-id={id}>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" style={{ minWidth: \"116px\" }} aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\" onClick={(e) => handleClientDetailModal(e, { tab: \"clientdetail\" })}>\n                      <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"edit\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"sms.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"sms\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"email.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"email\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleClientDelete}>\n                      <i className=\"far fa-trash me-3\"></i>\n                      {t(\"delete\")}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <a className=\"client-detail cursor-pointer\" onClick={handleClientDetailModal}>\n              {profile_photo_url ? (\n                <div className=\"tabs-image\">\n                  <img src={profile_photo_url} alt=\"\" className=\"rounded-circle wh-118\" />\n                </div>\n              ) : (\n                <div className=\"tabs-image user-initial mx-auto\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>\n              )}\n              <div className=\"image-content\">\n                <h5 className=\"fw-semibold mb-1\">{ucfirst(first_name + \" \" + last_name)}</h5>\n                <h5 className=\"mb-0 fw-normal\">{phone_number}</h5>\n              </div>\n            </a>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ClientGridView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/listview.js",["685","686","687","688","689","690","691","692","693","694","695"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { clientDeleteApi, openClientDetailModal, clientDetailApi, clientDetailTab, clientViewApi, clientSortRemove } from \"../../../store/slices/clientSlice\";\n\n// import ReactPaginate from 'react-paginate';\n\nconst ClientListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n\n  // const view = useSelector((state) => state.client.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleClientDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.first_name + \" \" + props.last_name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_client\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(clientDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleClientDetailModal = (e, props) => {\n    const id = e.currentTarget.closest(\".client-view-tr\").dataset.id;\n    dispatch(openClientDetailModal());\n    dispatch(clientDetailApi({ id }));\n    if (props && props.tab == \"clientdetail\") {\n      dispatch(clientDetailTab(\"clientdetail\"));\n    }\n  };\n\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let first_name = objectData[item].first_name;\n          let last_name = objectData[item].last_name;\n          let email = objectData[item].email;\n          let phone_number = objectData[item].phone_number;\n          let profile_photo_url = objectData[item].profile_photo_url;\n          return (\n            <tr className=\"client-view-tr\" key={i} data-id={id}>\n              <td className=\"pe-0\" width=\"60px\">\n                {profile_photo_url ? (\n                  <div className=\"user\">\n                    <a data-fancybox=\"\" data-src={profile_photo_url}>\n                      <img src={profile_photo_url} alt=\"\" className=\"rounded-circle wh-40\" />\n                    </a>\n                  </div>\n                ) : (\n                  <div className=\"user-initial\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>\n                )}\n              </td>\n              <td>\n                <a className=\"cursor-pointer text-decoration-dotted hover-primary\" onClick={handleClientDetailModal}>\n                  {ucfirst(first_name + \" \" + last_name)}\n                </a>\n              </td>\n              <td>\n                <a className=\"cursor-pointer text-decoration-none hover-primary\" href={\"tel:\" + phone_number}>\n                  {phone_number}\n                </a>\n              </td>\n              <td>\n                <a className=\"cursor-pointer text-decoration-none hover-primary\" href={\"mailto:\" + email}>\n                  {email}\n                </a>\n              </td>\n              <td className=\"ps-0 text-end\" width=\"60px\">\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleClientDetailModal(e, { tab: \"clientdetail\" })}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleClientDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ClientListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/List/SuggetionListView.js",["696","697","698","699","700"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { clientGridViewApi, clientListViewApi, closeClientSearchList, clientSearchName } from \"../../../store/slices/clientSlice\";\nimport { ucfirst } from \"../../../helpers/functions\";\n\n// import ReactPaginate from 'react-paginate';\n\nconst SuggetionListView = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.client.isView);\n  const objectData = view && view.data ? view.data : view;\n\n  const handleSuggestedId = (e) => {\n    let suggetionid = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.id;\n    let suggetionname = e.currentTarget.parentElement && e.currentTarget.parentElement.dataset && e.currentTarget.parentElement.dataset.name;\n    dispatch(clientSearchName(suggetionname));\n    dispatch(closeClientSearchList());\n    dispatch(clientGridViewApi({ id: suggetionid, result:\"result_array\" }));\n    dispatch(clientListViewApi({ id: suggetionid, result:\"result_array\"}));\n  };\n\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let first_name = objectData[item].first_name;\n          let last_name = objectData[item].last_name;\n          let email = objectData[item].email;\n          let phone_number = objectData[item].phone_number;\n          let profile_photo_url = objectData[item].profile_photo_url;\n          return (\n            <li className=\"client-suggetion-li\" key={i} data-id={id} data-name={ucfirst(first_name + \" \" + last_name)}>\n              <a className=\"d-flex cursor-pointer\" onClick={handleSuggestedId}>\n                <div className=\"user-img me-2\">{profile_photo_url ? <img src={profile_photo_url} alt=\"\" className=\"rounded-circle wh-32\" /> : <div className=\"user-initial\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>}</div>\n                <div className=\"user-id\">\n                  <span className=\"user-name\">{ucfirst(first_name + \" \" + last_name)}</span>\n                  <span className=\"user-id\">{email}</span>\n                </div>\n              </a>\n            </li>\n          );\n        })}\n\n      {objectData.length <= 0 ? <li>{t(\"no_data_found\")}</li> : \"\"}\n    </>\n  );\n};\n\nexport default SuggetionListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/index.js",["701","702","703","704","705"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../../config\";\nimport SupplierGridView from \"./SupplierGridView\";\nimport { openAddSupplierForm, supplierGridViewApi, supplierSuggetionListApi } from \"../../../store/slices/supplierSlice\";\n\nconst Suppliers = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const GridView = useSelector((state) => state.supplier.isGridView);\n  const fetchDataGrid = () => {\n    dispatch(supplierGridViewApi({ next_page_url: GridView.next_page_url }));\n  };\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(supplierGridViewApi({ next_page_url: GridView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      {GridView.length > 0 || GridView.data ? (\n        <div className=\"row\">\n          <InfiniteScroll className=\"row\" dataLength={GridView.data && GridView.data.length ? GridView.data.length : \"0\"} next={fetchDataGrid} scrollableTarget=\"page-content-supplier\" hasMore={GridView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n            <a className=\"box-image-cover cursor-pointer\" onClick={() => dispatch(openAddSupplierForm())}>\n              <div className=\"tabs-image\">\n                <img src={config.imagepath + \"suppliers.png\"} alt=\"\" />\n              </div>\n              <div className=\"image-content\">\n                <h5>\n                  <i className=\"fal fa-plus me-2\"></i> {t(\"add_new\")}\n                </h5>\n              </div>\n            </a>\n            <SupplierGridView currentUser={currentUser} view={GridView} />\n            {!isFetching && GridView.next_page_url && (\n              <div className=\"col-2 m-auto text-center\">\n                <button onClick={loadMoreItems} className=\"btn btn-primary\">\n                  {t(\"more\")}\n                </button>\n              </div>\n            )}\n          </InfiniteScroll>\n        </div>\n      ) : (\n        <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n          <div className=\"complete-box-wrp text-center \">\n            <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n            <h4 className=\"mb-2 fw-semibold\">\n              {t(\"no_suppliers_have_been_created_yet\")}\n              <a className=\"add-suppliers ms-1 cursor-pointer\" onClick={() => dispatch(openAddSupplierForm())}>\n                {t(\"please_create_one\")}\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Suppliers;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/index.js",["706","707","708","709"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport config from \"../../../config\";\nimport CategoryListView from \"./CategoryListView\";\nimport { openAddCategoryForm, categoryListViewApi, categoriesuggetionListApi } from \"../../../store/slices/categorySlice\";\n\nconst Categories = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n\n  const ListView = useSelector((state) => state.category.isListView);\n  const fetchDataGrid = () => {\n    dispatch(categoryListViewApi({ next_page_url: ListView.next_page_url }));\n  };\n  const [isFetching, setIsFetching] = useState(false);\n  const loadMoreItems = () => {\n    setIsFetching(true);\n    dispatch(categoryListViewApi({ next_page_url: ListView.next_page_url }));\n    //mocking an API call\n    setTimeout(() => {\n      setIsFetching(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      {ListView.length > 0 || ListView.data ? (\n        <section className=\"services-table\">\n          <div className=\"services-table-shadow\">\n            <InfiniteScroll className=\"\" dataLength={ListView.data && ListView.data.length ? ListView.data.length : \"0\"} next={fetchDataGrid} scrollableTarget=\"page-content-category\" hasMore={ListView.next_page_url ? true : false} loader={<h4>loading...</h4>}>\n              <table className=\"table table-striped bg-white categorie-table\">\n                <thead>\n                  <tr>\n                    <th>Category</th>\n                    <th>Count</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody className=\"services-table-data\">\n                  <CategoryListView currentUser={currentUser} view={ListView} />\n                </tbody>\n              </table>\n\n              {!isFetching && ListView.next_page_url && (\n                <div className=\"col-2 m-auto text-center\">\n                  <button onClick={loadMoreItems} className=\"btn btn-primary m-4\">\n                    {t(\"more\")}\n                  </button>\n                </div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </section>\n      ) : (\n        <div className=\"complete-box text-center d-flex flex-column justify-content-center my-md-5 my-4 bg-white\">\n          <div className=\"complete-box-wrp text-center \">\n            <img src={config.imagepath + \"service.png\"} alt=\"\" className=\"mb-md-4 mb-3\" />\n            <h4 className=\"mb-2 fw-semibold\">\n              {t(\"no_categories_have_been_created_yet\")}\n              <a className=\"add-categories ms-1 cursor-pointer\" onClick={() => dispatch(openAddCategoryForm())}>\n                {t(\"please_create_one\")}\n              </a>\n              .\n            </h4>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Categories;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Sidebar/index.js",[],"/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/index.js",["710","711","712"],"// ==============================|| MAIN NAVBAR / HEADER ||============================== //\nimport { Link } from \"react-router-dom\";\nimport config from \"../../../config\";\nimport ProfileSection from \"./ProfileSection\";\n\nconst Header = () => {\n  return (\n    <>\n      <header>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div className=\"left-col d-flex align-items-center\">\n            <Link to=\"javascript:void(0)\" className=\"mobile-menu-icon pe-2 d-lg-none\">\n              <img src={config.imagepath + \"favicon.png\"} alt=\"\" />\n            </Link>\n            <h2 className=\"page-title mb-0\">Dashboard</h2>\n          </div>\n          <div className=\"rigt-col d-flex align-items-center\">\n            <div className=\"search\">\n              <Link to=\"javascript:void(0)\" className=\"search-icon\">\n                <img src={config.imagepath + \"search.png\"} alt=\"\" />\n              </Link>\n              <div className=\"search-wrapper\">\n                <form action=\"\">\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <i className=\"far fa-search\"></i>\n                    </span>\n                    <input type=\"text\" className=\"search-input rounded-1 form-control\" placeholder=\"Search Clients\" />\n                    <Link to=\"javascript:void(0)\" className=\"close\">\n                      <i className=\"fal fa-times\"></i>\n                    </Link>\n                  </div>\n                  <div className=\"search-result dropdown-box\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                      <li>\n                        <Link to=\"#\" className=\"d-flex\">\n                          <div className=\"user-initial me-2\">js</div>\n                          <div className=\"user-id\">\n                            <span className=\"user-name\">Jo Smith</span>\n                            <span className=\"user-id\">jo.smith@gmail.com</span>\n                          </div>\n                        </Link>\n                      </li>\n                      <li>\n                        <Link to=\"#\" className=\"d-flex\">\n                          <div className=\"user-initial me-2\">js</div>\n                          <div className=\"user-id\">\n                            <span className=\"user-name\">Jo Smith</span>\n                            <span className=\"user-id\">jo.smith@gmail.com</span>\n                          </div>\n                        </Link>\n                      </li>\n                      <li>\n                        <Link to=\"#\" className=\"d-flex\">\n                          <div className=\"user-initial me-2\">js</div>\n                          <div className=\"user-id\">\n                            <span className=\"user-name\">Jo Smith</span>\n                            <span className=\"user-id\">jo.smith@gmail.com</span>\n                          </div>\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                </form>\n              </div>\n            </div>\n            <Link to=\"\" className=\"ms-lg-4 ms-2\">\n              <img src={config.imagepath + \"bell.png\"} alt=\"\" />\n            </Link>\n            <Link to=\"\" className=\"ms-lg-4 ms-2\">\n              <img src={config.imagepath + \"setting-icon.png\"} alt=\"\" />\n            </Link>\n            <ProfileSection />\n          </div>\n        </div>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","/opt/lampp/htdocs/git/salonreact/src/hooks/useScriptRef.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/form/Field.js",[],["713","714"],"/opt/lampp/htdocs/git/salonreact/src/component/form/CustomSelect.js",[],"/opt/lampp/htdocs/git/salonreact/src/helpers/functions.js",[],"/opt/lampp/htdocs/git/salonreact/src/pages/products/suppliers/SupplierGridView.js",["715","716","717","718","719","720","721","722"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { openEditSupplierForm, supplierDeleteApi, supplierDetailApi } from \"../../../store/slices/supplierSlice\";\n\nconst SupplierGridView = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.supplier.isView);\n \n  const objectData = view && view.data ? view.data : view;\n  const handleSupplierDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.first_name + \" \" + props.last_name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_supplier\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(supplierDeleteApi({ id: props.id }));\n    }\n  };\n \n  const handleEditForm = (e) =>{\n      const id = e.currentTarget.closest('.box-image-cover').dataset.id;\n      dispatch(openEditSupplierForm());\n      dispatch(supplierDetailApi({ id }));\n  }\n  return (\n    <>\n      {objectData && Object.keys(objectData).map((item, i) => {\n        let id = objectData[item].id;\n        let name = objectData[item].name;\n        let first_name = objectData[item].first_name;\n        let last_name = objectData[item].last_name;\n        let phone_number = objectData[item].phone_number;\n        let logo_url = objectData[item].logo_url;\n        return (\n          <div className=\"box-image-cover\" key={i} data-id={id}>\n            <div className=\"dropdown d-inline-block setting-dropdown\">\n              <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                <i className=\"far fa-ellipsis-v\"></i>\n              </button>\n              <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" style={{ minWidth: \"116px\" }} aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                <ul className=\"p-0 m-0 list-unstyled\">\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\" onClick={handleEditForm}>\n                      <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"edit\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"sms.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"sms\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\">\n                      <img src={config.imagepath + \"email.png\"} className=\"me-3\" alt=\"\" />\n                      {t(\"email\")}\n                    </a>\n                  </li>\n                  <li>\n                    <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleSupplierDelete}>\n                      <i className=\"far fa-trash me-3\"></i>\n                      {t(\"delete\")}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <a className=\"supplier-detail cursor-pointer\" >\n              {logo_url ? (\n                <div className=\"tabs-image\">\n                  <img src={logo_url} alt=\"\" className=\"rounded-circle wh-118\" />\n                </div>\n              ) : (\n                <div className=\"tabs-image user-initial mx-auto\">{first_name.charAt(0) + \"\" + last_name.charAt(0)}</div>\n              )}\n              <div className=\"image-content\">\n                <h5 className=\"fw-semibold mb-1\">{ucfirst(name)}</h5>\n                <h5 className=\"mb-1 fw-normal\">{ucfirst(first_name + \" \" + last_name)}</h5>\n                <h6 className=\"mb-0 fw-normal text-sm\">{phone_number}</h6>\n              </div>\n            </a>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SupplierGridView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/services/categories/CategoryListView.js",["723","724","725","726","727","728"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../config\";\nimport { ucfirst } from \"../../../helpers/functions\";\nimport { swalConfirm } from \"../../../component/Sweatalert2\";\nimport { openEditCategoryForm, categoryDeleteApi, categoryDetailApi } from \"../../../store/slices/categorySlice\";\n\nconst CategoryListView = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const currentUser = props.currentUser;\n  const view = props.view;\n  // const view = useSelector((state) => state.category.isView);\n\n  const objectData = view && view.data ? view.data : view;\n  const handleCategoryDelete = (e) => {\n    const props = JSON.parse(e.currentTarget.dataset.obj);\n    const name = ucfirst(props.first_name + \" \" + props.last_name);\n    let confirmbtn = swalConfirm(e.currentTarget, { title: t(\"are_you_sure_delete_category\"), message: name, confirmButtonText: t(\"yes_delete_it\") });\n    if (confirmbtn == true) {\n      dispatch(categoryDeleteApi({ id: props.id }));\n    }\n  };\n\n  const handleEditForm = (e) => {\n    const id = e.currentTarget.closest(\".category-view-tr\").dataset.id;\n    dispatch(openEditCategoryForm());\n    dispatch(categoryDetailApi({ id }));\n  };\n  return (\n    <>\n      {objectData &&\n        Object.keys(objectData).map((item, i) => {\n          let id = objectData[item].id;\n          let name = objectData[item].name;\n          return (\n            <tr className=\"category-view-tr\" key={i} data-id={id}>\n              <td>{ucfirst(name)}</td>\n              <td>\n                <a href=\"#\" className=\"color-wine\">\n                  4\n                </a>\n              </td>\n              <td style={{ textAlign: 'right', width: '8%' }}>\n                <div className=\"dropdown d-inline-block setting-dropdown\">\n                  <button className=\"dropdown-toggle dropdown-toggle-icon-none\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"true\">\n                    <i className=\"far fa-ellipsis-v\"></i>\n                  </button>\n                  <div className=\"dropdown-menu dropdown-box dropdown-menu-end\" aria-labelledby=\"dropdownMenuButton1\" data-popper-placement=\"bottom-end\">\n                    <ul className=\"p-0 m-0 list-unstyled\">\n                    <li>\n                        <a className=\"d-flex align-items-center edit-service cursor-pointer\" onClick={(e) => handleEditForm(e)}>\n                          <img src={config.imagepath + \"edit.png\"} className=\"me-3\" alt=\"\" />\n                          {t(\"edit\")}\n                        </a>\n                      </li>\n                      <li>\n                        <a className=\"d-flex align-items-center cursor-pointer\" data-obj={JSON.stringify(objectData[item])} onClick={handleCategoryDelete}>\n                          <i className=\"far fa-trash me-3\"></i>\n                          {t(\"delete\")}\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          );\n        })}\n    </>\n  );\n};\n\nexport default CategoryListView;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Form/ClientEditForm.js",["729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\n// validation Formik\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport config from \"../../../config\";\nimport yupconfig from \"../../../yupconfig\";\nimport { InputField, MapAddressField, SelectField, TextareaField, SwitchField, InputFieldImage, DatePickerField } from \"../../../component/form/Field\";\nimport { sweatalert } from \"../../../component/Sweatalert2\";\n\nimport { closeClientDetailModal, clientUpdateApi, clientDetailApi, clientGridViewApi, clientListViewApi } from \"../../../store/slices/clientSlice\";\nimport { removeImage } from \"../../../store/slices/imageSlice\";\nimport useScriptRef from \"../../../hooks/useScriptRef\";\nimport useErrorsRef from \"../../../hooks/useErrorsRef\";\n\nconst ClientEditForm = (props) => {\n  const [loading, setLoading] = useState(false);\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n  const detail = useSelector((state) => state.client.isDetailData);\n  \n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const scriptedRef = useScriptRef();\n  const serverErrors = useErrorsRef();\n\n  const handleCloseClientDetailModal = () => {\n    dispatch(closeClientDetailModal());\n  };\n\n  const initialValues = {\n    id: detail && detail.id,\n    first_name: detail && detail.first_name,\n    last_name: detail && detail.last_name,\n    email: detail && detail.email,\n    phone_number: detail && detail.phone_number,\n    date_of_birth: detail && detail.date_of_birth,\n    gender: detail && detail.gender,\n    address: detail && detail.address,\n    street: detail && detail.street,\n    suburb: detail && detail.suburb,\n    state: detail && detail.state,\n    postcode: detail && detail.postcode,\n    description: detail && detail.description,\n    send_sms_notification: detail && detail.send_sms_notification,\n    send_email_notification: detail && detail.send_email_notification,\n    recieve_marketing_email: detail && detail.recieve_marketing_email,\n  };\n\n  const validationSchema = Yup.object().shape({\n    first_name: Yup.string().trim().max(50).label(t(\"first_name\")).required(),\n    last_name: Yup.string().trim().max(50).label(t(\"last_name\")).required(),\n    email: Yup.string().trim().max(100).email().label(t(\"email\")).required(),\n    phone_number: Yup.string().trim().matches(config.phone_number_pattern, t(config.phone_number_334_error)).label(t(\"phone_number\")).required(),\n    date_of_birth: Yup.string().trim().label(t(\"date_of_birth\")).required(),\n    gender: Yup.string().trim().label(t(\"gender\")).required().nullable(),\n    address: Yup.string().trim().label(t(\"address\")).required(),\n    street: Yup.string().trim().label(t(\"street\")).required(),\n    suburb: Yup.string().trim().label(t(\"suburb\")).required(),\n    state: Yup.string().trim().label(t(\"state\")).required(),\n    postcode: Yup.string().trim().max(12).label(t(\"postcode\")).required(),\n    description: Yup.string().trim().label(t(\"description\")).required()\n  });\n  yupconfig();\n\n  const handleClientSubmit = (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n    setLoading(true);\n    try {\n      dispatch(clientUpdateApi(values)).then((action) => {\n        console.log(action);\n        if(action.meta.requestStatus == 'fulfilled'){\n          setStatus({ success: true });\n          dispatch(clientDetailApi({ id: action.payload.id }));\n          sweatalert({title:t('updated'), text:t('updated_successfully'), icon:\"success\"});\n        }else if(action.meta.requestStatus == 'rejected'){\n          const status = action.payload && action.payload.status;\n          const errors = action.payload && action.payload.message && action.payload.message.errors;\n          if(status == 422){\n            setErrors(errors);\n          }\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      });\n      if (scriptedRef.current) {\n        setLoading(false);\n      }\n    } catch (err) {\n      if (scriptedRef.current) {\n        setErrors(err.message);\n      }\n      setStatus({ success: false });\n      setLoading(false);\n    }\n  };\n\n  const genderOptions = [\n    { value: \"Male\", label: t(\"male\") },\n    { value: \"Female\", label: t(\"female\") },\n    { value: \"Other\", label: t(\"other\") },\n  ];\n\n  return (\n    <React.Fragment>\n      <Formik enableReinitialize={true} initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleClientSubmit}>\n        {({ handleSubmit, setFieldValue, values, status }) => {\n          useEffect(() => {\n            if(detail){\n              // const checkboxfields = [\"send_sms_notification\", \"send_email_notification\", \"recieve_marketing_email\"];\n              // checkboxfields.forEach((field) => setFieldValue(field, detail[field], false));\n            }\n          }, [detail, status]);\n          return (\n            <form noValidate onSubmit={handleSubmit} className=\"px-1\">\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"first_name\" value={values.first_name} label={t(\"first_name\")} controlId=\"clientForm-first_name\" />\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"last_name\" value={values.last_name} label={t(\"last_name\")} controlId=\"clientForm-last_name\" />\n                </div>\n              </div>\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"phone_number\" value={values.phone_number} mask=\"999-999-9999\" label={t(\"phone_number\")} controlId=\"clientForm-phone_number\" />\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"email\" value={values.email} label={t(\"email\")} controlId=\"clientForm-email\" />\n                </div>\n              </div>\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"date\" name=\"date_of_birth\" value={values.date_of_birth} label={t(\"date_of_birth\")} controlId=\"clientForm-date_of_birth\" />\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                  <SelectField name=\"gender\" label={t(\"gender\")} options={genderOptions} placeholder={t(\"--select--\")} controlId=\"clientForm-gender\" />\n                </div>\n              </div>\n              <MapAddressField name=\"address\" label={t(\"address\")} value={values.address} placeholder={t(\"typing_address\")} controlId=\"clientForm-address\" />\n\n              <div className=\"row gx-2\">\n                <div className=\"mb-3\">\n                  <InputField type=\"text\" name=\"street\" value={values.street} label={t(\"street\")} controlId=\"clientForm-street\" />\n                </div>\n              </div>\n              <div className=\"row gx-2\">\n                <div className=\"col-sm-6 mb-3\">\n                  <InputField type=\"text\" name=\"suburb\" value={values.suburb} label={t(\"suburb\")} controlId=\"clientForm-suburb\" />\n                </div>\n                <div className=\"col-sm-3 col-6 mb-3\">\n                  <InputField type=\"text\" name=\"state\" value={values.state} label={t(\"state\")} controlId=\"clientForm-state\" />\n                </div>\n                <div className=\"col-sm-3 col-6 mb-3\">\n                  <InputField type=\"text\" name=\"postcode\" value={values.postcode} label={t(\"postcode\")} controlId=\"clientForm-postcode\" />\n                </div>\n              </div>\n              <div className=\"mb-3\">\n                <TextareaField type=\"text\" name=\"description\" value={values.description} label={t(\"client_notes\")} controlId=\"clientForm-description\" />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">{t(\"notification\")}</label>\n                <SwitchField name=\"send_sms_notification\" label={t(\"send_sms_notification\")} controlId=\"clientForm-send_sms_notification\" value=\"1\" />\n                <SwitchField name=\"send_email_notification\" label={t(\"send_email_notification\")} controlId=\"clientForm-send_email_notification\" value=\"1\" />\n                <SwitchField name=\"recieve_marketing_email\" label={t(\"recieve_marketing_email\")} controlId=\"clientForm-recieve_marketing_email\" value=\"1\" />\n              </div>\n              <div className=\"col-md-12 pe-2\">\n                <input type=\"submit\" className=\"btn w-100 btn-lg\" value={t(\"update_client\")} />\n              </div>\n            </form>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default ClientEditForm;\n","/opt/lampp/htdocs/git/salonreact/src/component/Sweatalert2/index.js",["745"],"import Swal from \"sweetalert2\";\n\nconst sweatalert = (props) => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: props.icon,\n  });\n};\n\nconst swalSuccess = (props) => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: \"success\",\n  });\n};\n\nconst swalError = (props) => {\n  Swal.fire({\n    title: props.title,\n    text: props.messsage,\n    type: \"error\",\n  });\n};\n\nconst swalConfirm = (btn, props) => {\n  if (btn.getAttribute('confirmOK') == \"1\") {\n    return true;\n  }\n  Swal.fire({\n    title: `<h5 class=\"mb-0\">${props.title}</h5>`,\n    text: props.message,\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: props.confirmButtonText,\n  }).then((result) => {\n    if (result.value) {\n      btn.setAttribute('confirmOK', '1');\n      btn.click();\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\n      btn.setAttribute('confirmOK', '0');\n    }\n  });\n  return false;\n};\n\nexport { sweatalert, swalSuccess, swalError, swalConfirm };\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Voucher/index.js",["746","747","748","749","750","751","752","753","754"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Voucher = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      <div className=\"mb-lg-4\">\n        <a className=\"text-decoration-none event-box\">\n          <h6 className=\"mb-1 color-wine fw-semibold d-flex justify-content-between align-items-start\">\n            Code: PR672KUY <span className=\"active\">Active</span>\n          </h6>\n          <h6 className=\"mb-1\">Expires on 30th March 2022</h6>\n          <div className=\"row\">\n            <h6 className=\"col-md-6 mb-1\">\n              <b>From:</b> Jo Smith\n            </h6>\n            <h6 className=\"col-md-6 mb-1\">\n              <b>To:</b> Michael Randerson\n            </h6>\n          </div>\n          <div className=\"row\">\n            <h6 className=\"col-6 mb-1\">\n              <b>Initial Value</b>\n            </h6>\n            <h6 className=\"col-6 mb-1 text-end\">$120</h6>\n          </div>\n          <div className=\"row\">\n            <h6 className=\"col-6 mb-0\">\n              <b>Balance</b>\n            </h6>\n            <h6 className=\"col-6 mb-0 text-end\">\n              <b>$50</b>\n            </h6>\n          </div>\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Voucher;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Appointment/index.js",["755","756","757","758","759","760","761","762","763","764","765"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Appointment = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      \n        <div className=\"mb-lg-4\">\n          <h4 className=\"mb-3\">Upcoming</h4>\n          <a className=\"text-decoration-none event-box\" id=\"addappoinment-drawer-link\">\n            <h6 className=\"mb-1 color-wine fw-semibold\">Monday, August 17th 2021</h6>\n            <h6 className=\"mb-1\">10:00am</h6>\n            <h6 className=\"mb-0\">Haircut & Blow Dry with Amanda</h6>\n          </a>\n        </div>\n        <div className=\"mb-lg-4\">\n          <h4 className=\"mb-3\">Past </h4>\n          <div className=\"event-box\">\n            <h6 className=\"mb-0 color-wine fw-semibold d-flex align-items-start\">\n              Monday, August 17th 2021\n              <a className=\"ms-auto invoice-link\">\n                <img src=\"assets/images/past.png\" alt=\"\" />\n              </a>\n            </h6>\n            <h6 className=\"mb-1\">10:00am</h6>\n            <h6 className=\"mb-0\">Haircut & Blow Dry with Amanda</h6>\n          </div>\n          <div className=\"event-box\">\n            <h6 className=\"mb-0 color-wine fw-semibold d-flex align-items-start\">\n              Monday, August 17th 2021\n              <a className=\"ms-auto\">\n                <img src=\"assets/images/past.png\" alt=\"\" />\n              </a>\n            </h6>\n            <h6 className=\"mb-1\">10:00am</h6>\n            <h6 className=\"mb-0\">Haircut & Blow Dry with Amanda</h6>\n          </div>\n        </div>\n    </>\n  );\n};\n\nexport default Appointment;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Subscription/index.js",["766","767","768","769","770","771","772","773","774"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Subscription = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      <div className=\"complete-box text-center d-flex flex-column justify-content-center mt-xl-4\">\n        <div className=\"complete-box-wrp text-center\">\n          <img src=\"assets/images/voucher.png\" alt=\"\" className=\"mb-md-4 mb-3\" />\n          <h5 className=\"mb-2 fw-semibold\">\n            There are no subscriptions available.\n            <a href=\"#\">Please create one first.</a>\n          </h5>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Subscription;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Photos/index.js",["775","776","777","778","779","780","781","782","783","784","785","786","787","788"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Photos = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      <div className=\"drawer addnote-drawer\">\n        <div className=\"drawer-wrp position-relative\">\n          <div className=\"drawer-header\">\n            <h2 className=\"mb-4 pe-md-5 pe-3\">\n              Notes{\" \"}\n              <a href=\"#\" className=\"btn btn-outline btn-sm ms-2\">\n                Add Note\n              </a>\n            </h2>\n            <a className=\"close\">\n              <img src=\"assets/images/close-icon.svg\" alt=\"\" />\n            </a>\n          </div>\n          <div className=\"drawer-body\">\n            <div className=\"event-box\">\n              <div className=\"row gx-1 justify-content-between\">\n                <div className=\"col-md-7 mb-2\">Monday 12th July 2021 at 03:11pm</div>\n                <div className=\"col-md-5 text-end mb-2\">\n                  <a href=\"\" className=\"remove me-2\">\n                    Remove\n                  </a>\n                  <a href=\"#\" className=\"btn btn-outline btn-sm\">\n                    edit\n                  </a>\n                </div>\n              </div>\n              <p>\n                <b>Gave Jo some samples of Wella Maximiser shampoo to try. Remember to ask what she thought of them.</b>\n              </p>\n            </div>\n            <div className=\"event-box\">\n              <div className=\"row gx-1 justify-content-between\">\n                <div className=\"col-md-7 mb-2\">Monday 12th July 2021 at 03:11pm</div>\n                <div className=\"col-md-5 text-end mb-2\">\n                  <a href=\"\" className=\"remove me-2\">\n                    Remove\n                  </a>\n                  <a href=\"#\" className=\"btn btn-outline btn-sm\">\n                    edit\n                  </a>\n                </div>\n              </div>\n              <p>\n                <b>Gave Jo some samples of Wella Maximiser shampoo to try. Remember to ask what she thought of them.</b>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Photos;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Invoices/index.js",["789","790","791","792","793","794","795","796","797","798","799"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Invoices = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      <div className=\"event-box\">\n        <div className=\"d-flex align-items-start\">\n          <a className=\"ms-auto invoice-link\">\n            <img src=\"assets/images/past.png\" alt=\"\" />\n          </a>\n          <div className=\"w-100 px-md-3 px-2\">\n            <h6 className=\"mb-1 color-wine fw-semibold\">0004</h6>\n            <h6 className=\"mb-1\">Invoice date: Monday, 12th July 2021</h6>\n            <h6 className=\"mb-0 fw-semibold\">$120.00</h6>\n          </div>\n          <span className=\"active\">Paid</span>\n        </div>\n      </div>\n      <div className=\"event-box\">\n        <div className=\"d-flex align-items-start\">\n          <a className=\"ms-auto invoice-link\">\n            <img src=\"assets/images/past.png\" alt=\"\" />\n          </a>\n          <div className=\"w-100 px-md-3 px-2\">\n            <h6 className=\"mb-1 color-wine fw-semibold\">0004</h6>\n            <h6 className=\"mb-1\">Invoice date: Monday, 12th July 2021</h6>\n            <h6 className=\"mb-0 fw-semibold\">$120.00</h6>\n          </div>\n          <span className=\"active\">Paid</span>\n        </div>\n      </div>\n      <div className=\"event-box\">\n        <div className=\"d-flex align-items-start\">\n          <a className=\"ms-auto invoice-link\">\n            <img src=\"assets/images/past.png\" alt=\"\" />\n          </a>\n          <div className=\"w-100 px-md-3 px-2\">\n            <h6 className=\"mb-1 color-wine fw-semibold\">0004</h6>\n            <h6 className=\"mb-1\">Invoice date: Monday, 12th July 2021</h6>\n            <h6 className=\"mb-0 fw-semibold\">$120.00</h6>\n          </div>\n          <span className=\"active\">Paid</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Invoices;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Membership/index.js",["800","801","802","803","804","805","806","807","808"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Membership = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      <div className=\"complete-box text-center d-flex flex-column justify-content-center mt-xs-4\">\n        <div className=\"complete-box-wrp text-center\">\n          <img src=\"assets/images/voucher.png\" alt=\"\" className=\"mb-md-4 mb-3\" />\n          <h5 className=\"mb-2 fw-semibold\">\n            There are no memberships available.\n            <a href=\"#\">Please create one first.</a>\n          </h5>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Membership;\n","/opt/lampp/htdocs/git/salonreact/src/pages/clients/Detail/Documents/index.js",["809","810","811","812","813","814","815","816","817"],"// import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useTranslation } from \"react-i18next\";\nimport config from \"../../../../config\";\nimport { ucfirst } from \"../../../../helpers/functions\";\nimport { swalConfirm } from \"../../../../component/Sweatalert2\";\nimport { clientDelete, openclientDetail } from \"../../../../store/slices/clientSlice\";\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import ReactPaginate from 'react-paginate';\n\nconst Documents = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const currentUser = props.currentUser;\n  return (\n    <>\n      <div className=\"complete-box text-center d-flex flex-column justify-content-center mt-xs-4\">\n        <div className=\"complete-box-wrp text-center\">\n          <img src=\"assets/images/docs.png\" alt=\"\" className=\"mb-md-4 mb-3\" />\n          <h5 className=\"mb-2 fw-semibold\">\n            Add documents and keep a record of your client’s treatments.\n            <a className=\"add-document\">Add your first document.</a>\n          </h5>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Documents;\n","/opt/lampp/htdocs/git/salonreact/src/layout/MainLayout/Header/ProfileSection/index.js",["818","819","820","821"],"import { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { logout } from \"../../../../store/slices/auth\";\nimport config from \"../../../../config\";\n\nconst ProfileSection = () => {\n  const navigate = useNavigate();\n  const auth = useSelector((state) => state.auth);\n  const currentUser = auth.user;\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  return (\n    <>\n      <div className=\"dropdown\">\n        <Link to=\"#\" className=\"position-relative user-profile-icon ms-lg-4 ms-2 \" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n          <img src={currentUser && currentUser.profile_photo_url ? currentUser.profile_photo_url : config.imagepath + \"Avatar.png\"} alt=\"\" />\n          <span className=\"user-status online\"></span>\n        </Link>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a className=\"dropdown-item\" >{currentUser.first_name+' '+currentUser.last_name}</a>\n          <a className=\"dropdown-item\" >{currentUser.email}</a>\n          <a className=\"dropdown-item cursor-pointer text-bold\" onClick={handleLogout}><i className=\"fas fa-sign-out-alt me-2\"></i>Log Out</a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileSection;\n","/opt/lampp/htdocs/git/salonreact/src/hooks/useErrorsRef.js",[],"/opt/lampp/htdocs/git/salonreact/src/yupconfig.js",[],"/opt/lampp/htdocs/git/salonreact/src/component/form/Validation.js",[],{"ruleId":"822","replacedBy":"823"},{"ruleId":"824","replacedBy":"825"},{"ruleId":"826","severity":1,"message":"827","line":1,"column":17,"nodeType":"828","messageId":"829","endLine":1,"endColumn":25},{"ruleId":"826","severity":1,"message":"830","line":1,"column":27,"nodeType":"828","messageId":"829","endLine":1,"endColumn":36},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"832","line":2,"column":16,"nodeType":"828","messageId":"829","endLine":2,"endColumn":27},{"ruleId":"826","severity":1,"message":"833","line":3,"column":10,"nodeType":"828","messageId":"829","endLine":3,"endColumn":21},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"835","line":4,"column":10,"nodeType":"828","messageId":"829","endLine":4,"endColumn":24},{"ruleId":"826","severity":1,"message":"836","line":5,"column":10,"nodeType":"828","messageId":"829","endLine":5,"endColumn":16},{"ruleId":"826","severity":1,"message":"837","line":5,"column":18,"nodeType":"828","messageId":"829","endLine":5,"endColumn":22},{"ruleId":"826","severity":1,"message":"838","line":6,"column":13,"nodeType":"828","messageId":"829","endLine":6,"endColumn":16},{"ruleId":"839","severity":1,"message":"840","line":20,"column":15,"nodeType":"841","endLine":20,"endColumn":85},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"842","line":13,"column":10,"nodeType":"828","messageId":"829","endLine":13,"endColumn":21},{"ruleId":"826","severity":1,"message":"843","line":27,"column":9,"nodeType":"828","messageId":"829","endLine":27,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":101,"column":39,"nodeType":"846","messageId":"847","endLine":101,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":138,"column":39,"nodeType":"846","messageId":"847","endLine":138,"endColumn":41},{"ruleId":"848","severity":1,"message":"849","line":169,"column":17,"nodeType":"841","endLine":169,"endColumn":267},{"ruleId":"844","severity":1,"message":"845","line":169,"column":74,"nodeType":"846","messageId":"847","endLine":169,"endColumn":76},{"ruleId":"848","severity":1,"message":"849","line":174,"column":17,"nodeType":"841","endLine":174,"endColumn":275},{"ruleId":"844","severity":1,"message":"845","line":174,"column":74,"nodeType":"846","messageId":"847","endLine":174,"endColumn":76},{"ruleId":"844","severity":1,"message":"845","line":186,"column":37,"nodeType":"846","messageId":"847","endLine":186,"endColumn":39},{"ruleId":"848","severity":1,"message":"849","line":189,"column":21,"nodeType":"841","endLine":189,"endColumn":146},{"ruleId":"848","severity":1,"message":"849","line":196,"column":21,"nodeType":"841","endLine":196,"endColumn":148},{"ruleId":"844","severity":1,"message":"845","line":202,"column":35,"nodeType":"846","messageId":"847","endLine":202,"endColumn":37},{"ruleId":"844","severity":1,"message":"845","line":223,"column":50,"nodeType":"846","messageId":"847","endLine":223,"endColumn":52},{"ruleId":"844","severity":1,"message":"845","line":223,"column":117,"nodeType":"846","messageId":"847","endLine":223,"endColumn":119},{"ruleId":"848","severity":1,"message":"850","line":224,"column":17,"nodeType":"841","endLine":224,"endColumn":116},{"ruleId":"844","severity":1,"message":"845","line":228,"column":50,"nodeType":"846","messageId":"847","endLine":228,"endColumn":52},{"ruleId":"844","severity":1,"message":"845","line":228,"column":118,"nodeType":"846","messageId":"847","endLine":228,"endColumn":120},{"ruleId":"848","severity":1,"message":"850","line":229,"column":17,"nodeType":"841","endLine":229,"endColumn":117},{"ruleId":"848","severity":1,"message":"849","line":241,"column":21,"nodeType":"841","endLine":241,"endColumn":99},{"ruleId":"848","severity":1,"message":"849","line":247,"column":21,"nodeType":"841","endLine":247,"endColumn":96},{"ruleId":"851","severity":1,"message":"852","line":248,"column":23,"nodeType":"841","endLine":248,"endColumn":85},{"ruleId":"844","severity":1,"message":"845","line":260,"column":62,"nodeType":"846","messageId":"847","endLine":260,"endColumn":64},{"ruleId":"848","severity":1,"message":"850","line":270,"column":31,"nodeType":"841","endLine":270,"endColumn":147},{"ruleId":"844","severity":1,"message":"845","line":270,"column":117,"nodeType":"846","messageId":"847","endLine":270,"endColumn":119},{"ruleId":"844","severity":1,"message":"845","line":273,"column":80,"nodeType":"846","messageId":"847","endLine":273,"endColumn":82},{"ruleId":"844","severity":1,"message":"845","line":274,"column":82,"nodeType":"846","messageId":"847","endLine":274,"endColumn":84},{"ruleId":"848","severity":1,"message":"850","line":279,"column":31,"nodeType":"841","endLine":279,"endColumn":145},{"ruleId":"844","severity":1,"message":"845","line":279,"column":115,"nodeType":"846","messageId":"847","endLine":279,"endColumn":117},{"ruleId":"844","severity":1,"message":"845","line":282,"column":79,"nodeType":"846","messageId":"847","endLine":282,"endColumn":81},{"ruleId":"844","severity":1,"message":"845","line":283,"column":81,"nodeType":"846","messageId":"847","endLine":283,"endColumn":83},{"ruleId":"848","severity":1,"message":"850","line":288,"column":31,"nodeType":"841","endLine":288,"endColumn":195},{"ruleId":"844","severity":1,"message":"845","line":288,"column":163,"nodeType":"846","messageId":"847","endLine":288,"endColumn":165},{"ruleId":"844","severity":1,"message":"845","line":291,"column":114,"nodeType":"846","messageId":"847","endLine":291,"endColumn":116},{"ruleId":"844","severity":1,"message":"845","line":292,"column":116,"nodeType":"846","messageId":"847","endLine":292,"endColumn":118},{"ruleId":"848","severity":1,"message":"850","line":297,"column":31,"nodeType":"841","endLine":297,"endColumn":167},{"ruleId":"844","severity":1,"message":"845","line":297,"column":137,"nodeType":"846","messageId":"847","endLine":297,"endColumn":139},{"ruleId":"844","severity":1,"message":"845","line":300,"column":90,"nodeType":"846","messageId":"847","endLine":300,"endColumn":92},{"ruleId":"844","severity":1,"message":"845","line":301,"column":92,"nodeType":"846","messageId":"847","endLine":301,"endColumn":94},{"ruleId":"848","severity":1,"message":"850","line":306,"column":31,"nodeType":"841","endLine":306,"endColumn":163},{"ruleId":"844","severity":1,"message":"845","line":306,"column":133,"nodeType":"846","messageId":"847","endLine":306,"endColumn":135},{"ruleId":"844","severity":1,"message":"845","line":309,"column":88,"nodeType":"846","messageId":"847","endLine":309,"endColumn":90},{"ruleId":"844","severity":1,"message":"845","line":310,"column":90,"nodeType":"846","messageId":"847","endLine":310,"endColumn":92},{"ruleId":"848","severity":1,"message":"850","line":339,"column":23,"nodeType":"841","endLine":339,"endColumn":117},{"ruleId":"844","severity":1,"message":"845","line":348,"column":62,"nodeType":"846","messageId":"847","endLine":348,"endColumn":64},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"842","line":13,"column":10,"nodeType":"828","messageId":"829","endLine":13,"endColumn":21},{"ruleId":"826","severity":1,"message":"843","line":27,"column":9,"nodeType":"828","messageId":"829","endLine":27,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":101,"column":39,"nodeType":"846","messageId":"847","endLine":101,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":138,"column":39,"nodeType":"846","messageId":"847","endLine":138,"endColumn":41},{"ruleId":"848","severity":1,"message":"849","line":169,"column":17,"nodeType":"841","endLine":169,"endColumn":267},{"ruleId":"844","severity":1,"message":"845","line":169,"column":74,"nodeType":"846","messageId":"847","endLine":169,"endColumn":76},{"ruleId":"848","severity":1,"message":"849","line":174,"column":17,"nodeType":"841","endLine":174,"endColumn":278},{"ruleId":"844","severity":1,"message":"845","line":174,"column":74,"nodeType":"846","messageId":"847","endLine":174,"endColumn":76},{"ruleId":"844","severity":1,"message":"845","line":186,"column":37,"nodeType":"846","messageId":"847","endLine":186,"endColumn":39},{"ruleId":"848","severity":1,"message":"850","line":189,"column":21,"nodeType":"841","endLine":189,"endColumn":152},{"ruleId":"848","severity":1,"message":"850","line":196,"column":21,"nodeType":"841","endLine":196,"endColumn":154},{"ruleId":"844","severity":1,"message":"845","line":202,"column":35,"nodeType":"846","messageId":"847","endLine":202,"endColumn":37},{"ruleId":"844","severity":1,"message":"845","line":223,"column":50,"nodeType":"846","messageId":"847","endLine":223,"endColumn":52},{"ruleId":"844","severity":1,"message":"845","line":223,"column":117,"nodeType":"846","messageId":"847","endLine":223,"endColumn":119},{"ruleId":"848","severity":1,"message":"850","line":224,"column":17,"nodeType":"841","endLine":224,"endColumn":116},{"ruleId":"844","severity":1,"message":"845","line":228,"column":50,"nodeType":"846","messageId":"847","endLine":228,"endColumn":52},{"ruleId":"844","severity":1,"message":"845","line":228,"column":118,"nodeType":"846","messageId":"847","endLine":228,"endColumn":120},{"ruleId":"848","severity":1,"message":"850","line":229,"column":17,"nodeType":"841","endLine":229,"endColumn":117},{"ruleId":"848","severity":1,"message":"849","line":241,"column":21,"nodeType":"841","endLine":241,"endColumn":99},{"ruleId":"848","severity":1,"message":"849","line":247,"column":21,"nodeType":"841","endLine":247,"endColumn":96},{"ruleId":"851","severity":1,"message":"852","line":248,"column":23,"nodeType":"841","endLine":248,"endColumn":85},{"ruleId":"844","severity":1,"message":"845","line":259,"column":64,"nodeType":"846","messageId":"847","endLine":259,"endColumn":66},{"ruleId":"844","severity":1,"message":"845","line":260,"column":62,"nodeType":"846","messageId":"847","endLine":260,"endColumn":64},{"ruleId":"848","severity":1,"message":"850","line":270,"column":31,"nodeType":"841","endLine":270,"endColumn":147},{"ruleId":"844","severity":1,"message":"845","line":270,"column":117,"nodeType":"846","messageId":"847","endLine":270,"endColumn":119},{"ruleId":"844","severity":1,"message":"845","line":273,"column":80,"nodeType":"846","messageId":"847","endLine":273,"endColumn":82},{"ruleId":"844","severity":1,"message":"845","line":274,"column":82,"nodeType":"846","messageId":"847","endLine":274,"endColumn":84},{"ruleId":"848","severity":1,"message":"850","line":279,"column":31,"nodeType":"841","endLine":279,"endColumn":145},{"ruleId":"844","severity":1,"message":"845","line":279,"column":115,"nodeType":"846","messageId":"847","endLine":279,"endColumn":117},{"ruleId":"844","severity":1,"message":"845","line":282,"column":79,"nodeType":"846","messageId":"847","endLine":282,"endColumn":81},{"ruleId":"844","severity":1,"message":"845","line":283,"column":81,"nodeType":"846","messageId":"847","endLine":283,"endColumn":83},{"ruleId":"848","severity":1,"message":"850","line":288,"column":31,"nodeType":"841","endLine":288,"endColumn":195},{"ruleId":"844","severity":1,"message":"845","line":288,"column":163,"nodeType":"846","messageId":"847","endLine":288,"endColumn":165},{"ruleId":"844","severity":1,"message":"845","line":291,"column":114,"nodeType":"846","messageId":"847","endLine":291,"endColumn":116},{"ruleId":"844","severity":1,"message":"845","line":292,"column":116,"nodeType":"846","messageId":"847","endLine":292,"endColumn":118},{"ruleId":"848","severity":1,"message":"850","line":297,"column":31,"nodeType":"841","endLine":297,"endColumn":167},{"ruleId":"844","severity":1,"message":"845","line":297,"column":137,"nodeType":"846","messageId":"847","endLine":297,"endColumn":139},{"ruleId":"844","severity":1,"message":"845","line":300,"column":90,"nodeType":"846","messageId":"847","endLine":300,"endColumn":92},{"ruleId":"844","severity":1,"message":"845","line":301,"column":92,"nodeType":"846","messageId":"847","endLine":301,"endColumn":94},{"ruleId":"848","severity":1,"message":"850","line":306,"column":31,"nodeType":"841","endLine":306,"endColumn":163},{"ruleId":"844","severity":1,"message":"845","line":306,"column":133,"nodeType":"846","messageId":"847","endLine":306,"endColumn":135},{"ruleId":"844","severity":1,"message":"845","line":309,"column":88,"nodeType":"846","messageId":"847","endLine":309,"endColumn":90},{"ruleId":"844","severity":1,"message":"845","line":310,"column":90,"nodeType":"846","messageId":"847","endLine":310,"endColumn":92},{"ruleId":"848","severity":1,"message":"850","line":340,"column":23,"nodeType":"841","endLine":340,"endColumn":117},{"ruleId":"844","severity":1,"message":"845","line":349,"column":62,"nodeType":"846","messageId":"847","endLine":349,"endColumn":64},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"844","severity":1,"message":"845","line":82,"column":39,"nodeType":"846","messageId":"847","endLine":82,"endColumn":41},{"ruleId":"848","severity":1,"message":"850","line":110,"column":17,"nodeType":"841","endLine":110,"endColumn":185},{"ruleId":"848","severity":1,"message":"850","line":123,"column":17,"nodeType":"841","endLine":123,"endColumn":134},{"ruleId":"848","severity":1,"message":"850","line":140,"column":17,"nodeType":"841","endLine":140,"endColumn":285},{"ruleId":"844","severity":1,"message":"845","line":140,"column":88,"nodeType":"846","messageId":"847","endLine":140,"endColumn":90},{"ruleId":"848","severity":1,"message":"850","line":145,"column":17,"nodeType":"841","endLine":145,"endColumn":300},{"ruleId":"844","severity":1,"message":"845","line":145,"column":88,"nodeType":"846","messageId":"847","endLine":145,"endColumn":90},{"ruleId":"848","severity":1,"message":"850","line":150,"column":13,"nodeType":"841","endLine":150,"endColumn":134},{"ruleId":"848","severity":1,"message":"850","line":160,"column":21,"nodeType":"841","endLine":160,"endColumn":104},{"ruleId":"848","severity":1,"message":"850","line":166,"column":21,"nodeType":"841","endLine":166,"endColumn":102},{"ruleId":"844","severity":1,"message":"845","line":177,"column":60,"nodeType":"846","messageId":"847","endLine":177,"endColumn":62},{"ruleId":"848","severity":1,"message":"850","line":180,"column":17,"nodeType":"841","endLine":180,"endColumn":97},{"ruleId":"844","severity":1,"message":"845","line":209,"column":60,"nodeType":"846","messageId":"847","endLine":209,"endColumn":62},{"ruleId":"848","severity":1,"message":"850","line":217,"column":25,"nodeType":"841","endLine":217,"endColumn":138},{"ruleId":"844","severity":1,"message":"845","line":217,"column":108,"nodeType":"846","messageId":"847","endLine":217,"endColumn":110},{"ruleId":"844","severity":1,"message":"845","line":221,"column":78,"nodeType":"846","messageId":"847","endLine":221,"endColumn":80},{"ruleId":"844","severity":1,"message":"845","line":222,"column":80,"nodeType":"846","messageId":"847","endLine":222,"endColumn":82},{"ruleId":"826","severity":1,"message":"830","line":1,"column":17,"nodeType":"828","messageId":"829","endLine":1,"endColumn":26},{"ruleId":"826","severity":1,"message":"834","line":3,"column":10,"nodeType":"828","messageId":"829","endLine":3,"endColumn":21},{"ruleId":"826","severity":1,"message":"833","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"853","line":12,"column":11,"nodeType":"828","messageId":"829","endLine":12,"endColumn":16},{"ruleId":"844","severity":1,"message":"845","line":15,"column":16,"nodeType":"846","messageId":"847","endLine":15,"endColumn":18},{"ruleId":"854","severity":1,"message":"855","line":17,"column":6,"nodeType":"856","endLine":17,"endColumn":8,"suggestions":"857"},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":14,"column":9,"nodeType":"828","messageId":"829","endLine":14,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":38,"column":15,"nodeType":"841","endLine":38,"endColumn":80},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"858","line":9,"column":66,"nodeType":"828","messageId":"829","endLine":9,"endColumn":83},{"ruleId":"826","severity":1,"message":"843","line":18,"column":9,"nodeType":"828","messageId":"829","endLine":18,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":28,"column":20,"nodeType":"846","messageId":"847","endLine":28,"endColumn":22},{"ruleId":"844","severity":1,"message":"845","line":37,"column":36,"nodeType":"846","messageId":"847","endLine":37,"endColumn":38},{"ruleId":"826","severity":1,"message":"859","line":58,"column":15,"nodeType":"828","messageId":"829","endLine":58,"endColumn":25},{"ruleId":"826","severity":1,"message":"860","line":60,"column":15,"nodeType":"828","messageId":"829","endLine":60,"endColumn":27},{"ruleId":"826","severity":1,"message":"861","line":62,"column":15,"nodeType":"828","messageId":"829","endLine":62,"endColumn":34},{"ruleId":"848","severity":1,"message":"850","line":70,"column":21,"nodeType":"841","endLine":70,"endColumn":62},{"ruleId":"848","severity":1,"message":"850","line":92,"column":25,"nodeType":"841","endLine":92,"endColumn":136},{"ruleId":"848","severity":1,"message":"850","line":98,"column":25,"nodeType":"841","endLine":98,"endColumn":155},{"ruleId":"826","severity":1,"message":"862","line":18,"column":10,"nodeType":"828","messageId":"829","endLine":18,"endColumn":17},{"ruleId":"844","severity":1,"message":"845","line":66,"column":39,"nodeType":"846","messageId":"847","endLine":66,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":72,"column":46,"nodeType":"846","messageId":"847","endLine":72,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":75,"column":22,"nodeType":"846","messageId":"847","endLine":75,"endColumn":24},{"ruleId":"848","severity":1,"message":"850","line":105,"column":23,"nodeType":"841","endLine":105,"endColumn":105},{"ruleId":"826","severity":1,"message":"863","line":16,"column":8,"nodeType":"828","messageId":"829","endLine":16,"endColumn":9},{"ruleId":"826","severity":1,"message":"862","line":19,"column":10,"nodeType":"828","messageId":"829","endLine":19,"endColumn":17},{"ruleId":"844","severity":1,"message":"845","line":65,"column":39,"nodeType":"846","messageId":"847","endLine":65,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":71,"column":46,"nodeType":"846","messageId":"847","endLine":71,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":74,"column":22,"nodeType":"846","messageId":"847","endLine":74,"endColumn":24},{"ruleId":"864","severity":2,"message":"865","line":97,"column":11,"nodeType":"828","endLine":97,"endColumn":20},{"ruleId":"854","severity":1,"message":"866","line":107,"column":14,"nodeType":"856","endLine":107,"endColumn":22,"suggestions":"867"},{"ruleId":"848","severity":1,"message":"850","line":115,"column":23,"nodeType":"841","endLine":115,"endColumn":106},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"826","severity":1,"message":"868","line":36,"column":15,"nodeType":"828","messageId":"829","endLine":36,"endColumn":20},{"ruleId":"826","severity":1,"message":"869","line":37,"column":15,"nodeType":"828","messageId":"829","endLine":37,"endColumn":27},{"ruleId":"848","severity":1,"message":"850","line":41,"column":15,"nodeType":"841","endLine":41,"endColumn":80},{"ruleId":"826","severity":1,"message":"870","line":9,"column":22,"nodeType":"828","messageId":"829","endLine":9,"endColumn":37},{"ruleId":"826","severity":1,"message":"871","line":9,"column":39,"nodeType":"828","messageId":"829","endLine":9,"endColumn":54},{"ruleId":"826","severity":1,"message":"862","line":18,"column":10,"nodeType":"828","messageId":"829","endLine":18,"endColumn":17},{"ruleId":"844","severity":1,"message":"845","line":43,"column":39,"nodeType":"846","messageId":"847","endLine":43,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":49,"column":46,"nodeType":"846","messageId":"847","endLine":49,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":52,"column":22,"nodeType":"846","messageId":"847","endLine":52,"endColumn":24},{"ruleId":"826","severity":1,"message":"870","line":9,"column":22,"nodeType":"828","messageId":"829","endLine":9,"endColumn":37},{"ruleId":"826","severity":1,"message":"871","line":9,"column":39,"nodeType":"828","messageId":"829","endLine":9,"endColumn":54},{"ruleId":"826","severity":1,"message":"863","line":16,"column":8,"nodeType":"828","messageId":"829","endLine":16,"endColumn":9},{"ruleId":"826","severity":1,"message":"862","line":19,"column":10,"nodeType":"828","messageId":"829","endLine":19,"endColumn":17},{"ruleId":"844","severity":1,"message":"845","line":43,"column":39,"nodeType":"846","messageId":"847","endLine":43,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":49,"column":46,"nodeType":"846","messageId":"847","endLine":49,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":52,"column":22,"nodeType":"846","messageId":"847","endLine":52,"endColumn":24},{"ruleId":"864","severity":2,"message":"865","line":75,"column":11,"nodeType":"828","endLine":75,"endColumn":20},{"ruleId":"854","severity":1,"message":"866","line":85,"column":14,"nodeType":"856","endLine":85,"endColumn":22,"suggestions":"872"},{"ruleId":"826","severity":1,"message":"873","line":7,"column":8,"nodeType":"828","messageId":"829","endLine":7,"endColumn":14},{"ruleId":"826","severity":1,"message":"874","line":13,"column":10,"nodeType":"828","messageId":"829","endLine":13,"endColumn":28},{"ruleId":"826","severity":1,"message":"842","line":14,"column":10,"nodeType":"828","messageId":"829","endLine":14,"endColumn":21},{"ruleId":"826","severity":1,"message":"863","line":16,"column":8,"nodeType":"828","messageId":"829","endLine":16,"endColumn":9},{"ruleId":"826","severity":1,"message":"862","line":19,"column":10,"nodeType":"828","messageId":"829","endLine":19,"endColumn":17},{"ruleId":"826","severity":1,"message":"875","line":22,"column":9,"nodeType":"828","messageId":"829","endLine":22,"endColumn":29},{"ruleId":"844","severity":1,"message":"845","line":93,"column":39,"nodeType":"846","messageId":"847","endLine":93,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":99,"column":46,"nodeType":"846","messageId":"847","endLine":99,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":102,"column":22,"nodeType":"846","messageId":"847","endLine":102,"endColumn":24},{"ruleId":"864","severity":2,"message":"865","line":128,"column":11,"nodeType":"828","endLine":128,"endColumn":20},{"ruleId":"854","severity":1,"message":"866","line":135,"column":14,"nodeType":"856","endLine":135,"endColumn":22,"suggestions":"876"},{"ruleId":"848","severity":1,"message":"850","line":143,"column":23,"nodeType":"841","endLine":143,"endColumn":106},{"ruleId":"844","severity":1,"message":"845","line":220,"column":93,"nodeType":"846","messageId":"847","endLine":220,"endColumn":95},{"ruleId":"844","severity":1,"message":"845","line":220,"column":129,"nodeType":"846","messageId":"847","endLine":220,"endColumn":131},{"ruleId":"826","severity":1,"message":"830","line":1,"column":17,"nodeType":"828","messageId":"829","endLine":1,"endColumn":26},{"ruleId":"826","severity":1,"message":"873","line":7,"column":8,"nodeType":"828","messageId":"829","endLine":7,"endColumn":14},{"ruleId":"826","severity":1,"message":"874","line":13,"column":10,"nodeType":"828","messageId":"829","endLine":13,"endColumn":28},{"ruleId":"826","severity":1,"message":"877","line":16,"column":8,"nodeType":"828","messageId":"829","endLine":16,"endColumn":20},{"ruleId":"826","severity":1,"message":"862","line":19,"column":10,"nodeType":"828","messageId":"829","endLine":19,"endColumn":17},{"ruleId":"826","severity":1,"message":"875","line":21,"column":9,"nodeType":"828","messageId":"829","endLine":21,"endColumn":29},{"ruleId":"844","severity":1,"message":"845","line":77,"column":39,"nodeType":"846","messageId":"847","endLine":77,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":83,"column":46,"nodeType":"846","messageId":"847","endLine":83,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":86,"column":22,"nodeType":"846","messageId":"847","endLine":86,"endColumn":24},{"ruleId":"848","severity":1,"message":"850","line":119,"column":23,"nodeType":"841","endLine":119,"endColumn":104},{"ruleId":"844","severity":1,"message":"845","line":195,"column":93,"nodeType":"846","messageId":"847","endLine":195,"endColumn":95},{"ruleId":"844","severity":1,"message":"845","line":195,"column":129,"nodeType":"846","messageId":"847","endLine":195,"endColumn":131},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":36,"column":15,"nodeType":"841","endLine":36,"endColumn":80},{"ruleId":"826","severity":1,"message":"873","line":7,"column":8,"nodeType":"828","messageId":"829","endLine":7,"endColumn":14},{"ruleId":"826","severity":1,"message":"878","line":13,"column":10,"nodeType":"828","messageId":"829","endLine":13,"endColumn":28},{"ruleId":"826","severity":1,"message":"842","line":14,"column":10,"nodeType":"828","messageId":"829","endLine":14,"endColumn":21},{"ruleId":"826","severity":1,"message":"863","line":16,"column":8,"nodeType":"828","messageId":"829","endLine":16,"endColumn":9},{"ruleId":"826","severity":1,"message":"862","line":19,"column":10,"nodeType":"828","messageId":"829","endLine":19,"endColumn":17},{"ruleId":"826","severity":1,"message":"879","line":22,"column":9,"nodeType":"828","messageId":"829","endLine":22,"endColumn":29},{"ruleId":"844","severity":1,"message":"845","line":93,"column":39,"nodeType":"846","messageId":"847","endLine":93,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":99,"column":46,"nodeType":"846","messageId":"847","endLine":99,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":102,"column":22,"nodeType":"846","messageId":"847","endLine":102,"endColumn":24},{"ruleId":"864","severity":2,"message":"865","line":128,"column":11,"nodeType":"828","endLine":128,"endColumn":20},{"ruleId":"854","severity":1,"message":"866","line":135,"column":14,"nodeType":"856","endLine":135,"endColumn":22,"suggestions":"880"},{"ruleId":"848","severity":1,"message":"850","line":143,"column":23,"nodeType":"841","endLine":143,"endColumn":106},{"ruleId":"844","severity":1,"message":"845","line":220,"column":93,"nodeType":"846","messageId":"847","endLine":220,"endColumn":95},{"ruleId":"844","severity":1,"message":"845","line":220,"column":129,"nodeType":"846","messageId":"847","endLine":220,"endColumn":131},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":14,"column":9,"nodeType":"828","messageId":"829","endLine":14,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":38,"column":15,"nodeType":"841","endLine":38,"endColumn":80},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"881","line":9,"column":66,"nodeType":"828","messageId":"829","endLine":9,"endColumn":83},{"ruleId":"826","severity":1,"message":"843","line":18,"column":9,"nodeType":"828","messageId":"829","endLine":18,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":28,"column":20,"nodeType":"846","messageId":"847","endLine":28,"endColumn":22},{"ruleId":"844","severity":1,"message":"845","line":37,"column":36,"nodeType":"846","messageId":"847","endLine":37,"endColumn":38},{"ruleId":"826","severity":1,"message":"859","line":58,"column":15,"nodeType":"828","messageId":"829","endLine":58,"endColumn":25},{"ruleId":"826","severity":1,"message":"860","line":60,"column":15,"nodeType":"828","messageId":"829","endLine":60,"endColumn":27},{"ruleId":"826","severity":1,"message":"861","line":62,"column":15,"nodeType":"828","messageId":"829","endLine":62,"endColumn":34},{"ruleId":"848","severity":1,"message":"850","line":70,"column":21,"nodeType":"841","endLine":70,"endColumn":62},{"ruleId":"848","severity":1,"message":"850","line":92,"column":25,"nodeType":"841","endLine":92,"endColumn":162},{"ruleId":"848","severity":1,"message":"850","line":98,"column":25,"nodeType":"841","endLine":98,"endColumn":155},{"ruleId":"826","severity":1,"message":"830","line":1,"column":27,"nodeType":"828","messageId":"829","endLine":1,"endColumn":36},{"ruleId":"826","severity":1,"message":"882","line":3,"column":10,"nodeType":"828","messageId":"829","endLine":3,"endColumn":22},{"ruleId":"826","severity":1,"message":"883","line":13,"column":46,"nodeType":"828","messageId":"829","endLine":13,"endColumn":63},{"ruleId":"826","severity":1,"message":"884","line":13,"column":65,"nodeType":"828","messageId":"829","endLine":13,"endColumn":82},{"ruleId":"826","severity":1,"message":"862","line":18,"column":10,"nodeType":"828","messageId":"829","endLine":18,"endColumn":17},{"ruleId":"826","severity":1,"message":"843","line":21,"column":9,"nodeType":"828","messageId":"829","endLine":21,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":73,"column":39,"nodeType":"846","messageId":"847","endLine":73,"endColumn":41},{"ruleId":"844","severity":1,"message":"845","line":79,"column":46,"nodeType":"846","messageId":"847","endLine":79,"endColumn":48},{"ruleId":"844","severity":1,"message":"845","line":82,"column":22,"nodeType":"846","messageId":"847","endLine":82,"endColumn":24},{"ruleId":"848","severity":1,"message":"850","line":117,"column":21,"nodeType":"841","endLine":117,"endColumn":99},{"ruleId":"826","severity":1,"message":"834","line":2,"column":23,"nodeType":"828","messageId":"829","endLine":2,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":14,"column":9,"nodeType":"828","messageId":"829","endLine":14,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":24,"column":20,"nodeType":"846","messageId":"847","endLine":24,"endColumn":22},{"ruleId":"844","severity":1,"message":"845","line":32,"column":27,"nodeType":"846","messageId":"847","endLine":32,"endColumn":29},{"ruleId":"848","severity":1,"message":"850","line":53,"column":21,"nodeType":"841","endLine":53,"endColumn":146},{"ruleId":"848","severity":1,"message":"850","line":59,"column":21,"nodeType":"841","endLine":59,"endColumn":77},{"ruleId":"848","severity":1,"message":"850","line":65,"column":21,"nodeType":"841","endLine":65,"endColumn":77},{"ruleId":"848","severity":1,"message":"850","line":71,"column":21,"nodeType":"841","endLine":71,"endColumn":150},{"ruleId":"848","severity":1,"message":"850","line":79,"column":13,"nodeType":"841","endLine":79,"endColumn":91},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"885","line":9,"column":84,"nodeType":"828","messageId":"829","endLine":9,"endColumn":97},{"ruleId":"826","severity":1,"message":"886","line":9,"column":99,"nodeType":"828","messageId":"829","endLine":9,"endColumn":115},{"ruleId":"826","severity":1,"message":"843","line":17,"column":9,"nodeType":"828","messageId":"829","endLine":17,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":27,"column":20,"nodeType":"846","messageId":"847","endLine":27,"endColumn":22},{"ruleId":"844","severity":1,"message":"845","line":36,"column":28,"nodeType":"846","messageId":"847","endLine":36,"endColumn":30},{"ruleId":"848","severity":1,"message":"850","line":57,"column":21,"nodeType":"841","endLine":57,"endColumn":70},{"ruleId":"848","severity":1,"message":"850","line":66,"column":17,"nodeType":"841","endLine":66,"endColumn":118},{"ruleId":"848","severity":1,"message":"850","line":88,"column":25,"nodeType":"841","endLine":88,"endColumn":163},{"ruleId":"848","severity":1,"message":"850","line":94,"column":25,"nodeType":"841","endLine":94,"endColumn":154},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"834","line":3,"column":23,"nodeType":"828","messageId":"829","endLine":3,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"826","severity":1,"message":"869","line":37,"column":15,"nodeType":"828","messageId":"829","endLine":37,"endColumn":27},{"ruleId":"848","severity":1,"message":"850","line":41,"column":15,"nodeType":"841","endLine":41,"endColumn":80},{"ruleId":"826","severity":1,"message":"830","line":1,"column":17,"nodeType":"828","messageId":"829","endLine":1,"endColumn":26},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"887","line":9,"column":52,"nodeType":"828","messageId":"829","endLine":9,"endColumn":76},{"ruleId":"848","severity":1,"message":"850","line":37,"column":13,"nodeType":"841","endLine":37,"endColumn":107},{"ruleId":"848","severity":1,"message":"850","line":63,"column":15,"nodeType":"841","endLine":63,"endColumn":112},{"ruleId":"826","severity":1,"message":"830","line":1,"column":17,"nodeType":"828","messageId":"829","endLine":1,"endColumn":26},{"ruleId":"826","severity":1,"message":"831","line":2,"column":10,"nodeType":"828","messageId":"829","endLine":2,"endColumn":14},{"ruleId":"826","severity":1,"message":"888","line":9,"column":52,"nodeType":"828","messageId":"829","endLine":9,"endColumn":77},{"ruleId":"848","severity":1,"message":"850","line":67,"column":15,"nodeType":"841","endLine":67,"endColumn":113},{"ruleId":"889","severity":1,"message":"890","line":12,"column":22,"nodeType":"891","messageId":"892","endLine":12,"endColumn":42},{"ruleId":"889","severity":1,"message":"890","line":19,"column":24,"nodeType":"891","messageId":"892","endLine":19,"endColumn":44},{"ruleId":"889","severity":1,"message":"890","line":29,"column":30,"nodeType":"891","messageId":"892","endLine":29,"endColumn":50},{"ruleId":"822","replacedBy":"893"},{"ruleId":"824","replacedBy":"894"},{"ruleId":"826","severity":1,"message":"834","line":2,"column":23,"nodeType":"828","messageId":"829","endLine":2,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":14,"column":9,"nodeType":"828","messageId":"829","endLine":14,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":23,"column":20,"nodeType":"846","messageId":"847","endLine":23,"endColumn":22},{"ruleId":"848","severity":1,"message":"850","line":51,"column":21,"nodeType":"841","endLine":51,"endColumn":102},{"ruleId":"848","severity":1,"message":"850","line":57,"column":21,"nodeType":"841","endLine":57,"endColumn":77},{"ruleId":"848","severity":1,"message":"850","line":63,"column":21,"nodeType":"841","endLine":63,"endColumn":77},{"ruleId":"848","severity":1,"message":"850","line":69,"column":21,"nodeType":"841","endLine":69,"endColumn":152},{"ruleId":"848","severity":1,"message":"850","line":77,"column":13,"nodeType":"841","endLine":77,"endColumn":60},{"ruleId":"826","severity":1,"message":"834","line":2,"column":23,"nodeType":"828","messageId":"829","endLine":2,"endColumn":34},{"ruleId":"826","severity":1,"message":"843","line":14,"column":9,"nodeType":"828","messageId":"829","endLine":14,"endColumn":20},{"ruleId":"844","severity":1,"message":"845","line":23,"column":20,"nodeType":"846","messageId":"847","endLine":23,"endColumn":22},{"ruleId":"848","severity":1,"message":"849","line":43,"column":17,"nodeType":"841","endLine":43,"endColumn":52},{"ruleId":"848","severity":1,"message":"850","line":55,"column":25,"nodeType":"841","endLine":55,"endColumn":129},{"ruleId":"848","severity":1,"message":"850","line":61,"column":25,"nodeType":"841","endLine":61,"endColumn":156},{"ruleId":"826","severity":1,"message":"895","line":1,"column":38,"nodeType":"828","messageId":"829","endLine":1,"endColumn":44},{"ruleId":"826","severity":1,"message":"837","line":7,"column":18,"nodeType":"828","messageId":"829","endLine":7,"endColumn":22},{"ruleId":"826","severity":1,"message":"871","line":10,"column":80,"nodeType":"828","messageId":"829","endLine":10,"endColumn":95},{"ruleId":"826","severity":1,"message":"896","line":10,"column":97,"nodeType":"828","messageId":"829","endLine":10,"endColumn":112},{"ruleId":"826","severity":1,"message":"883","line":13,"column":68,"nodeType":"828","messageId":"829","endLine":13,"endColumn":85},{"ruleId":"826","severity":1,"message":"884","line":13,"column":87,"nodeType":"828","messageId":"829","endLine":13,"endColumn":104},{"ruleId":"826","severity":1,"message":"897","line":14,"column":10,"nodeType":"828","messageId":"829","endLine":14,"endColumn":21},{"ruleId":"826","severity":1,"message":"862","line":19,"column":10,"nodeType":"828","messageId":"829","endLine":19,"endColumn":17},{"ruleId":"826","severity":1,"message":"843","line":21,"column":9,"nodeType":"828","messageId":"829","endLine":21,"endColumn":20},{"ruleId":"826","severity":1,"message":"898","line":27,"column":9,"nodeType":"828","messageId":"829","endLine":27,"endColumn":21},{"ruleId":"826","severity":1,"message":"899","line":29,"column":9,"nodeType":"828","messageId":"829","endLine":29,"endColumn":37},{"ruleId":"844","severity":1,"message":"845","line":73,"column":38,"nodeType":"846","messageId":"847","endLine":73,"endColumn":40},{"ruleId":"844","severity":1,"message":"845","line":77,"column":44,"nodeType":"846","messageId":"847","endLine":77,"endColumn":46},{"ruleId":"844","severity":1,"message":"845","line":80,"column":21,"nodeType":"846","messageId":"847","endLine":80,"endColumn":23},{"ruleId":"864","severity":2,"message":"865","line":109,"column":11,"nodeType":"828","endLine":109,"endColumn":20},{"ruleId":"854","severity":1,"message":"900","line":114,"column":14,"nodeType":"856","endLine":114,"endColumn":30,"suggestions":"901"},{"ruleId":"844","severity":1,"message":"845","line":28,"column":37,"nodeType":"846","messageId":"847","endLine":28,"endColumn":39},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":19,"column":9,"nodeType":"841","endLine":19,"endColumn":55},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":21,"column":11,"nodeType":"841","endLine":21,"endColumn":88},{"ruleId":"848","severity":1,"message":"850","line":32,"column":15,"nodeType":"841","endLine":32,"endColumn":51},{"ruleId":"848","severity":1,"message":"850","line":42,"column":15,"nodeType":"841","endLine":42,"endColumn":38},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"849","line":23,"column":13,"nodeType":"841","endLine":23,"endColumn":25},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"849","line":23,"column":15,"nodeType":"841","endLine":23,"endColumn":67},{"ruleId":"848","severity":1,"message":"850","line":27,"column":13,"nodeType":"841","endLine":27,"endColumn":34},{"ruleId":"848","severity":1,"message":"849","line":36,"column":19,"nodeType":"841","endLine":36,"endColumn":54},{"ruleId":"848","severity":1,"message":"849","line":39,"column":19,"nodeType":"841","endLine":39,"endColumn":66},{"ruleId":"848","severity":1,"message":"849","line":52,"column":19,"nodeType":"841","endLine":52,"endColumn":54},{"ruleId":"848","severity":1,"message":"849","line":55,"column":19,"nodeType":"841","endLine":55,"endColumn":66},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":20,"column":11,"nodeType":"841","endLine":20,"endColumn":47},{"ruleId":"848","severity":1,"message":"850","line":33,"column":11,"nodeType":"841","endLine":33,"endColumn":47},{"ruleId":"848","severity":1,"message":"850","line":46,"column":11,"nodeType":"841","endLine":46,"endColumn":47},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"849","line":23,"column":13,"nodeType":"841","endLine":23,"endColumn":25},{"ruleId":"826","severity":1,"message":"873","line":5,"column":8,"nodeType":"828","messageId":"829","endLine":5,"endColumn":14},{"ruleId":"826","severity":1,"message":"902","line":6,"column":10,"nodeType":"828","messageId":"829","endLine":6,"endColumn":17},{"ruleId":"826","severity":1,"message":"903","line":7,"column":10,"nodeType":"828","messageId":"829","endLine":7,"endColumn":21},{"ruleId":"826","severity":1,"message":"904","line":8,"column":10,"nodeType":"828","messageId":"829","endLine":8,"endColumn":22},{"ruleId":"826","severity":1,"message":"905","line":8,"column":24,"nodeType":"828","messageId":"829","endLine":8,"endColumn":40},{"ruleId":"826","severity":1,"message":"906","line":13,"column":9,"nodeType":"828","messageId":"829","endLine":13,"endColumn":17},{"ruleId":"826","severity":1,"message":"907","line":14,"column":11,"nodeType":"828","messageId":"829","endLine":14,"endColumn":12},{"ruleId":"826","severity":1,"message":"843","line":15,"column":9,"nodeType":"828","messageId":"829","endLine":15,"endColumn":20},{"ruleId":"848","severity":1,"message":"850","line":23,"column":13,"nodeType":"841","endLine":23,"endColumn":41},{"ruleId":"826","severity":1,"message":"908","line":9,"column":9,"nodeType":"828","messageId":"829","endLine":9,"endColumn":17},{"ruleId":"848","severity":1,"message":"850","line":24,"column":11,"nodeType":"841","endLine":24,"endColumn":41},{"ruleId":"848","severity":1,"message":"850","line":25,"column":11,"nodeType":"841","endLine":25,"endColumn":41},{"ruleId":"848","severity":1,"message":"850","line":26,"column":11,"nodeType":"841","endLine":26,"endColumn":88},"no-native-reassign",["909"],"no-negated-in-lhs",["910"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'useNavigate' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useTranslation' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Yup' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'selectImage' is defined but never used.","'currentUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'langs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delegate' and 'props.options'. Either include them or remove the dependency array.","ArrayExpression",["911"],"'productSortRemove' is defined but never used.","'cost_price' is assigned a value but never used.","'manage_stock' is assigned a value but never used.","'low_stock_threshold' is assigned a value but never used.","'loading' is assigned a value but never used.","'_' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useEffect\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array. Outer scope values like 'detail' aren't valid dependencies because mutating them doesn't re-render the component.",["912"],"'email' is assigned a value but never used.","'phone_number' is assigned a value but never used.","'MapAddressField' is defined but never used.","'InputFieldImage' is defined but never used.",["913"],"'config' is defined but never used.","'productManageStock' is defined but never used.","'isProductManageStock' is assigned a value but never used.",["914"],"'CustomSelect' is defined but never used.","'serviceManageStock' is defined but never used.","'isServiceManageStock' is assigned a value but never used.",["915"],"'serviceSortRemove' is defined but never used.","'unwrapResult' is defined but never used.","'clientGridViewApi' is defined but never used.","'clientListViewApi' is defined but never used.","'clientViewApi' is defined but never used.","'clientSortRemove' is defined but never used.","'supplierSuggetionListApi' is defined but never used.","'categoriesuggetionListApi' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["909"],["910"],"'useRef' is defined but never used.","'DatePickerField' is defined but never used.","'removeImage' is defined but never used.","'serverErrors' is assigned a value but never used.","'handleCloseClientDetailModal' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'detail'. Either exclude it or remove the dependency array. Outer scope values like 'detail' aren't valid dependencies because mutating them doesn't re-render the component.",["916"],"'ucfirst' is defined but never used.","'swalConfirm' is defined but never used.","'clientDelete' is defined but never used.","'openclientDetail' is defined but never used.","'dispatch' is assigned a value but never used.","'t' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"917","fix":"918"},{"desc":"919","fix":"920"},{"desc":"919","fix":"921"},{"desc":"919","fix":"922"},{"desc":"919","fix":"923"},{"desc":"924","fix":"925"},"Update the dependencies array to be: [delegate, props.options]",{"range":"926","text":"927"},"Update the dependencies array to be: [formik]",{"range":"928","text":"929"},{"range":"930","text":"929"},{"range":"931","text":"929"},{"range":"932","text":"929"},"Update the dependencies array to be: [status]",{"range":"933","text":"934"},[415,417],"[delegate, props.options]",[4344,4352],"[formik]",[3202,3210],[5862,5870],[5864,5872],[4899,4915],"[status]"]